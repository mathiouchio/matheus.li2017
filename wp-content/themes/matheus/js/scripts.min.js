/*!
 * jQuery JavaScript Library v3.2.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2017-03-20T18:59Z
 */
!function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? // For CommonJS and CommonJS-like environments where a proper `window`
    // is present, execute the factory and get jQuery.
    // For environments that do not have a `window` with a `document`
    // (such as Node.js), expose a factory as module.exports.
    // This accentuates the need for the creation of a real `window`.
    // e.g. var jQuery = require("jquery")(window);
    // See ticket #14549 for more info.
    module.exports = e.document ? t(e, !0) : function(e) {
        if (!e.document) throw new Error("jQuery requires a window with a document");
        return t(e);
    } : t(e);
}("undefined" != typeof window ? window : this, function(e, t) {
    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
    // enough that all such attempts are guarded in a try block.
    "use strict";
    function n(e, t) {
        t = t || ne;
        var n = t.createElement("script");
        n.text = e, t.head.appendChild(n).parentNode.removeChild(n);
    }
    function r(e) {
        // Support: real iOS 8.2 only (not reproducible in simulator)
        // `in` check used to prevent JIT error (gh-2145)
        // hasOwn isn't used here due to false negatives
        // regarding Nodelist length in IE
        var t = !!e && "length" in e && e.length, n = he.type(e);
        return "function" !== n && !he.isWindow(e) && ("array" === n || 0 === t || "number" == typeof t && t > 0 && t - 1 in e);
    }
    function o(e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
    }
    // Implement the identical functionality for filter and not
    function i(e, t, n) {
        // Single element
        // Arraylike of elements (jQuery, arguments, Array)
        // Simple selector that can be filtered directly, removing non-Elements
        // Complex selector, compare the two sets, removing non-Elements
        return he.isFunction(t) ? he.grep(e, function(e, r) {
            return !!t.call(e, r, e) !== n;
        }) : t.nodeType ? he.grep(e, function(e) {
            return e === t !== n;
        }) : "string" != typeof t ? he.grep(e, function(e) {
            return se.call(t, e) > -1 !== n;
        }) : _e.test(t) ? he.filter(t, e, n) : (t = he.filter(t, e), he.grep(e, function(e) {
            return se.call(t, e) > -1 !== n && 1 === e.nodeType;
        }));
    }
    function a(e, t) {
        for (;(e = e[t]) && 1 !== e.nodeType; ) ;
        return e;
    }
    // Convert String-formatted options into Object-formatted ones
    function s(e) {
        var t = {};
        return he.each(e.match(De) || [], function(e, n) {
            t[n] = !0;
        }), t;
    }
    function u(e) {
        return e;
    }
    function l(e) {
        throw e;
    }
    function c(e, t, n, r) {
        var o;
        try {
            // Check for promise aspect first to privilege synchronous behavior
            e && he.isFunction(o = e.promise) ? o.call(e).done(t).fail(n) : e && he.isFunction(o = e.then) ? o.call(e, t, n) : // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
            // * false: [ value ].slice( 0 ) => resolve( value )
            // * true: [ value ].slice( 1 ) => resolve()
            t.apply(void 0, [ e ].slice(r));
        } catch (e) {
            // Support: Android 4.0 only
            // Strict mode functions invoked without .call/.apply get global-object context
            n.apply(void 0, [ e ]);
        }
    }
    // The ready event handler and self cleanup method
    function p() {
        ne.removeEventListener("DOMContentLoaded", p), e.removeEventListener("load", p), 
        he.ready();
    }
    function d() {
        this.expando = he.expando + d.uid++;
    }
    function f(e) {
        // Only convert to a number if it doesn't change the string
        return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : Me.test(e) ? JSON.parse(e) : e);
    }
    function h(e, t, n) {
        var r;
        // If nothing was found internally, try to fetch any
        // data from the HTML5 data-* attribute
        if (void 0 === n && 1 === e.nodeType) if (r = "data-" + t.replace(je, "-$&").toLowerCase(), 
        "string" == typeof (n = e.getAttribute(r))) {
            try {
                n = f(n);
            } catch (e) {}
            // Make sure we set the data so it isn't changed later
            Fe.set(e, t, n);
        } else n = void 0;
        return n;
    }
    function m(e, t, n, r) {
        var o, i = 1, a = 20, s = r ? function() {
            return r.cur();
        } : function() {
            return he.css(e, t, "");
        }, u = s(), l = n && n[3] || (he.cssNumber[t] ? "" : "px"), // Starting value computation is required for potential unit mismatches
        c = (he.cssNumber[t] || "px" !== l && +u) && Ue.exec(he.css(e, t));
        if (c && c[3] !== l) {
            // Trust units reported by jQuery.css
            l = l || c[3], // Make sure we update the tween properties later on
            n = n || [], // Iteratively approximate from a nonzero starting point
            c = +u || 1;
            do {
                // If previous iteration zeroed out, double until we get *something*.
                // Use string for doubling so we don't accidentally see scale as unchanged below
                i = i || ".5", // Adjust and apply
                c /= i, he.style(e, t, c + l);
            } while (i !== (i = s() / u) && 1 !== i && --a);
        }
        // Apply relative offset (+=/-=) if specified
        return n && (c = +c || +u || 0, o = n[1] ? c + (n[1] + 1) * n[2] : +n[2], r && (r.unit = l, 
        r.start = c, r.end = o)), o;
    }
    function g(e) {
        var t, n = e.ownerDocument, r = e.nodeName, o = We[r];
        return o || (t = n.body.appendChild(n.createElement(r)), o = he.css(t, "display"), 
        t.parentNode.removeChild(t), "none" === o && (o = "block"), We[r] = o, o);
    }
    function v(e, t) {
        // Determine new display value for elements that need to change
        for (var n, r, o = [], i = 0, a = e.length; i < a; i++) r = e[i], r.style && (n = r.style.display, 
        t ? (// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
        // check is required in this first loop unless we have a nonempty display value (either
        // inline or about-to-be-restored)
        "none" === n && (o[i] = Oe.get(r, "display") || null, o[i] || (r.style.display = "")), 
        "" === r.style.display && qe(r) && (o[i] = g(r))) : "none" !== n && (o[i] = "none", 
        // Remember what we're overwriting
        Oe.set(r, "display", n)));
        // Set the display of the elements in a second loop to avoid constant reflow
        for (i = 0; i < a; i++) null != o[i] && (e[i].style.display = o[i]);
        return e;
    }
    function y(e, t) {
        // Support: IE <=9 - 11 only
        // Use typeof to avoid zero-argument method invocation on host objects (#15151)
        var n;
        return n = void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t || "*") : void 0 !== e.querySelectorAll ? e.querySelectorAll(t || "*") : [], 
        void 0 === t || t && o(e, t) ? he.merge([ e ], n) : n;
    }
    // Mark scripts as having already been evaluated
    function b(e, t) {
        for (var n = 0, r = e.length; n < r; n++) Oe.set(e[n], "globalEval", !t || Oe.get(t[n], "globalEval"));
    }
    function x(e, t, n, r, o) {
        for (var i, a, s, u, l, c, p = t.createDocumentFragment(), d = [], f = 0, h = e.length; f < h; f++) if ((i = e[f]) || 0 === i) // Add nodes directly
        if ("object" === he.type(i)) // Support: Android <=4.0 only, PhantomJS 1 only
        // push.apply(_, arraylike) throws on ancient WebKit
        he.merge(d, i.nodeType ? [ i ] : i); else if (Xe.test(i)) {
            for (a = a || p.appendChild(t.createElement("div")), // Deserialize a standard representation
            s = (ze.exec(i) || [ "", "" ])[1].toLowerCase(), u = $e[s] || $e._default, a.innerHTML = u[1] + he.htmlPrefilter(i) + u[2], 
            // Descend through wrappers to the right content
            c = u[0]; c--; ) a = a.lastChild;
            // Support: Android <=4.0 only, PhantomJS 1 only
            // push.apply(_, arraylike) throws on ancient WebKit
            he.merge(d, a.childNodes), // Remember the top-level container
            a = p.firstChild, // Ensure the created nodes are orphaned (#12392)
            a.textContent = "";
        } else d.push(t.createTextNode(i));
        for (// Remove wrapper from fragment
        p.textContent = "", f = 0; i = d[f++]; ) // Skip elements already in the context collection (trac-4087)
        if (r && he.inArray(i, r) > -1) o && o.push(i); else // Capture executables
        if (l = he.contains(i.ownerDocument, i), // Append to fragment
        a = y(p.appendChild(i), "script"), // Preserve script evaluation history
        l && b(a), n) for (c = 0; i = a[c++]; ) Ye.test(i.type || "") && n.push(i);
        return p;
    }
    function C() {
        return !0;
    }
    function w() {
        return !1;
    }
    // Support: IE <=9 only
    // See #13393 for more info
    function E() {
        try {
            return ne.activeElement;
        } catch (e) {}
    }
    function _(e, t, n, r, o, i) {
        var a, s;
        // Types can be a map of types/handlers
        if ("object" == typeof t) {
            // ( types-Object, selector, data )
            "string" != typeof n && (// ( types-Object, data )
            r = r || n, n = void 0);
            for (s in t) _(e, s, n, r, t[s], i);
            return e;
        }
        if (null == r && null == o ? (// ( types, fn )
        o = n, r = n = void 0) : null == o && ("string" == typeof n ? (// ( types, selector, fn )
        o = r, r = void 0) : (// ( types, data, fn )
        o = r, r = n, n = void 0)), !1 === o) o = w; else if (!o) return e;
        // Use same guid so caller can remove using origFn
        return 1 === i && (a = o, o = function(e) {
            // Can use an empty set, since event contains the info
            return he().off(e), a.apply(this, arguments);
        }, o.guid = a.guid || (a.guid = he.guid++)), e.each(function() {
            he.event.add(this, t, o, r, n);
        });
    }
    // Prefer a tbody over its parent table for containing new rows
    function k(e, t) {
        return o(e, "table") && o(11 !== t.nodeType ? t : t.firstChild, "tr") ? he(">tbody", e)[0] || e : e;
    }
    // Replace/restore the type attribute of script elements for safe DOM manipulation
    function T(e) {
        return e.type = (null !== e.getAttribute("type")) + "/" + e.type, e;
    }
    function S(e) {
        var t = nt.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute("type"), e;
    }
    function N(e, t) {
        var n, r, o, i, a, s, u, l;
        if (1 === t.nodeType) {
            // 1. Copy private data: events, handlers, etc.
            if (Oe.hasData(e) && (i = Oe.access(e), a = Oe.set(t, i), l = i.events)) {
                delete a.handle, a.events = {};
                for (o in l) for (n = 0, r = l[o].length; n < r; n++) he.event.add(t, o, l[o][n]);
            }
            // 2. Copy user data
            Fe.hasData(e) && (s = Fe.access(e), u = he.extend({}, s), Fe.set(t, u));
        }
    }
    // Fix IE bugs, see support tests
    function D(e, t) {
        var n = t.nodeName.toLowerCase();
        // Fails to persist the checked state of a cloned checkbox or radio button.
        "input" === n && Ve.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue);
    }
    function I(e, t, r, o) {
        // Flatten any nested arrays
        t = ie.apply([], t);
        var i, a, s, u, l, c, p = 0, d = e.length, f = d - 1, h = t[0], m = he.isFunction(h);
        // We can't cloneNode fragments that contain checked, in WebKit
        if (m || d > 1 && "string" == typeof h && !fe.checkClone && tt.test(h)) return e.each(function(n) {
            var i = e.eq(n);
            m && (t[0] = h.call(this, n, i.html())), I(i, t, r, o);
        });
        if (d && (i = x(t, e[0].ownerDocument, !1, e, o), a = i.firstChild, 1 === i.childNodes.length && (i = a), 
        a || o)) {
            // Use the original fragment for the last item
            // instead of the first because it can end up
            // being emptied incorrectly in certain situations (#8070).
            for (s = he.map(y(i, "script"), T), u = s.length; p < d; p++) l = i, p !== f && (l = he.clone(l, !0, !0), 
            // Keep references to cloned scripts for later restoration
            u && // Support: Android <=4.0 only, PhantomJS 1 only
            // push.apply(_, arraylike) throws on ancient WebKit
            he.merge(s, y(l, "script"))), r.call(e[p], l, p);
            if (u) // Evaluate executable scripts on first document insertion
            for (c = s[s.length - 1].ownerDocument, // Reenable scripts
            he.map(s, S), p = 0; p < u; p++) l = s[p], Ye.test(l.type || "") && !Oe.access(l, "globalEval") && he.contains(c, l) && (l.src ? // Optional AJAX dependency, but won't run scripts if not present
            he._evalUrl && he._evalUrl(l.src) : n(l.textContent.replace(rt, ""), c));
        }
        return e;
    }
    function R(e, t, n) {
        for (var r, o = t ? he.filter(t, e) : e, i = 0; null != (r = o[i]); i++) n || 1 !== r.nodeType || he.cleanData(y(r)), 
        r.parentNode && (n && he.contains(r.ownerDocument, r) && b(y(r, "script")), r.parentNode.removeChild(r));
        return e;
    }
    function A(e, t, n) {
        var r, o, i, a, // Support: Firefox 51+
        // Retrieving style before computed somehow
        // fixes an issue with getting wrong values
        // on detached elements
        s = e.style;
        // getPropertyValue is needed for:
        //   .css('filter') (IE 9 only, #12537)
        //   .css('--customProperty) (#3144)
        // A tribute to the "awesome hack by Dean Edwards"
        // Android Browser returns percentage for some values,
        // but width seems to be reliably pixels.
        // This is against the CSSOM draft spec:
        // https://drafts.csswg.org/cssom/#resolved-values
        // Remember the original values
        // Put in the new values to get a computed value out
        // Revert the changed values
        // Support: IE <=9 - 11 only
        // IE returns zIndex value as an integer.
        return n = n || at(e), n && (a = n.getPropertyValue(t) || n[t], "" !== a || he.contains(e.ownerDocument, e) || (a = he.style(e, t)), 
        !fe.pixelMarginRight() && it.test(a) && ot.test(t) && (r = s.width, o = s.minWidth, 
        i = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, 
        s.minWidth = o, s.maxWidth = i)), void 0 !== a ? a + "" : a;
    }
    function P(e, t) {
        // Define the hook, we'll check on the first run if it's really needed.
        return {
            get: function() {
                // Hook not needed (or it's not possible to use it due
                // to missing dependency), remove it.
                return e() ? void delete this.get : (this.get = t).apply(this, arguments);
            }
        };
    }
    // Return a css property mapped to a potentially vendor prefixed property
    function O(e) {
        // Shortcut for names that are not vendor prefixed
        if (e in dt) return e;
        for (// Check for vendor prefixed names
        var t = e[0].toUpperCase() + e.slice(1), n = pt.length; n--; ) if ((e = pt[n] + t) in dt) return e;
    }
    // Return a property mapped along what jQuery.cssProps suggests or to
    // a vendor prefixed property.
    function F(e) {
        var t = he.cssProps[e];
        return t || (t = he.cssProps[e] = O(e) || e), t;
    }
    function M(e, t, n) {
        // Any relative (+/-) values have already been
        // normalized at this point
        var r = Ue.exec(t);
        // Guard against undefined "subtract", e.g., when used as in cssHooks
        return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t;
    }
    function j(e, t, n, r, o) {
        var i, a = 0;
        for (// If we already have the right measurement, avoid augmentation
        i = n === (r ? "border" : "content") ? 4 : "width" === t ? 1 : 0; i < 4; i += 2) // Both box models exclude margin, so add it if we want it
        "margin" === n && (a += he.css(e, n + Be[i], !0, o)), r ? (// border-box includes padding, so remove it if we want content
        "content" === n && (a -= he.css(e, "padding" + Be[i], !0, o)), // At this point, extra isn't border nor margin, so remove border
        "margin" !== n && (a -= he.css(e, "border" + Be[i] + "Width", !0, o))) : (// At this point, extra isn't content, so add padding
        a += he.css(e, "padding" + Be[i], !0, o), // At this point, extra isn't content nor padding, so add border
        "padding" !== n && (a += he.css(e, "border" + Be[i] + "Width", !0, o)));
        return a;
    }
    function L(e, t, n) {
        // Start with computed style
        var r, o = at(e), i = A(e, t, o), a = "border-box" === he.css(e, "boxSizing", !1, o);
        // Computed unit is not pixels. Stop here and return.
        // Computed unit is not pixels. Stop here and return.
        // Check for style in case a browser which returns unreliable values
        // for getComputedStyle silently falls back to the reliable elem.style
        // Fall back to offsetWidth/Height when value is "auto"
        // This happens for inline elements with no explicit setting (gh-3571)
        // Normalize "", auto, and prepare for extra
        return it.test(i) ? i : (r = a && (fe.boxSizingReliable() || i === e.style[t]), 
        "auto" === i && (i = e["offset" + t[0].toUpperCase() + t.slice(1)]), (i = parseFloat(i) || 0) + j(e, t, n || (a ? "border" : "content"), r, o) + "px");
    }
    function U(e, t, n, r, o) {
        return new U.prototype.init(e, t, n, r, o);
    }
    function B() {
        ht && (!1 === ne.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(B) : e.setTimeout(B, he.fx.interval), 
        he.fx.tick());
    }
    // Animations created synchronously will run synchronously
    function q() {
        return e.setTimeout(function() {
            ft = void 0;
        }), ft = he.now();
    }
    // Generate parameters to create a standard animation
    function H(e, t) {
        var n, r = 0, o = {
            height: e
        };
        for (// If we include width, step value is 1 to do all cssExpand values,
        // otherwise step value is 2 to skip over Left and Right
        t = t ? 1 : 0; r < 4; r += 2 - t) n = Be[r], o["margin" + n] = o["padding" + n] = e;
        return t && (o.opacity = o.width = e), o;
    }
    function W(e, t, n) {
        for (var r, o = (Y.tweeners[t] || []).concat(Y.tweeners["*"]), i = 0, a = o.length; i < a; i++) if (r = o[i].call(n, t, e)) // We're done with this property
        return r;
    }
    function V(e, t, n) {
        var r, o, i, a, s, u, l, c, p = "width" in t || "height" in t, d = this, f = {}, h = e.style, m = e.nodeType && qe(e), g = Oe.get(e, "fxshow");
        // Queue-skipping animations hijack the fx hooks
        n.queue || (a = he._queueHooks(e, "fx"), null == a.unqueued && (a.unqueued = 0, 
        s = a.empty.fire, a.empty.fire = function() {
            a.unqueued || s();
        }), a.unqueued++, d.always(function() {
            // Ensure the complete handler is called before this completes
            d.always(function() {
                a.unqueued--, he.queue(e, "fx").length || a.empty.fire();
            });
        }));
        // Detect show/hide animations
        for (r in t) if (o = t[r], mt.test(o)) {
            if (delete t[r], i = i || "toggle" === o, o === (m ? "hide" : "show")) {
                // Pretend to be hidden if this is a "show" and
                // there is still data from a stopped show/hide
                if ("show" !== o || !g || void 0 === g[r]) continue;
                m = !0;
            }
            f[r] = g && g[r] || he.style(e, r);
        }
        if ((// Bail out if this is a no-op like .hide().hide()
        u = !he.isEmptyObject(t)) || !he.isEmptyObject(f)) {
            // Restrict "overflow" and "display" styles during box animations
            p && 1 === e.nodeType && (// Support: IE <=9 - 11, Edge 12 - 13
            // Record all 3 overflow attributes because IE does not infer the shorthand
            // from identically-valued overflowX and overflowY
            n.overflow = [ h.overflow, h.overflowX, h.overflowY ], // Identify a display type, preferring old show/hide data over the CSS cascade
            l = g && g.display, null == l && (l = Oe.get(e, "display")), c = he.css(e, "display"), 
            "none" === c && (l ? c = l : (// Get nonempty value(s) by temporarily forcing visibility
            v([ e ], !0), l = e.style.display || l, c = he.css(e, "display"), v([ e ]))), // Animate inline elements as inline-block
            ("inline" === c || "inline-block" === c && null != l) && "none" === he.css(e, "float") && (// Restore the original display value at the end of pure show/hide animations
            u || (d.done(function() {
                h.display = l;
            }), null == l && (c = h.display, l = "none" === c ? "" : c)), h.display = "inline-block")), 
            n.overflow && (h.overflow = "hidden", d.always(function() {
                h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2];
            })), // Implement show/hide animations
            u = !1;
            for (r in f) // General show/hide setup for this element animation
            u || (g ? "hidden" in g && (m = g.hidden) : g = Oe.access(e, "fxshow", {
                display: l
            }), // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
            i && (g.hidden = !m), // Show elements before animating them
            m && v([ e ], !0), /* eslint-disable no-loop-func */
            d.done(function() {
                /* eslint-enable no-loop-func */
                // The final step of a "hide" animation is actually hiding the element
                m || v([ e ]), Oe.remove(e, "fxshow");
                for (r in f) he.style(e, r, f[r]);
            })), // Per-property setup
            u = W(m ? g[r] : 0, r, d), r in g || (g[r] = u.start, m && (u.end = u.start, u.start = 0));
        }
    }
    function z(e, t) {
        var n, r, o, i, a;
        // camelCase, specialEasing and expand cssHook pass
        for (n in e) if (r = he.camelCase(n), o = t[r], i = e[n], Array.isArray(i) && (o = i[1], 
        i = e[n] = i[0]), n !== r && (e[r] = i, delete e[n]), (a = he.cssHooks[r]) && "expand" in a) {
            i = a.expand(i), delete e[r];
            // Not quite $.extend, this won't overwrite existing keys.
            // Reusing 'index' because we have the correct "name"
            for (n in i) n in e || (e[n] = i[n], t[n] = o);
        } else t[r] = o;
    }
    function Y(e, t, n) {
        var r, o, i = 0, a = Y.prefilters.length, s = he.Deferred().always(function() {
            // Don't match elem in the :animated selector
            delete u.elem;
        }), u = function() {
            if (o) return !1;
            for (var t = ft || q(), n = Math.max(0, l.startTime + l.duration - t), // Support: Android 2.3 only
            // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
            r = n / l.duration || 0, i = 1 - r, a = 0, u = l.tweens.length; a < u; a++) l.tweens[a].run(i);
            // If there's more to do, yield
            // If there's more to do, yield
            // If this was an empty animation, synthesize a final progress notification
            // Resolve the animation and report its conclusion
            return s.notifyWith(e, [ l, i, n ]), i < 1 && u ? n : (u || s.notifyWith(e, [ l, 1, 0 ]), 
            s.resolveWith(e, [ l ]), !1);
        }, l = s.promise({
            elem: e,
            props: he.extend({}, t),
            opts: he.extend(!0, {
                specialEasing: {},
                easing: he.easing._default
            }, n),
            originalProperties: t,
            originalOptions: n,
            startTime: ft || q(),
            duration: n.duration,
            tweens: [],
            createTween: function(t, n) {
                var r = he.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing);
                return l.tweens.push(r), r;
            },
            stop: function(t) {
                var n = 0, // If we are going to the end, we want to run all the tweens
                // otherwise we skip this part
                r = t ? l.tweens.length : 0;
                if (o) return this;
                for (o = !0; n < r; n++) l.tweens[n].run(1);
                // Resolve when we played the last frame; otherwise, reject
                return t ? (s.notifyWith(e, [ l, 1, 0 ]), s.resolveWith(e, [ l, t ])) : s.rejectWith(e, [ l, t ]), 
                this;
            }
        }), c = l.props;
        for (z(c, l.opts.specialEasing); i < a; i++) if (r = Y.prefilters[i].call(l, e, c, l.opts)) return he.isFunction(r.stop) && (he._queueHooks(l.elem, l.opts.queue).stop = he.proxy(r.stop, r)), 
        r;
        // Attach callbacks from options
        return he.map(c, W, l), he.isFunction(l.opts.start) && l.opts.start.call(e, l), 
        l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), 
        he.fx.timer(he.extend(u, {
            elem: e,
            anim: l,
            queue: l.opts.queue
        })), l;
    }
    // Strip and collapse whitespace according to HTML spec
    // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
    function $(e) {
        return (e.match(De) || []).join(" ");
    }
    function X(e) {
        return e.getAttribute && e.getAttribute("class") || "";
    }
    function K(e, t, n, r) {
        var o;
        if (Array.isArray(t)) // Serialize array item.
        he.each(t, function(t, o) {
            n || Tt.test(e) ? // Treat each array item as a scalar.
            r(e, o) : // Item is non-scalar (array or object), encode its numeric index.
            K(e + "[" + ("object" == typeof o && null != o ? t : "") + "]", o, n, r);
        }); else if (n || "object" !== he.type(t)) // Serialize scalar item.
        r(e, t); else // Serialize object item.
        for (o in t) K(e + "[" + o + "]", t[o], n, r);
    }
    // Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
    function G(e) {
        // dataTypeExpression is optional and defaults to "*"
        return function(t, n) {
            "string" != typeof t && (n = t, t = "*");
            var r, o = 0, i = t.toLowerCase().match(De) || [];
            if (he.isFunction(n)) // For each dataType in the dataTypeExpression
            for (;r = i[o++]; ) // Prepend if requested
            "+" === r[0] ? (r = r.slice(1) || "*", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n);
        };
    }
    // Base inspection function for prefilters and transports
    function Q(e, t, n, r) {
        function o(s) {
            var u;
            return i[s] = !0, he.each(e[s] || [], function(e, s) {
                var l = s(t, n, r);
                return "string" != typeof l || a || i[l] ? a ? !(u = l) : void 0 : (t.dataTypes.unshift(l), 
                o(l), !1);
            }), u;
        }
        var i = {}, a = e === Lt;
        return o(t.dataTypes[0]) || !i["*"] && o("*");
    }
    // A special extend for ajax options
    // that takes "flat" options (not to be deep extended)
    // Fixes #9887
    function J(e, t) {
        var n, r, o = he.ajaxSettings.flatOptions || {};
        for (n in t) void 0 !== t[n] && ((o[n] ? e : r || (r = {}))[n] = t[n]);
        return r && he.extend(!0, e, r), e;
    }
    /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
    function Z(e, t, n) {
        // Remove auto dataType and get content-type in the process
        for (var r, o, i, a, s = e.contents, u = e.dataTypes; "*" === u[0]; ) u.shift(), 
        void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
        // Check if we're dealing with a known content-type
        if (r) for (o in s) if (s[o] && s[o].test(r)) {
            u.unshift(o);
            break;
        }
        // Check to see if we have a response for the expected dataType
        if (u[0] in n) i = u[0]; else {
            // Try convertible dataTypes
            for (o in n) {
                if (!u[0] || e.converters[o + " " + u[0]]) {
                    i = o;
                    break;
                }
                a || (a = o);
            }
            // Or just use first one
            i = i || a;
        }
        // If we found a dataType
        // We add the dataType to the list if needed
        // and return the corresponding response
        if (i) return i !== u[0] && u.unshift(i), n[i];
    }
    /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
    function ee(e, t, n, r) {
        var o, i, a, s, u, l = {}, // Work with a copy of dataTypes in case we need to modify it for conversion
        c = e.dataTypes.slice();
        // Create converters map with lowercased keys
        if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a];
        // Convert to each sequential dataType
        for (i = c.shift(); i; ) if (e.responseFields[i] && (n[e.responseFields[i]] = t), 
        // Apply the dataFilter if provided
        !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = i, i = c.shift()) // There's only work to do if current dataType is non-auto
        if ("*" === i) i = u; else if ("*" !== u && u !== i) {
            // If none found, seek a pair
            if (!(// Seek a direct converter
            a = l[u + " " + i] || l["* " + i])) for (o in l) if (// If conv2 outputs current
            s = o.split(" "), s[1] === i && (// If prev can be converted to accepted input
            a = l[u + " " + s[0]] || l["* " + s[0]])) {
                // Condense equivalence converters
                !0 === a ? a = l[o] : !0 !== l[o] && (i = s[0], c.unshift(s[1]));
                break;
            }
            // Apply converter (if not an equivalence)
            if (!0 !== a) // Unless errors are allowed to bubble, catch and return them
            if (a && e.throws) t = a(t); else try {
                t = a(t);
            } catch (e) {
                return {
                    state: "parsererror",
                    error: a ? e : "No conversion from " + u + " to " + i
                };
            }
        }
        return {
            state: "success",
            data: t
        };
    }
    var te = [], ne = e.document, re = Object.getPrototypeOf, oe = te.slice, ie = te.concat, ae = te.push, se = te.indexOf, ue = {}, le = ue.toString, ce = ue.hasOwnProperty, pe = ce.toString, de = pe.call(Object), fe = {}, // Define a local copy of jQuery
    he = function(e, t) {
        // The jQuery object is actually just the init constructor 'enhanced'
        // Need init if jQuery is called (just allow error to be thrown if not included)
        return new he.fn.init(e, t);
    }, // Support: Android <=4.0 only
    // Make sure we trim BOM and NBSP
    me = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, // Matches dashed string for camelizing
    ge = /^-ms-/, ve = /-([a-z])/g, // Used by jQuery.camelCase as callback to replace()
    ye = function(e, t) {
        return t.toUpperCase();
    };
    he.fn = he.prototype = {
        // The current version of jQuery being used
        jquery: "3.2.1",
        constructor: he,
        // The default length of a jQuery object is 0
        length: 0,
        toArray: function() {
            return oe.call(this);
        },
        // Get the Nth element in the matched element set OR
        // Get the whole matched element set as a clean array
        get: function(e) {
            // Return all the elements in a clean array
            // Return all the elements in a clean array
            return null == e ? oe.call(this) : e < 0 ? this[e + this.length] : this[e];
        },
        // Take an array of elements and push it onto the stack
        // (returning the new matched element set)
        pushStack: function(e) {
            // Build a new jQuery matched element set
            var t = he.merge(this.constructor(), e);
            // Return the newly-formed element set
            // Add the old object onto the stack (as a reference)
            return t.prevObject = this, t;
        },
        // Execute a callback for every element in the matched set.
        each: function(e) {
            return he.each(this, e);
        },
        map: function(e) {
            return this.pushStack(he.map(this, function(t, n) {
                return e.call(t, n, t);
            }));
        },
        slice: function() {
            return this.pushStack(oe.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(e) {
            var t = this.length, n = +e + (e < 0 ? t : 0);
            return this.pushStack(n >= 0 && n < t ? [ this[n] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        // For internal use only.
        // Behaves like an Array's method, not like a jQuery method.
        push: ae,
        sort: te.sort,
        splice: te.splice
    }, he.extend = he.fn.extend = function() {
        var e, t, n, r, o, i, a = arguments[0] || {}, s = 1, u = arguments.length, l = !1;
        for (// Handle a deep copy situation
        "boolean" == typeof a && (l = a, // Skip the boolean and the target
        a = arguments[s] || {}, s++), // Handle case when target is a string or something (possible in deep copy)
        "object" == typeof a || he.isFunction(a) || (a = {}), // Extend jQuery itself if only one argument is passed
        s === u && (a = this, s--); s < u; s++) // Only deal with non-null/undefined values
        if (null != (e = arguments[s])) // Extend the base object
        for (t in e) n = a[t], r = e[t], // Prevent never-ending loop
        a !== r && (// Recurse if we're merging plain objects or arrays
        l && r && (he.isPlainObject(r) || (o = Array.isArray(r))) ? (o ? (o = !1, i = n && Array.isArray(n) ? n : []) : i = n && he.isPlainObject(n) ? n : {}, 
        // Never move original objects, clone them
        a[t] = he.extend(l, i, r)) : void 0 !== r && (a[t] = r));
        // Return the modified object
        return a;
    }, he.extend({
        // Unique for each copy of jQuery on the page
        expando: "jQuery" + ("3.2.1" + Math.random()).replace(/\D/g, ""),
        // Assume jQuery is ready without the ready module
        isReady: !0,
        error: function(e) {
            throw new Error(e);
        },
        noop: function() {},
        isFunction: function(e) {
            return "function" === he.type(e);
        },
        isWindow: function(e) {
            return null != e && e === e.window;
        },
        isNumeric: function(e) {
            // As of jQuery 3.0, isNumeric is limited to
            // strings and numbers (primitives or objects)
            // that can be coerced to finite numbers (gh-2662)
            var t = he.type(e);
            // parseFloat NaNs numeric-cast false positives ("")
            // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
            // subtraction forces infinities to NaN
            return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e));
        },
        isPlainObject: function(e) {
            var t, n;
            // Detect obvious negatives
            // Use toString instead of jQuery.type to catch host objects
            // Detect obvious negatives
            // Use toString instead of jQuery.type to catch host objects
            // Objects with no prototype (e.g., `Object.create( null )`) are plain
            // Objects with prototype are plain iff they were constructed by a global Object function
            return !(!e || "[object Object]" !== le.call(e)) && (!(t = re(e)) || "function" == typeof (n = ce.call(t, "constructor") && t.constructor) && pe.call(n) === de);
        },
        isEmptyObject: function(e) {
            /* eslint-disable no-unused-vars */
            // See https://github.com/eslint/eslint/issues/6125
            var t;
            for (t in e) return !1;
            return !0;
        },
        type: function(e) {
            return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? ue[le.call(e)] || "object" : typeof e;
        },
        // Evaluates a script in a global context
        globalEval: function(e) {
            n(e);
        },
        // Convert dashed to camelCase; used by the css and data modules
        // Support: IE <=9 - 11, Edge 12 - 13
        // Microsoft forgot to hump their vendor prefix (#9572)
        camelCase: function(e) {
            return e.replace(ge, "ms-").replace(ve, ye);
        },
        each: function(e, t) {
            var n, o = 0;
            if (r(e)) for (n = e.length; o < n && !1 !== t.call(e[o], o, e[o]); o++) ; else for (o in e) if (!1 === t.call(e[o], o, e[o])) break;
            return e;
        },
        // Support: Android <=4.0 only
        trim: function(e) {
            return null == e ? "" : (e + "").replace(me, "");
        },
        // results is for internal usage only
        makeArray: function(e, t) {
            var n = t || [];
            return null != e && (r(Object(e)) ? he.merge(n, "string" == typeof e ? [ e ] : e) : ae.call(n, e)), 
            n;
        },
        inArray: function(e, t, n) {
            return null == t ? -1 : se.call(t, e, n);
        },
        // Support: Android <=4.0 only, PhantomJS 1 only
        // push.apply(_, arraylike) throws on ancient WebKit
        merge: function(e, t) {
            for (var n = +t.length, r = 0, o = e.length; r < n; r++) e[o++] = t[r];
            return e.length = o, e;
        },
        grep: function(e, t, n) {
            // Go through the array, only saving the items
            // that pass the validator function
            for (var r = [], o = 0, i = e.length, a = !n; o < i; o++) !t(e[o], o) !== a && r.push(e[o]);
            return r;
        },
        // arg is for internal usage only
        map: function(e, t, n) {
            var o, i, a = 0, s = [];
            // Go through the array, translating each of the items to their new values
            if (r(e)) for (o = e.length; a < o; a++) null != (i = t(e[a], a, n)) && s.push(i); else for (a in e) null != (i = t(e[a], a, n)) && s.push(i);
            // Flatten any nested arrays
            return ie.apply([], s);
        },
        // A global GUID counter for objects
        guid: 1,
        // Bind a function to a context, optionally partially applying any
        // arguments.
        proxy: function(e, t) {
            var n, r, o;
            // Quick check to determine if target is callable, in the spec
            // this throws a TypeError, but we will just return undefined.
            if ("string" == typeof t && (n = e[t], t = e, e = n), he.isFunction(e)) // Simulated bind
            // Set the guid of unique handler to the same of original handler, so it can be removed
            return r = oe.call(arguments, 2), o = function() {
                return e.apply(t || this, r.concat(oe.call(arguments)));
            }, o.guid = e.guid = e.guid || he.guid++, o;
        },
        now: Date.now,
        // jQuery.support is not used in Core but other projects attach their
        // properties to it so it needs to exist.
        support: fe
    }), "function" == typeof Symbol && (he.fn[Symbol.iterator] = te[Symbol.iterator]), 
    // Populate the class2type map
    he.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(e, t) {
        ue["[object " + t + "]"] = t.toLowerCase();
    });
    var be = /*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
    function(e) {
        function t(e, t, n, r) {
            var o, i, a, s, u, c, d, f = t && t.ownerDocument, // nodeType defaults to 9, since context defaults to document
            h = t ? t.nodeType : 9;
            // Return early from calls with invalid selector or context
            if (n = n || [], "string" != typeof e || !e || 1 !== h && 9 !== h && 11 !== h) return n;
            // Try to shortcut find operations (as opposed to filters) in HTML documents
            if (!r && ((t ? t.ownerDocument || t : U) !== R && I(t), t = t || R, P)) {
                // If the selector is sufficiently simple, try using a "get*By*" DOM method
                // (excepting DocumentFragment context, where the methods don't exist)
                if (11 !== h && (u = me.exec(e))) // ID selector
                if (o = u[1]) {
                    // Document context
                    if (9 === h) {
                        if (!(a = t.getElementById(o))) return n;
                        // Support: IE, Opera, Webkit
                        // TODO: identify versions
                        // getElementById can match elements by name instead of ID
                        if (a.id === o) return n.push(a), n;
                    } else // Support: IE, Opera, Webkit
                    // TODO: identify versions
                    // getElementById can match elements by name instead of ID
                    if (f && (a = f.getElementById(o)) && j(t, a) && a.id === o) return n.push(a), n;
                } else {
                    if (u[2]) return G.apply(n, t.getElementsByTagName(e)), n;
                    if ((o = u[3]) && x.getElementsByClassName && t.getElementsByClassName) return G.apply(n, t.getElementsByClassName(o)), 
                    n;
                }
                // Take advantage of querySelectorAll
                if (x.qsa && !V[e + " "] && (!O || !O.test(e))) {
                    if (1 !== h) f = t, d = e; else if ("object" !== t.nodeName.toLowerCase()) {
                        for (// Capture the context ID, setting it first if necessary
                        (s = t.getAttribute("id")) ? s = s.replace(be, xe) : t.setAttribute("id", s = L), 
                        // Prefix every selector in the list
                        c = _(e), i = c.length; i--; ) c[i] = "#" + s + " " + p(c[i]);
                        d = c.join(","), // Expand context for sibling selectors
                        f = ge.test(e) && l(t.parentNode) || t;
                    }
                    if (d) try {
                        return G.apply(n, f.querySelectorAll(d)), n;
                    } catch (e) {} finally {
                        s === L && t.removeAttribute("id");
                    }
                }
            }
            // All others
            return T(e.replace(ie, "$1"), t, n, r);
        }
        /**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
        function n() {
            function e(n, r) {
                // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                // Only keep the most recent entries
                return t.push(n + " ") > C.cacheLength && delete e[t.shift()], e[n + " "] = r;
            }
            var t = [];
            return e;
        }
        /**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
        function r(e) {
            return e[L] = !0, e;
        }
        /**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
        function o(e) {
            var t = R.createElement("fieldset");
            try {
                return !!e(t);
            } catch (e) {
                return !1;
            } finally {
                // Remove from its parent by default
                t.parentNode && t.parentNode.removeChild(t), // release memory in IE
                t = null;
            }
        }
        /**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
        function i(e, t) {
            for (var n = e.split("|"), r = n.length; r--; ) C.attrHandle[n[r]] = t;
        }
        /**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
        function a(e, t) {
            var n = t && e, r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
            // Use IE sourceIndex if available on both nodes
            if (r) return r;
            // Check if b follows a
            if (n) for (;n = n.nextSibling; ) if (n === t) return -1;
            return e ? 1 : -1;
        }
        /**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
        function s(e) {
            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
            return function(t) {
                // Only certain elements can match :enabled or :disabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                // Only certain elements can match :enabled or :disabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                // Check for inherited disabledness on relevant non-disabled elements:
                // * listed form-associated elements in a disabled fieldset
                //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                // * option elements in a disabled optgroup
                //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                // All such elements have a "form" property.
                // Option elements defer to a parent optgroup if present
                // Where there is no isDisabled, check manually
                /* jshint -W018 */
                return "form" in t ? t.parentNode && !1 === t.disabled ? "label" in t ? "label" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && we(t) === e : t.disabled === e : "label" in t && t.disabled === e;
            };
        }
        /**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
        function u(e) {
            return r(function(t) {
                return t = +t, r(function(n, r) {
                    // Match elements found at the specified indexes
                    for (var o, i = e([], n.length, t), a = i.length; a--; ) n[o = i[a]] && (n[o] = !(r[o] = n[o]));
                });
            });
        }
        /**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
        function l(e) {
            return e && void 0 !== e.getElementsByTagName && e;
        }
        // Easy API for creating new setFilters
        function c() {}
        function p(e) {
            for (var t = 0, n = e.length, r = ""; t < n; t++) r += e[t].value;
            return r;
        }
        function d(e, t, n) {
            var r = t.dir, o = t.next, i = o || r, a = n && "parentNode" === i, s = q++;
            // Check against closest ancestor/preceding element
            // Check against all ancestor/preceding elements
            return t.first ? function(t, n, o) {
                for (;t = t[r]; ) if (1 === t.nodeType || a) return e(t, n, o);
                return !1;
            } : function(t, n, u) {
                var l, c, p, d = [ B, s ];
                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                if (u) {
                    for (;t = t[r]; ) if ((1 === t.nodeType || a) && e(t, n, u)) return !0;
                } else for (;t = t[r]; ) if (1 === t.nodeType || a) if (p = t[L] || (t[L] = {}), 
                // Support: IE <9 only
                // Defend against cloned attroperties (jQuery gh-1709)
                c = p[t.uniqueID] || (p[t.uniqueID] = {}), o && o === t.nodeName.toLowerCase()) t = t[r] || t; else {
                    if ((l = c[i]) && l[0] === B && l[1] === s) // Assign to newCache so results back-propagate to previous elements
                    return d[2] = l[2];
                    // A match means we're done; a fail means we have to keep checking
                    if (// Reuse newcache so results back-propagate to previous elements
                    c[i] = d, d[2] = e(t, n, u)) return !0;
                }
                return !1;
            };
        }
        function f(e) {
            return e.length > 1 ? function(t, n, r) {
                for (var o = e.length; o--; ) if (!e[o](t, n, r)) return !1;
                return !0;
            } : e[0];
        }
        function h(e, n, r) {
            for (var o = 0, i = n.length; o < i; o++) t(e, n[o], r);
            return r;
        }
        function m(e, t, n, r, o) {
            for (var i, a = [], s = 0, u = e.length, l = null != t; s < u; s++) (i = e[s]) && (n && !n(i, r, o) || (a.push(i), 
            l && t.push(s)));
            return a;
        }
        function g(e, t, n, o, i, a) {
            return o && !o[L] && (o = g(o)), i && !i[L] && (i = g(i, a)), r(function(r, a, s, u) {
                var l, c, p, d = [], f = [], g = a.length, // Get initial elements from seed or context
                v = r || h(t || "*", s.nodeType ? [ s ] : s, []), // Prefilter to get matcher input, preserving a map for seed-results synchronization
                y = !e || !r && t ? v : m(v, d, e, s, u), b = n ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                i || (r ? e : g || o) ? // ...intermediate processing is necessary
                [] : // ...otherwise use results directly
                a : y;
                // Apply postFilter
                if (// Find primary matches
                n && n(y, b, s, u), o) for (l = m(b, f), o(l, [], s, u), // Un-match failing elements by moving them back to matcherIn
                c = l.length; c--; ) (p = l[c]) && (b[f[c]] = !(y[f[c]] = p));
                if (r) {
                    if (i || e) {
                        if (i) {
                            for (// Get the final matcherOut by condensing this intermediate into postFinder contexts
                            l = [], c = b.length; c--; ) (p = b[c]) && // Restore matcherIn since elem is not yet a final match
                            l.push(y[c] = p);
                            i(null, b = [], l, u);
                        }
                        for (// Move matched elements from seed to results to keep them synchronized
                        c = b.length; c--; ) (p = b[c]) && (l = i ? J(r, p) : d[c]) > -1 && (r[l] = !(a[l] = p));
                    }
                } else b = m(b === a ? b.splice(g, b.length) : b), i ? i(null, a, b, u) : G.apply(a, b);
            });
        }
        function v(e) {
            for (var t, n, r, o = e.length, i = C.relative[e[0].type], a = i || C.relative[" "], s = i ? 1 : 0, // The foundational matcher ensures that elements are reachable from top-level context(s)
            u = d(function(e) {
                return e === t;
            }, a, !0), l = d(function(e) {
                return J(t, e) > -1;
            }, a, !0), c = [ function(e, n, r) {
                var o = !i && (r || n !== S) || ((t = n).nodeType ? u(e, n, r) : l(e, n, r));
                // Avoid hanging onto element (issue #299)
                return t = null, o;
            } ]; s < o; s++) if (n = C.relative[e[s].type]) c = [ d(f(c), n) ]; else {
                // Return special upon seeing a positional matcher
                if (n = C.filter[e[s].type].apply(null, e[s].matches), n[L]) {
                    for (// Find the next relative operator (if any) for proper handling
                    r = ++s; r < o && !C.relative[e[r].type]; r++) ;
                    // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                    return g(s > 1 && f(c), s > 1 && p(e.slice(0, s - 1).concat({
                        value: " " === e[s - 2].type ? "*" : ""
                    })).replace(ie, "$1"), n, s < r && v(e.slice(s, r)), r < o && v(e = e.slice(r)), r < o && p(e));
                }
                c.push(n);
            }
            return f(c);
        }
        function y(e, n) {
            var o = n.length > 0, i = e.length > 0, a = function(r, a, s, u, l) {
                var c, p, d, f = 0, h = "0", g = r && [], v = [], y = S, // We must always have either seed elements or outermost context
                b = r || i && C.find.TAG("*", l), // Use integer dirruns iff this is the outermost matcher
                x = B += null == y ? 1 : Math.random() || .1, w = b.length;
                // Add elements passing elementMatchers directly to results
                // Support: IE<9, Safari
                // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                for (l && (S = a === R || a || l); h !== w && null != (c = b[h]); h++) {
                    if (i && c) {
                        for (p = 0, a || c.ownerDocument === R || (I(c), s = !P); d = e[p++]; ) if (d(c, a || R, s)) {
                            u.push(c);
                            break;
                        }
                        l && (B = x);
                    }
                    // Track unmatched elements for set filters
                    o && (// They will have gone through all possible matchers
                    (c = !d && c) && f--, // Lengthen the array for every element, matched or not
                    r && g.push(c));
                }
                // Apply set filters to unmatched elements
                // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                // no element matchers and no seed.
                // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                // numerically zero.
                if (// `i` is now the count of elements visited above, and adding it to `matchedCount`
                // makes the latter nonnegative.
                f += h, o && h !== f) {
                    for (p = 0; d = n[p++]; ) d(g, v, a, s);
                    if (r) {
                        // Reintegrate element matches to eliminate the need for sorting
                        if (f > 0) for (;h--; ) g[h] || v[h] || (v[h] = X.call(u));
                        // Discard index placeholder values to get only actual matches
                        v = m(v);
                    }
                    // Add matches to results
                    G.apply(u, v), // Seedless set matches succeeding multiple successful matchers stipulate sorting
                    l && !r && v.length > 0 && f + n.length > 1 && t.uniqueSort(u);
                }
                // Override manipulation of globals by nested matchers
                return l && (B = x, S = y), g;
            };
            return o ? r(a) : a;
        }
        var b, x, C, w, E, _, k, T, S, N, D, // Local document vars
        I, R, A, P, O, F, M, j, // Instance-specific data
        L = "sizzle" + 1 * new Date(), U = e.document, B = 0, q = 0, H = n(), W = n(), V = n(), z = function(e, t) {
            return e === t && (D = !0), 0;
        }, // Instance methods
        Y = {}.hasOwnProperty, $ = [], X = $.pop, K = $.push, G = $.push, Q = $.slice, // Use a stripped-down indexOf as it's faster than native
        // https://jsperf.com/thor-indexof-vs-for/5
        J = function(e, t) {
            for (var n = 0, r = e.length; n < r; n++) if (e[n] === t) return n;
            return -1;
        }, Z = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", // Regular expressions
        // http://www.w3.org/TR/css3-selectors/#whitespace
        ee = "[\\x20\\t\\r\\n\\f]", // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
        te = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
        ne = "\\[" + ee + "*(" + te + ")(?:" + ee + // Operator (capture 2)
        "*([*^$|!~]?=)" + ee + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + te + "))|)" + ee + "*\\]", re = ":(" + te + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + ne + ")*)|.*)\\)|)", // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
        oe = new RegExp(ee + "+", "g"), ie = new RegExp("^" + ee + "+|((?:^|[^\\\\])(?:\\\\.)*)" + ee + "+$", "g"), ae = new RegExp("^" + ee + "*," + ee + "*"), se = new RegExp("^" + ee + "*([>+~]|" + ee + ")" + ee + "*"), ue = new RegExp("=" + ee + "*([^\\]'\"]*?)" + ee + "*\\]", "g"), le = new RegExp(re), ce = new RegExp("^" + te + "$"), pe = {
            ID: new RegExp("^#(" + te + ")"),
            CLASS: new RegExp("^\\.(" + te + ")"),
            TAG: new RegExp("^(" + te + "|[*])"),
            ATTR: new RegExp("^" + ne),
            PSEUDO: new RegExp("^" + re),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + ee + "*(even|odd|(([+-]|)(\\d*)n|)" + ee + "*(?:([+-]|)" + ee + "*(\\d+)|))" + ee + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + Z + ")$", "i"),
            // For use in libraries implementing .is()
            // We use this for POS matching in `select`
            needsContext: new RegExp("^" + ee + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + ee + "*((?:-\\d)?\\d*)" + ee + "*\\)|)(?=[^-]|$)", "i")
        }, de = /^(?:input|select|textarea|button)$/i, fe = /^h\d$/i, he = /^[^{]+\{\s*\[native \w/, // Easily-parseable/retrievable ID or TAG or CLASS selectors
        me = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ge = /[+~]/, // CSS escapes
        // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
        ve = new RegExp("\\\\([\\da-f]{1,6}" + ee + "?|(" + ee + ")|.)", "ig"), ye = function(e, t, n) {
            var r = "0x" + t - 65536;
            // NaN means non-codepoint
            // Support: Firefox<24
            // Workaround erroneous numeric interpretation of +"0x"
            // BMP codepoint
            // Supplemental Plane codepoint (surrogate pair)
            return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320);
        }, // CSS string/identifier serialization
        // https://drafts.csswg.org/cssom/#common-serializing-idioms
        be = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, xe = function(e, t) {
            // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
            return t ? "\0" === e ? "�" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e;
        }, // Used for iframes
        // See setDocument()
        // Removing the function wrapper causes a "Permission Denied"
        // error in IE
        Ce = function() {
            I();
        }, we = d(function(e) {
            return !0 === e.disabled && ("form" in e || "label" in e);
        }, {
            dir: "parentNode",
            next: "legend"
        });
        // Optimize for push.apply( _, NodeList )
        try {
            G.apply($ = Q.call(U.childNodes), U.childNodes), // Support: Android<4.0
            // Detect silently failing push.apply
            $[U.childNodes.length].nodeType;
        } catch (e) {
            G = {
                apply: $.length ? // Leverage slice if possible
                function(e, t) {
                    K.apply(e, Q.call(t));
                } : // Support: IE<9
                // Otherwise append directly
                function(e, t) {
                    // Can't trust NodeList.length
                    for (var n = e.length, r = 0; e[n++] = t[r++]; ) ;
                    e.length = n - 1;
                }
            };
        }
        // Expose support vars for convenience
        x = t.support = {}, /**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
        E = t.isXML = function(e) {
            // documentElement is verified for cases where it doesn't yet exist
            // (such as loading iframes in IE - #4833)
            var t = e && (e.ownerDocument || e).documentElement;
            return !!t && "HTML" !== t.nodeName;
        }, /**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
        I = t.setDocument = function(e) {
            var t, n, r = e ? e.ownerDocument || e : U;
            // Return early if doc is invalid or already selected
            // Return early if doc is invalid or already selected
            // Update global variables
            // Support: IE 9-11, Edge
            // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
            // Support: IE 11, Edge
            /* Attributes
	---------------------------------------------------------------------- */
            // Support: IE<8
            // Verify that getAttribute really returns attributes and not properties
            // (excepting IE8 booleans)
            /* getElement(s)By*
	---------------------------------------------------------------------- */
            // Check if getElementsByTagName("*") returns only elements
            // Support: IE<9
            // Support: IE<10
            // Check if getElementById returns elements by name
            // The broken getElementById methods don't pick up programmatically-set names,
            // so use a roundabout getElementsByName test
            // ID filter and find
            // Support: IE 6 - 7 only
            // getElementById is not reliable as a find shortcut
            // Tag
            // Class
            /* QSA/matchesSelector
	---------------------------------------------------------------------- */
            // QSA and matchesSelector support
            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
            // qSa(:focus) reports false when true (Chrome 21)
            // We allow this because of a bug in IE8/9 that throws an error
            // whenever `document.activeElement` is accessed on an iframe
            // So, we allow :focus to pass through QSA all the time to avoid the IE error
            // See https://bugs.jquery.com/ticket/13378
            // Build QSA regex
            // Regex strategy adopted from Diego Perini
            /* Contains
	---------------------------------------------------------------------- */
            // Element contains another
            // Purposefully self-exclusive
            // As in, an element does not contain itself
            /* Sorting
	---------------------------------------------------------------------- */
            // Document order sorting
            return r !== R && 9 === r.nodeType && r.documentElement ? (R = r, A = R.documentElement, 
            P = !E(R), U !== R && (n = R.defaultView) && n.top !== n && (n.addEventListener ? n.addEventListener("unload", Ce, !1) : n.attachEvent && n.attachEvent("onunload", Ce)), 
            x.attributes = o(function(e) {
                return e.className = "i", !e.getAttribute("className");
            }), x.getElementsByTagName = o(function(e) {
                return e.appendChild(R.createComment("")), !e.getElementsByTagName("*").length;
            }), x.getElementsByClassName = he.test(R.getElementsByClassName), x.getById = o(function(e) {
                return A.appendChild(e).id = L, !R.getElementsByName || !R.getElementsByName(L).length;
            }), x.getById ? (C.filter.ID = function(e) {
                var t = e.replace(ve, ye);
                return function(e) {
                    return e.getAttribute("id") === t;
                };
            }, C.find.ID = function(e, t) {
                if (void 0 !== t.getElementById && P) {
                    var n = t.getElementById(e);
                    return n ? [ n ] : [];
                }
            }) : (C.filter.ID = function(e) {
                var t = e.replace(ve, ye);
                return function(e) {
                    var n = void 0 !== e.getAttributeNode && e.getAttributeNode("id");
                    return n && n.value === t;
                };
            }, C.find.ID = function(e, t) {
                if (void 0 !== t.getElementById && P) {
                    var n, r, o, i = t.getElementById(e);
                    if (i) {
                        if ((// Verify the id attribute
                        n = i.getAttributeNode("id")) && n.value === e) return [ i ];
                        for (// Fall back on getElementsByName
                        o = t.getElementsByName(e), r = 0; i = o[r++]; ) if ((n = i.getAttributeNode("id")) && n.value === e) return [ i ];
                    }
                    return [];
                }
            }), C.find.TAG = x.getElementsByTagName ? function(e, t) {
                return void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e) : x.qsa ? t.querySelectorAll(e) : void 0;
            } : function(e, t) {
                var n, r = [], o = 0, // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                i = t.getElementsByTagName(e);
                // Filter out possible comments
                if ("*" === e) {
                    for (;n = i[o++]; ) 1 === n.nodeType && r.push(n);
                    return r;
                }
                return i;
            }, C.find.CLASS = x.getElementsByClassName && function(e, t) {
                if (void 0 !== t.getElementsByClassName && P) return t.getElementsByClassName(e);
            }, F = [], O = [], (x.qsa = he.test(R.querySelectorAll)) && (o(function(e) {
                // Select is set to empty string on purpose
                // This is to test IE's treatment of not explicitly
                // setting a boolean content attribute,
                // since its presence should be enough
                // https://bugs.jquery.com/ticket/12359
                A.appendChild(e).innerHTML = "<a id='" + L + "'></a><select id='" + L + "-\r\\' msallowcapture=''><option selected=''></option></select>", 
                // Support: IE8, Opera 11-12.16
                // Nothing should be selected when empty strings follow ^= or $= or *=
                // The test attribute must be unknown in Opera but "safe" for WinRT
                // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                e.querySelectorAll("[msallowcapture^='']").length && O.push("[*^$]=" + ee + "*(?:''|\"\")"), 
                // Support: IE8
                // Boolean attributes and "value" are not treated correctly
                e.querySelectorAll("[selected]").length || O.push("\\[" + ee + "*(?:value|" + Z + ")"), 
                // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                e.querySelectorAll("[id~=" + L + "-]").length || O.push("~="), // Webkit/Opera - :checked should return selected option elements
                // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                // IE8 throws error here and will not see later tests
                e.querySelectorAll(":checked").length || O.push(":checked"), // Support: Safari 8+, iOS 8+
                // https://bugs.webkit.org/show_bug.cgi?id=136851
                // In-page `selector#id sibling-combinator selector` fails
                e.querySelectorAll("a#" + L + "+*").length || O.push(".#.+[+~]");
            }), o(function(e) {
                e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                // Support: Windows 8 Native Apps
                // The type and name attributes are restricted during .innerHTML assignment
                var t = R.createElement("input");
                t.setAttribute("type", "hidden"), e.appendChild(t).setAttribute("name", "D"), // Support: IE8
                // Enforce case-sensitivity of name attribute
                e.querySelectorAll("[name=d]").length && O.push("name" + ee + "*[*^$|!~]?="), // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                // IE8 throws error here and will not see later tests
                2 !== e.querySelectorAll(":enabled").length && O.push(":enabled", ":disabled"), 
                // Support: IE9-11+
                // IE's :disabled selector does not pick up the children of disabled fieldsets
                A.appendChild(e).disabled = !0, 2 !== e.querySelectorAll(":disabled").length && O.push(":enabled", ":disabled"), 
                // Opera 10-11 does not throw on post-comma invalid pseudos
                e.querySelectorAll("*,:x"), O.push(",.*:");
            })), (x.matchesSelector = he.test(M = A.matches || A.webkitMatchesSelector || A.mozMatchesSelector || A.oMatchesSelector || A.msMatchesSelector)) && o(function(e) {
                // Check to see if it's possible to do matchesSelector
                // on a disconnected node (IE 9)
                x.disconnectedMatch = M.call(e, "*"), // This should fail with an exception
                // Gecko does not error, returns false instead
                M.call(e, "[s!='']:x"), F.push("!=", re);
            }), O = O.length && new RegExp(O.join("|")), F = F.length && new RegExp(F.join("|")), 
            t = he.test(A.compareDocumentPosition), j = t || he.test(A.contains) ? function(e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode;
                return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)));
            } : function(e, t) {
                if (t) for (;t = t.parentNode; ) if (t === e) return !0;
                return !1;
            }, z = t ? function(e, t) {
                // Flag for duplicate removal
                if (e === t) return D = !0, 0;
                // Sort on method existence if only one input has compareDocumentPosition
                var n = !e.compareDocumentPosition - !t.compareDocumentPosition;
                // Calculate position if both inputs belong to the same document
                // Otherwise we know they are disconnected
                // Disconnected nodes
                // Choose the first element that is related to our preferred document
                return n || (n = (e.ownerDocument || e) === (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1, 
                1 & n || !x.sortDetached && t.compareDocumentPosition(e) === n ? e === R || e.ownerDocument === U && j(U, e) ? -1 : t === R || t.ownerDocument === U && j(U, t) ? 1 : N ? J(N, e) - J(N, t) : 0 : 4 & n ? -1 : 1);
            } : function(e, t) {
                // Exit early if the nodes are identical
                if (e === t) return D = !0, 0;
                var n, r = 0, o = e.parentNode, i = t.parentNode, s = [ e ], u = [ t ];
                // Parentless nodes are either documents or disconnected
                if (!o || !i) return e === R ? -1 : t === R ? 1 : o ? -1 : i ? 1 : N ? J(N, e) - J(N, t) : 0;
                if (o === i) return a(e, t);
                for (// Otherwise we need full lists of their ancestors for comparison
                n = e; n = n.parentNode; ) s.unshift(n);
                for (n = t; n = n.parentNode; ) u.unshift(n);
                // Walk down the tree looking for a discrepancy
                for (;s[r] === u[r]; ) r++;
                // Do a sibling check if the nodes have a common ancestor
                // Otherwise nodes in our document sort first
                return r ? a(s[r], u[r]) : s[r] === U ? -1 : u[r] === U ? 1 : 0;
            }, R) : R;
        }, t.matches = function(e, n) {
            return t(e, null, null, n);
        }, t.matchesSelector = function(e, n) {
            if (// Set document vars if needed
            (e.ownerDocument || e) !== R && I(e), // Make sure that attribute selectors are quoted
            n = n.replace(ue, "='$1']"), x.matchesSelector && P && !V[n + " "] && (!F || !F.test(n)) && (!O || !O.test(n))) try {
                var r = M.call(e, n);
                // IE 9's matchesSelector returns false on disconnected nodes
                if (r || x.disconnectedMatch || // As well, disconnected nodes are said to be in a document
                // fragment in IE 9
                e.document && 11 !== e.document.nodeType) return r;
            } catch (e) {}
            return t(n, R, null, [ e ]).length > 0;
        }, t.contains = function(e, t) {
            // Set document vars if needed
            return (e.ownerDocument || e) !== R && I(e), j(e, t);
        }, t.attr = function(e, t) {
            // Set document vars if needed
            (e.ownerDocument || e) !== R && I(e);
            var n = C.attrHandle[t.toLowerCase()], // Don't get fooled by Object.prototype properties (jQuery #13807)
            r = n && Y.call(C.attrHandle, t.toLowerCase()) ? n(e, t, !P) : void 0;
            return void 0 !== r ? r : x.attributes || !P ? e.getAttribute(t) : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
        }, t.escape = function(e) {
            return (e + "").replace(be, xe);
        }, t.error = function(e) {
            throw new Error("Syntax error, unrecognized expression: " + e);
        }, /**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
        t.uniqueSort = function(e) {
            var t, n = [], r = 0, o = 0;
            if (// Unless we *know* we can detect duplicates, assume their presence
            D = !x.detectDuplicates, N = !x.sortStable && e.slice(0), e.sort(z), D) {
                for (;t = e[o++]; ) t === e[o] && (r = n.push(o));
                for (;r--; ) e.splice(n[r], 1);
            }
            // Clear input after sorting to release objects
            // See https://github.com/jquery/sizzle/pull/225
            return N = null, e;
        }, /**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
        w = t.getText = function(e) {
            var t, n = "", r = 0, o = e.nodeType;
            if (o) {
                if (1 === o || 9 === o || 11 === o) {
                    // Use textContent for elements
                    // innerText usage removed for consistency of new lines (jQuery #11153)
                    if ("string" == typeof e.textContent) return e.textContent;
                    // Traverse its children
                    for (e = e.firstChild; e; e = e.nextSibling) n += w(e);
                } else if (3 === o || 4 === o) return e.nodeValue;
            } else // If no nodeType, this is expected to be an array
            for (;t = e[r++]; ) // Do not traverse comment nodes
            n += w(t);
            // Do not include comment or processing instruction nodes
            return n;
        }, C = t.selectors = {
            // Can be adjusted by the user
            cacheLength: 50,
            createPseudo: r,
            match: pe,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(e) {
                    // Move the given value to match[3] whether quoted or unquoted
                    return e[1] = e[1].replace(ve, ye), e[3] = (e[3] || e[4] || e[5] || "").replace(ve, ye), 
                    "~=" === e[2] && (e[3] = " " + e[3] + " "), e.slice(0, 4);
                },
                CHILD: function(e) {
                    /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
                    // nth-* requires argument
                    // numeric x and y parameters for Expr.filter.CHILD
                    // remember that false/true cast respectively to 0/1
                    return e[1] = e[1].toLowerCase(), "nth" === e[1].slice(0, 3) ? (e[3] || t.error(e[0]), 
                    e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])), e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && t.error(e[0]), 
                    e;
                },
                PSEUDO: function(e) {
                    var t, n = !e[6] && e[2];
                    // Accept quoted arguments as-is
                    // Get excess from tokenize (recursively)
                    // advance to the next closing parenthesis
                    // excess is a negative index
                    return pe.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && le.test(n) && (t = _(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t), 
                    e[2] = n.slice(0, t)), e.slice(0, 3));
                }
            },
            filter: {
                TAG: function(e) {
                    var t = e.replace(ve, ye).toLowerCase();
                    return "*" === e ? function() {
                        return !0;
                    } : function(e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
                },
                CLASS: function(e) {
                    var t = H[e + " "];
                    return t || (t = new RegExp("(^|" + ee + ")" + e + "(" + ee + "|$)")) && H(e, function(e) {
                        return t.test("string" == typeof e.className && e.className || void 0 !== e.getAttribute && e.getAttribute("class") || "");
                    });
                },
                ATTR: function(e, n, r) {
                    return function(o) {
                        var i = t.attr(o, e);
                        return null == i ? "!=" === n : !n || (i += "", "=" === n ? i === r : "!=" === n ? i !== r : "^=" === n ? r && 0 === i.indexOf(r) : "*=" === n ? r && i.indexOf(r) > -1 : "$=" === n ? r && i.slice(-r.length) === r : "~=" === n ? (" " + i.replace(oe, " ") + " ").indexOf(r) > -1 : "|=" === n && (i === r || i.slice(0, r.length + 1) === r + "-"));
                    };
                },
                CHILD: function(e, t, n, r, o) {
                    var i = "nth" !== e.slice(0, 3), a = "last" !== e.slice(-4), s = "of-type" === t;
                    // Shortcut for :nth-*(n)
                    return 1 === r && 0 === o ? function(e) {
                        return !!e.parentNode;
                    } : function(t, n, u) {
                        var l, c, p, d, f, h, m = i !== a ? "nextSibling" : "previousSibling", g = t.parentNode, v = s && t.nodeName.toLowerCase(), y = !u && !s, b = !1;
                        if (g) {
                            // :(first|last|only)-(child|of-type)
                            if (i) {
                                for (;m; ) {
                                    for (d = t; d = d[m]; ) if (s ? d.nodeName.toLowerCase() === v : 1 === d.nodeType) return !1;
                                    // Reverse direction for :only-* (if we haven't yet done so)
                                    h = m = "only" === e && !h && "nextSibling";
                                }
                                return !0;
                            }
                            // non-xml :nth-child(...) stores cache data on `parent`
                            if (h = [ a ? g.firstChild : g.lastChild ], a && y) {
                                for (// Seek `elem` from a previously-cached index
                                // ...in a gzip-friendly way
                                d = g, p = d[L] || (d[L] = {}), // Support: IE <9 only
                                // Defend against cloned attroperties (jQuery gh-1709)
                                c = p[d.uniqueID] || (p[d.uniqueID] = {}), l = c[e] || [], f = l[0] === B && l[1], 
                                b = f && l[2], d = f && g.childNodes[f]; d = ++f && d && d[m] || (// Fallback to seeking `elem` from the start
                                b = f = 0) || h.pop(); ) // When found, cache indexes on `parent` and break
                                if (1 === d.nodeType && ++b && d === t) {
                                    c[e] = [ B, f, b ];
                                    break;
                                }
                            } else // xml :nth-child(...)
                            // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                            if (// Use previously-cached element index if available
                            y && (// ...in a gzip-friendly way
                            d = t, p = d[L] || (d[L] = {}), // Support: IE <9 only
                            // Defend against cloned attroperties (jQuery gh-1709)
                            c = p[d.uniqueID] || (p[d.uniqueID] = {}), l = c[e] || [], f = l[0] === B && l[1], 
                            b = f), !1 === b) // Use the same loop as above to seek `elem` from the start
                            for (;(d = ++f && d && d[m] || (b = f = 0) || h.pop()) && ((s ? d.nodeName.toLowerCase() !== v : 1 !== d.nodeType) || !++b || (// Cache the index of each encountered element
                            y && (p = d[L] || (d[L] = {}), // Support: IE <9 only
                            // Defend against cloned attroperties (jQuery gh-1709)
                            c = p[d.uniqueID] || (p[d.uniqueID] = {}), c[e] = [ B, b ]), d !== t)); ) ;
                            // Incorporate the offset, then check against cycle size
                            return (b -= o) === r || b % r == 0 && b / r >= 0;
                        }
                    };
                },
                PSEUDO: function(e, n) {
                    // pseudo-class names are case-insensitive
                    // http://www.w3.org/TR/selectors/#pseudo-classes
                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                    // Remember that setFilters inherits from pseudos
                    var o, i = C.pseudos[e] || C.setFilters[e.toLowerCase()] || t.error("unsupported pseudo: " + e);
                    // The user may use createPseudo to indicate that
                    // arguments are needed to create the filter function
                    // just as Sizzle does
                    // The user may use createPseudo to indicate that
                    // arguments are needed to create the filter function
                    // just as Sizzle does
                    // But maintain support for old signatures
                    return i[L] ? i(n) : i.length > 1 ? (o = [ e, e, "", n ], C.setFilters.hasOwnProperty(e.toLowerCase()) ? r(function(e, t) {
                        for (var r, o = i(e, n), a = o.length; a--; ) r = J(e, o[a]), e[r] = !(t[r] = o[a]);
                    }) : function(e) {
                        return i(e, 0, o);
                    }) : i;
                }
            },
            pseudos: {
                // Potentially complex pseudos
                not: r(function(e) {
                    // Trim the selector passed to compile
                    // to avoid treating leading and trailing
                    // spaces as combinators
                    var t = [], n = [], o = k(e.replace(ie, "$1"));
                    return o[L] ? r(function(e, t, n, r) {
                        // Match elements unmatched by `matcher`
                        for (var i, a = o(e, null, r, []), s = e.length; s--; ) (i = a[s]) && (e[s] = !(t[s] = i));
                    }) : function(e, r, i) {
                        // Don't keep the element (issue #299)
                        return t[0] = e, o(t, null, i, n), t[0] = null, !n.pop();
                    };
                }),
                has: r(function(e) {
                    return function(n) {
                        return t(e, n).length > 0;
                    };
                }),
                contains: r(function(e) {
                    return e = e.replace(ve, ye), function(t) {
                        return (t.textContent || t.innerText || w(t)).indexOf(e) > -1;
                    };
                }),
                // "Whether an element is represented by a :lang() selector
                // is based solely on the element's language value
                // being equal to the identifier C,
                // or beginning with the identifier C immediately followed by "-".
                // The matching of C against the element's language value is performed case-insensitively.
                // The identifier C does not have to be a valid language name."
                // http://www.w3.org/TR/selectors/#lang-pseudo
                lang: r(function(e) {
                    // lang value must be a valid identifier
                    return ce.test(e || "") || t.error("unsupported lang: " + e), e = e.replace(ve, ye).toLowerCase(), 
                    function(t) {
                        var n;
                        do {
                            if (n = P ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-");
                        } while ((t = t.parentNode) && 1 === t.nodeType);
                        return !1;
                    };
                }),
                // Miscellaneous
                target: function(t) {
                    var n = e.location && e.location.hash;
                    return n && n.slice(1) === t.id;
                },
                root: function(e) {
                    return e === A;
                },
                focus: function(e) {
                    return e === R.activeElement && (!R.hasFocus || R.hasFocus()) && !!(e.type || e.href || ~e.tabIndex);
                },
                // Boolean properties
                enabled: s(!1),
                disabled: s(!0),
                checked: function(e) {
                    // In CSS3, :checked should return both checked and selected elements
                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && !!e.checked || "option" === t && !!e.selected;
                },
                selected: function(e) {
                    // Accessing this property makes selected-by-default
                    // options in Safari work properly
                    return e.parentNode && e.parentNode.selectedIndex, !0 === e.selected;
                },
                // Contents
                empty: function(e) {
                    // http://www.w3.org/TR/selectors/#empty-pseudo
                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                    //   but not by others (comment: 8; processing instruction: 7; etc.)
                    // nodeType < 6 works because attributes (2) do not appear as children
                    for (e = e.firstChild; e; e = e.nextSibling) if (e.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(e) {
                    return !C.pseudos.empty(e);
                },
                // Element/input types
                header: function(e) {
                    return fe.test(e.nodeName);
                },
                input: function(e) {
                    return de.test(e.nodeName);
                },
                button: function(e) {
                    var t = e.nodeName.toLowerCase();
                    return "input" === t && "button" === e.type || "button" === t;
                },
                text: function(e) {
                    var t;
                    // Support: IE<8
                    // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                    return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase());
                },
                // Position-in-collection
                first: u(function() {
                    return [ 0 ];
                }),
                last: u(function(e, t) {
                    return [ t - 1 ];
                }),
                eq: u(function(e, t, n) {
                    return [ n < 0 ? n + t : n ];
                }),
                even: u(function(e, t) {
                    for (var n = 0; n < t; n += 2) e.push(n);
                    return e;
                }),
                odd: u(function(e, t) {
                    for (var n = 1; n < t; n += 2) e.push(n);
                    return e;
                }),
                lt: u(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; --r >= 0; ) e.push(r);
                    return e;
                }),
                gt: u(function(e, t, n) {
                    for (var r = n < 0 ? n + t : n; ++r < t; ) e.push(r);
                    return e;
                })
            }
        }, C.pseudos.nth = C.pseudos.eq;
        // Add button/input type pseudos
        for (b in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) C.pseudos[b] = /**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
        function(e) {
            return function(t) {
                return "input" === t.nodeName.toLowerCase() && t.type === e;
            };
        }(b);
        for (b in {
            submit: !0,
            reset: !0
        }) C.pseudos[b] = /**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
        function(e) {
            return function(t) {
                var n = t.nodeName.toLowerCase();
                return ("input" === n || "button" === n) && t.type === e;
            };
        }(b);
        /**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
        // One-time assignments
        // Sort stability
        // Support: Chrome 14-35+
        // Always assume duplicates if they aren't passed to the comparison function
        // Initialize against the default document
        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
        // Detached nodes confoundingly follow *each other*
        // Support: IE<8
        // Prevent attribute/property "interpolation"
        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
        // Support: IE<9
        // Use defaultValue in place of getAttribute("value")
        // Support: IE<9
        // Use getAttributeNode to fetch booleans when getAttribute lies
        return c.prototype = C.filters = C.pseudos, C.setFilters = new c(), _ = t.tokenize = function(e, n) {
            var r, o, i, a, s, u, l, c = W[e + " "];
            if (c) return n ? 0 : c.slice(0);
            for (s = e, u = [], l = C.preFilter; s; ) {
                // Comma and first run
                r && !(o = ae.exec(s)) || (o && (// Don't consume trailing commas as valid
                s = s.slice(o[0].length) || s), u.push(i = [])), r = !1, // Combinators
                (o = se.exec(s)) && (r = o.shift(), i.push({
                    value: r,
                    // Cast descendant combinators to space
                    type: o[0].replace(ie, " ")
                }), s = s.slice(r.length));
                // Filters
                for (a in C.filter) !(o = pe[a].exec(s)) || l[a] && !(o = l[a](o)) || (r = o.shift(), 
                i.push({
                    value: r,
                    type: a,
                    matches: o
                }), s = s.slice(r.length));
                if (!r) break;
            }
            // Return the length of the invalid excess
            // if we're just parsing
            // Otherwise, throw an error or return tokens
            // Cache the tokens
            return n ? s.length : s ? t.error(e) : W(e, u).slice(0);
        }, k = t.compile = function(e, t) {
            var n, r = [], o = [], i = V[e + " "];
            if (!i) {
                for (// Generate a function of recursive functions that can be used to check each element
                t || (t = _(e)), n = t.length; n--; ) i = v(t[n]), i[L] ? r.push(i) : o.push(i);
                // Cache the compiled function
                i = V(e, y(o, r)), // Save selector and tokenization
                i.selector = e;
            }
            return i;
        }, T = t.select = function(e, t, n, r) {
            var o, i, a, s, u, c = "function" == typeof e && e, d = !r && _(e = c.selector || e);
            // Try to minimize operations if there is only one selector in the list and no seed
            // (the latter of which guarantees us context)
            if (n = n || [], 1 === d.length) {
                if (// Reduce context if the leading compound selector is an ID
                i = d[0] = d[0].slice(0), i.length > 2 && "ID" === (a = i[0]).type && 9 === t.nodeType && P && C.relative[i[1].type]) {
                    if (!(t = (C.find.ID(a.matches[0].replace(ve, ye), t) || [])[0])) return n;
                    c && (t = t.parentNode), e = e.slice(i.shift().value.length);
                }
                for (// Fetch a seed set for right-to-left matching
                o = pe.needsContext.test(e) ? 0 : i.length; o-- && (a = i[o], !C.relative[s = a.type]); ) if ((u = C.find[s]) && (r = u(a.matches[0].replace(ve, ye), ge.test(i[0].type) && l(t.parentNode) || t))) {
                    if (// If seed is empty or no tokens remain, we can return early
                    i.splice(o, 1), !(e = r.length && p(i))) return G.apply(n, r), n;
                    break;
                }
            }
            // Compile and execute a filtering function if one is not provided
            // Provide `match` to avoid retokenization if we modified the selector above
            return (c || k(e, d))(r, t, !P, n, !t || ge.test(e) && l(t.parentNode) || t), n;
        }, x.sortStable = L.split("").sort(z).join("") === L, x.detectDuplicates = !!D, 
        I(), x.sortDetached = o(function(e) {
            // Should return 1, but returns 4 (following)
            return 1 & e.compareDocumentPosition(R.createElement("fieldset"));
        }), o(function(e) {
            return e.innerHTML = "<a href='#'></a>", "#" === e.firstChild.getAttribute("href");
        }) || i("type|href|height|width", function(e, t, n) {
            if (!n) return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
        }), x.attributes && o(function(e) {
            return e.innerHTML = "<input/>", e.firstChild.setAttribute("value", ""), "" === e.firstChild.getAttribute("value");
        }) || i("value", function(e, t, n) {
            if (!n && "input" === e.nodeName.toLowerCase()) return e.defaultValue;
        }), o(function(e) {
            return null == e.getAttribute("disabled");
        }) || i(Z, function(e, t, n) {
            var r;
            if (!n) return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null;
        }), t;
    }(e);
    he.find = be, he.expr = be.selectors, // Deprecated
    he.expr[":"] = he.expr.pseudos, he.uniqueSort = he.unique = be.uniqueSort, he.text = be.getText, 
    he.isXMLDoc = be.isXML, he.contains = be.contains, he.escapeSelector = be.escape;
    var xe = function(e, t, n) {
        for (var r = [], o = void 0 !== n; (e = e[t]) && 9 !== e.nodeType; ) if (1 === e.nodeType) {
            if (o && he(e).is(n)) break;
            r.push(e);
        }
        return r;
    }, Ce = function(e, t) {
        for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e);
        return n;
    }, we = he.expr.match.needsContext, Ee = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i, _e = /^.[^:#\[\.,]*$/;
    he.filter = function(e, t, n) {
        var r = t[0];
        return n && (e = ":not(" + e + ")"), 1 === t.length && 1 === r.nodeType ? he.find.matchesSelector(r, e) ? [ r ] : [] : he.find.matches(e, he.grep(t, function(e) {
            return 1 === e.nodeType;
        }));
    }, he.fn.extend({
        find: function(e) {
            var t, n, r = this.length, o = this;
            if ("string" != typeof e) return this.pushStack(he(e).filter(function() {
                for (t = 0; t < r; t++) if (he.contains(o[t], this)) return !0;
            }));
            for (n = this.pushStack([]), t = 0; t < r; t++) he.find(e, o[t], n);
            return r > 1 ? he.uniqueSort(n) : n;
        },
        filter: function(e) {
            return this.pushStack(i(this, e || [], !1));
        },
        not: function(e) {
            return this.pushStack(i(this, e || [], !0));
        },
        is: function(e) {
            // If this is a positional/relative selector, check membership in the returned set
            // so $("p:first").is("p:last") won't return true for a doc with two "p".
            return !!i(this, "string" == typeof e && we.test(e) ? he(e) : e || [], !1).length;
        }
    });
    // Initialize a jQuery object
    // A central reference to the root jQuery(document)
    var ke, // A simple way to check for HTML strings
    // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
    // Strict HTML recognition (#11290: must start with <)
    // Shortcut simple #id case for speed
    Te = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
    // Give the init function the jQuery prototype for later instantiation
    (he.fn.init = function(e, t, n) {
        var r, o;
        // HANDLE: $(""), $(null), $(undefined), $(false)
        if (!e) return this;
        // Handle HTML strings
        if (// Method init() accepts an alternate rootjQuery
        // so migrate can support jQuery.sub (gh-2101)
        n = n || ke, "string" == typeof e) {
            // Match html or make sure no context is specified for #id
            if (!(// Assume that strings that start and end with <> are HTML and skip the regex check
            r = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [ null, e, null ] : Te.exec(e)) || !r[1] && t) return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
            // HANDLE: $(html) -> $(array)
            if (r[1]) {
                // HANDLE: $(html, props)
                if (t = t instanceof he ? t[0] : t, // Option to run scripts is true for back-compat
                // Intentionally let the error be thrown if parseHTML is not present
                he.merge(this, he.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : ne, !0)), 
                Ee.test(r[1]) && he.isPlainObject(t)) for (r in t) // Properties of context are called as methods if possible
                he.isFunction(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                return this;
            }
            // Inject the element directly into the jQuery object
            return o = ne.getElementById(r[2]), o && (this[0] = o, this.length = 1), this;
        }
        // Execute immediately if ready is not present
        return e.nodeType ? (this[0] = e, this.length = 1, this) : he.isFunction(e) ? void 0 !== n.ready ? n.ready(e) : e(he) : he.makeArray(e, this);
    }).prototype = he.fn, // Initialize central reference
    ke = he(ne);
    var Se = /^(?:parents|prev(?:Until|All))/, // Methods guaranteed to produce a unique set when starting from a unique set
    Ne = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    he.fn.extend({
        has: function(e) {
            var t = he(e, this), n = t.length;
            return this.filter(function() {
                for (var e = 0; e < n; e++) if (he.contains(this, t[e])) return !0;
            });
        },
        closest: function(e, t) {
            var n, r = 0, o = this.length, i = [], a = "string" != typeof e && he(e);
            // Positional selectors never match, since there's no _selection_ context
            if (!we.test(e)) for (;r < o; r++) for (n = this[r]; n && n !== t; n = n.parentNode) // Always skip document fragments
            if (n.nodeType < 11 && (a ? a.index(n) > -1 : // Don't pass non-elements to Sizzle
            1 === n.nodeType && he.find.matchesSelector(n, e))) {
                i.push(n);
                break;
            }
            return this.pushStack(i.length > 1 ? he.uniqueSort(i) : i);
        },
        // Determine the position of an element within the set
        index: function(e) {
            // No argument, return index in parent
            // No argument, return index in parent
            // Index in selector
            // If it receives a jQuery object, the first element is used
            return e ? "string" == typeof e ? se.call(he(e), this[0]) : se.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(e, t) {
            return this.pushStack(he.uniqueSort(he.merge(this.get(), he(e, t))));
        },
        addBack: function(e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        }
    }), he.each({
        parent: function(e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null;
        },
        parents: function(e) {
            return xe(e, "parentNode");
        },
        parentsUntil: function(e, t, n) {
            return xe(e, "parentNode", n);
        },
        next: function(e) {
            return a(e, "nextSibling");
        },
        prev: function(e) {
            return a(e, "previousSibling");
        },
        nextAll: function(e) {
            return xe(e, "nextSibling");
        },
        prevAll: function(e) {
            return xe(e, "previousSibling");
        },
        nextUntil: function(e, t, n) {
            return xe(e, "nextSibling", n);
        },
        prevUntil: function(e, t, n) {
            return xe(e, "previousSibling", n);
        },
        siblings: function(e) {
            return Ce((e.parentNode || {}).firstChild, e);
        },
        children: function(e) {
            return Ce(e.firstChild);
        },
        contents: function(e) {
            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
            // Treat the template element as a regular one in browsers that
            // don't support it.
            return o(e, "iframe") ? e.contentDocument : (o(e, "template") && (e = e.content || e), 
            he.merge([], e.childNodes));
        }
    }, function(e, t) {
        he.fn[e] = function(n, r) {
            var o = he.map(this, t, n);
            // Remove duplicates
            // Reverse order for parents* and prev-derivatives
            return "Until" !== e.slice(-5) && (r = n), r && "string" == typeof r && (o = he.filter(r, o)), 
            this.length > 1 && (Ne[e] || he.uniqueSort(o), Se.test(e) && o.reverse()), this.pushStack(o);
        };
    });
    var De = /[^\x20\t\r\n\f]+/g;
    /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
    he.Callbacks = function(e) {
        // Convert options from String-formatted to Object-formatted if needed
        // (we check in cache first)
        e = "string" == typeof e ? s(e) : he.extend({}, e);
        var // Flag to know if list is currently firing
        t, // Last fire value for non-forgettable lists
        n, // Flag to know if list was already fired
        r, // Flag to prevent firing
        o, // Actual callback list
        i = [], // Queue of execution data for repeatable lists
        a = [], // Index of currently firing callback (modified by add/remove as needed)
        u = -1, // Fire callbacks
        l = function() {
            for (// Enforce single-firing
            o = o || e.once, // Execute callbacks for all pending executions,
            // respecting firingIndex overrides and runtime changes
            r = t = !0; a.length; u = -1) for (n = a.shift(); ++u < i.length; ) // Run callback and check for early termination
            !1 === i[u].apply(n[0], n[1]) && e.stopOnFalse && (// Jump to end and forget the data so .add doesn't re-fire
            u = i.length, n = !1);
            // Forget the data if we're done with it
            e.memory || (n = !1), t = !1, // Clean up if we're done firing for good
            o && (// Keep an empty list if we have data for future add calls
            i = n ? [] : "");
        }, // Actual Callbacks object
        c = {
            // Add a callback or a collection of callbacks to the list
            add: function() {
                // If we have memory from a past run, we should fire after adding
                return i && (n && !t && (u = i.length - 1, a.push(n)), function t(n) {
                    he.each(n, function(n, r) {
                        he.isFunction(r) ? e.unique && c.has(r) || i.push(r) : r && r.length && "string" !== he.type(r) && // Inspect recursively
                        t(r);
                    });
                }(arguments), n && !t && l()), this;
            },
            // Remove a callback from the list
            remove: function() {
                return he.each(arguments, function(e, t) {
                    for (var n; (n = he.inArray(t, i, n)) > -1; ) i.splice(n, 1), // Handle firing indexes
                    n <= u && u--;
                }), this;
            },
            // Check if a given callback is in the list.
            // If no argument is given, return whether or not list has callbacks attached.
            has: function(e) {
                return e ? he.inArray(e, i) > -1 : i.length > 0;
            },
            // Remove all callbacks from the list
            empty: function() {
                return i && (i = []), this;
            },
            // Disable .fire and .add
            // Abort any current/pending executions
            // Clear all callbacks and values
            disable: function() {
                return o = a = [], i = n = "", this;
            },
            disabled: function() {
                return !i;
            },
            // Disable .fire
            // Also disable .add unless we have memory (since it would have no effect)
            // Abort any pending executions
            lock: function() {
                return o = a = [], n || t || (i = n = ""), this;
            },
            locked: function() {
                return !!o;
            },
            // Call all callbacks with the given context and arguments
            fireWith: function(e, n) {
                return o || (n = n || [], n = [ e, n.slice ? n.slice() : n ], a.push(n), t || l()), 
                this;
            },
            // Call all the callbacks with the given arguments
            fire: function() {
                return c.fireWith(this, arguments), this;
            },
            // To know if the callbacks have already been called at least once
            fired: function() {
                return !!r;
            }
        };
        return c;
    }, he.extend({
        Deferred: function(t) {
            var n = [ // action, add listener, callbacks,
            // ... .then handlers, argument index, [final state]
            [ "notify", "progress", he.Callbacks("memory"), he.Callbacks("memory"), 2 ], [ "resolve", "done", he.Callbacks("once memory"), he.Callbacks("once memory"), 0, "resolved" ], [ "reject", "fail", he.Callbacks("once memory"), he.Callbacks("once memory"), 1, "rejected" ] ], r = "pending", o = {
                state: function() {
                    return r;
                },
                always: function() {
                    return i.done(arguments).fail(arguments), this;
                },
                catch: function(e) {
                    return o.then(null, e);
                },
                // Keep pipe for back-compat
                pipe: function() {
                    var e = arguments;
                    return he.Deferred(function(t) {
                        he.each(n, function(n, r) {
                            // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                            var o = he.isFunction(e[r[4]]) && e[r[4]];
                            // deferred.progress(function() { bind to newDefer or newDefer.notify })
                            // deferred.done(function() { bind to newDefer or newDefer.resolve })
                            // deferred.fail(function() { bind to newDefer or newDefer.reject })
                            i[r[1]](function() {
                                var e = o && o.apply(this, arguments);
                                e && he.isFunction(e.promise) ? e.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[r[0] + "With"](this, o ? [ e ] : arguments);
                            });
                        }), e = null;
                    }).promise();
                },
                then: function(t, r, o) {
                    function i(t, n, r, o) {
                        return function() {
                            var s = this, c = arguments, p = function() {
                                var e, p;
                                // Support: Promises/A+ section 2.3.3.3.3
                                // https://promisesaplus.com/#point-59
                                // Ignore double-resolution attempts
                                if (!(t < a)) {
                                    // Support: Promises/A+ section 2.3.1
                                    // https://promisesaplus.com/#point-48
                                    if ((e = r.apply(s, c)) === n.promise()) throw new TypeError("Thenable self-resolution");
                                    // Support: Promises/A+ sections 2.3.3.1, 3.5
                                    // https://promisesaplus.com/#point-54
                                    // https://promisesaplus.com/#point-75
                                    // Retrieve `then` only once
                                    p = e && (// Support: Promises/A+ section 2.3.4
                                    // https://promisesaplus.com/#point-64
                                    // Only check objects and functions for thenability
                                    "object" == typeof e || "function" == typeof e) && e.then, // Handle a returned thenable
                                    he.isFunction(p) ? // Special processors (notify) just wait for resolution
                                    o ? p.call(e, i(a, n, u, o), i(a, n, l, o)) : (// ...and disregard older resolution values
                                    a++, p.call(e, i(a, n, u, o), i(a, n, l, o), i(a, n, u, n.notifyWith))) : (// Only substitute handlers pass on context
                                    // and multiple values (non-spec behavior)
                                    r !== u && (s = void 0, c = [ e ]), // Process the value(s)
                                    // Default process is resolve
                                    (o || n.resolveWith)(s, c));
                                }
                            }, // Only normal processors (resolve) catch and reject exceptions
                            d = o ? p : function() {
                                try {
                                    p();
                                } catch (e) {
                                    he.Deferred.exceptionHook && he.Deferred.exceptionHook(e, d.stackTrace), // Support: Promises/A+ section 2.3.3.3.4.1
                                    // https://promisesaplus.com/#point-61
                                    // Ignore post-resolution exceptions
                                    t + 1 >= a && (// Only substitute handlers pass on context
                                    // and multiple values (non-spec behavior)
                                    r !== l && (s = void 0, c = [ e ]), n.rejectWith(s, c));
                                }
                            };
                            // Support: Promises/A+ section 2.3.3.3.1
                            // https://promisesaplus.com/#point-57
                            // Re-resolve promises immediately to dodge false rejection from
                            // subsequent errors
                            t ? d() : (// Call an optional hook to record the stack, in case of exception
                            // since it's otherwise lost when execution goes async
                            he.Deferred.getStackHook && (d.stackTrace = he.Deferred.getStackHook()), e.setTimeout(d));
                        };
                    }
                    var a = 0;
                    return he.Deferred(function(e) {
                        // progress_handlers.add( ... )
                        n[0][3].add(i(0, e, he.isFunction(o) ? o : u, e.notifyWith)), // fulfilled_handlers.add( ... )
                        n[1][3].add(i(0, e, he.isFunction(t) ? t : u)), // rejected_handlers.add( ... )
                        n[2][3].add(i(0, e, he.isFunction(r) ? r : l));
                    }).promise();
                },
                // Get a promise for this deferred
                // If obj is provided, the promise aspect is added to the object
                promise: function(e) {
                    return null != e ? he.extend(e, o) : o;
                }
            }, i = {};
            // All done!
            // Add list-specific methods
            // Make the deferred a promise
            // Call given func if any
            return he.each(n, function(e, t) {
                var a = t[2], s = t[5];
                // promise.progress = list.add
                // promise.done = list.add
                // promise.fail = list.add
                o[t[1]] = a.add, // Handle state
                s && a.add(function() {
                    // state = "resolved" (i.e., fulfilled)
                    // state = "rejected"
                    r = s;
                }, // rejected_callbacks.disable
                // fulfilled_callbacks.disable
                n[3 - e][2].disable, // progress_callbacks.lock
                n[0][2].lock), // progress_handlers.fire
                // fulfilled_handlers.fire
                // rejected_handlers.fire
                a.add(t[3].fire), // deferred.notify = function() { deferred.notifyWith(...) }
                // deferred.resolve = function() { deferred.resolveWith(...) }
                // deferred.reject = function() { deferred.rejectWith(...) }
                i[t[0]] = function() {
                    return i[t[0] + "With"](this === i ? void 0 : this, arguments), this;
                }, // deferred.notifyWith = list.fireWith
                // deferred.resolveWith = list.fireWith
                // deferred.rejectWith = list.fireWith
                i[t[0] + "With"] = a.fireWith;
            }), o.promise(i), t && t.call(i, i), i;
        },
        // Deferred helper
        when: function(e) {
            var // count of uncompleted subordinates
            t = arguments.length, // count of unprocessed arguments
            n = t, // subordinate fulfillment data
            r = Array(n), o = oe.call(arguments), // the master Deferred
            i = he.Deferred(), // subordinate callback factory
            a = function(e) {
                return function(n) {
                    r[e] = this, o[e] = arguments.length > 1 ? oe.call(arguments) : n, --t || i.resolveWith(r, o);
                };
            };
            // Single- and empty arguments are adopted like Promise.resolve
            if (t <= 1 && (c(e, i.done(a(n)).resolve, i.reject, !t), "pending" === i.state() || he.isFunction(o[n] && o[n].then))) return i.then();
            // Multiple arguments are aggregated like Promise.all array elements
            for (;n--; ) c(o[n], a(n), i.reject);
            return i.promise();
        }
    });
    // These usually indicate a programmer mistake during development,
    // warn about them ASAP rather than swallowing them by default.
    var Ie = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    he.Deferred.exceptionHook = function(t, n) {
        // Support: IE 8 - 9 only
        // Console exists when dev tools are open, which can happen at any time
        e.console && e.console.warn && t && Ie.test(t.name) && e.console.warn("jQuery.Deferred exception: " + t.message, t.stack, n);
    }, he.readyException = function(t) {
        e.setTimeout(function() {
            throw t;
        });
    };
    // The deferred used on DOM ready
    var Re = he.Deferred();
    he.fn.ready = function(e) {
        return Re.then(e).catch(function(e) {
            he.readyException(e);
        }), this;
    }, he.extend({
        // Is the DOM ready to be used? Set to true once it occurs.
        isReady: !1,
        // A counter to track how many items to wait for before
        // the ready event fires. See #6781
        readyWait: 1,
        // Handle when the DOM is ready
        ready: function(e) {
            // Abort if there are pending holds or we're already ready
            (!0 === e ? --he.readyWait : he.isReady) || (// Remember that the DOM is ready
            he.isReady = !0, // If a normal DOM Ready event fired, decrement, and wait if need be
            !0 !== e && --he.readyWait > 0 || // If there are functions bound, to execute
            Re.resolveWith(ne, [ he ]));
        }
    }), he.ready.then = Re.then, // Catch cases where $(document).ready() is called
    // after the browser event has already occurred.
    // Support: IE <=9 - 10 only
    // Older IE sometimes signals "interactive" too soon
    "complete" === ne.readyState || "loading" !== ne.readyState && !ne.documentElement.doScroll ? // Handle it asynchronously to allow scripts the opportunity to delay ready
    e.setTimeout(he.ready) : (// Use the handy event callback
    ne.addEventListener("DOMContentLoaded", p), // A fallback to window.onload, that will always work
    e.addEventListener("load", p));
    // Multifunctional method to get and set values of a collection
    // The value/s can optionally be executed if it's a function
    var Ae = function(e, t, n, r, o, i, a) {
        var s = 0, u = e.length, l = null == n;
        // Sets many values
        if ("object" === he.type(n)) {
            o = !0;
            for (s in n) Ae(e, t, s, n[s], !0, i, a);
        } else if (void 0 !== r && (o = !0, he.isFunction(r) || (a = !0), l && (// Bulk operations run against the entire set
        a ? (t.call(e, r), t = null) : (l = t, t = function(e, t, n) {
            return l.call(he(e), n);
        })), t)) for (;s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n)));
        // Gets
        return o ? e : l ? t.call(e) : u ? t(e[0], n) : i;
    }, Pe = function(e) {
        // Accepts only:
        //  - Node
        //    - Node.ELEMENT_NODE
        //    - Node.DOCUMENT_NODE
        //  - Object
        //    - Any
        return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType;
    };
    d.uid = 1, d.prototype = {
        cache: function(e) {
            // Check if the owner object already has a cache
            var t = e[this.expando];
            // If not, create one
            // We can accept data for non-element nodes in modern browsers,
            // but we should not, see #8335.
            // Always return an empty object.
            // If it is a node unlikely to be stringify-ed or looped over
            // use plain assignment
            return t || (t = {}, Pe(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                value: t,
                configurable: !0
            }))), t;
        },
        set: function(e, t, n) {
            var r, o = this.cache(e);
            // Handle: [ owner, key, value ] args
            // Always use camelCase key (gh-2257)
            if ("string" == typeof t) o[he.camelCase(t)] = n; else // Copy the properties one-by-one to the cache object
            for (r in t) o[he.camelCase(r)] = t[r];
            return o;
        },
        get: function(e, t) {
            // Always use camelCase key (gh-2257)
            return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][he.camelCase(t)];
        },
        access: function(e, t, n) {
            // In cases where either:
            //
            //   1. No key was specified
            //   2. A string key was specified, but no value provided
            //
            // Take the "read" path and allow the get method to determine
            // which value to return, respectively either:
            //
            //   1. The entire cache object
            //   2. The data stored at the key
            //
            // In cases where either:
            //
            //   1. No key was specified
            //   2. A string key was specified, but no value provided
            //
            // Take the "read" path and allow the get method to determine
            // which value to return, respectively either:
            //
            //   1. The entire cache object
            //   2. The data stored at the key
            //
            // When the key is not a string, or both a key and value
            // are specified, set or extend (existing objects) with either:
            //
            //   1. An object of properties
            //   2. A key and value
            //
            return void 0 === t || t && "string" == typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n), 
            void 0 !== n ? n : t);
        },
        remove: function(e, t) {
            var n, r = e[this.expando];
            if (void 0 !== r) {
                if (void 0 !== t) {
                    // Support array or space separated string of keys
                    Array.isArray(t) ? // If key is an array of keys...
                    // We always set camelCase keys, so remove that.
                    t = t.map(he.camelCase) : (t = he.camelCase(t), // If a key with the spaces exists, use it.
                    // Otherwise, create an array by matching non-whitespace
                    t = t in r ? [ t ] : t.match(De) || []), n = t.length;
                    for (;n--; ) delete r[t[n]];
                }
                // Remove the expando if there's no more data
                (void 0 === t || he.isEmptyObject(r)) && (// Support: Chrome <=35 - 45
                // Webkit & Blink performance suffers when deleting properties
                // from DOM nodes, so set to undefined instead
                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                e.nodeType ? e[this.expando] = void 0 : delete e[this.expando]);
            }
        },
        hasData: function(e) {
            var t = e[this.expando];
            return void 0 !== t && !he.isEmptyObject(t);
        }
    };
    var Oe = new d(), Fe = new d(), Me = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, je = /[A-Z]/g;
    he.extend({
        hasData: function(e) {
            return Fe.hasData(e) || Oe.hasData(e);
        },
        data: function(e, t, n) {
            return Fe.access(e, t, n);
        },
        removeData: function(e, t) {
            Fe.remove(e, t);
        },
        // TODO: Now that all calls to _data and _removeData have been replaced
        // with direct calls to dataPriv methods, these can be deprecated.
        _data: function(e, t, n) {
            return Oe.access(e, t, n);
        },
        _removeData: function(e, t) {
            Oe.remove(e, t);
        }
    }), he.fn.extend({
        data: function(e, t) {
            var n, r, o, i = this[0], a = i && i.attributes;
            // Gets all values
            if (void 0 === e) {
                if (this.length && (o = Fe.get(i), 1 === i.nodeType && !Oe.get(i, "hasDataAttrs"))) {
                    for (n = a.length; n--; ) // Support: IE 11 only
                    // The attrs elements can be null (#14894)
                    a[n] && (r = a[n].name, 0 === r.indexOf("data-") && (r = he.camelCase(r.slice(5)), 
                    h(i, r, o[r])));
                    Oe.set(i, "hasDataAttrs", !0);
                }
                return o;
            }
            // Sets multiple values
            // Sets multiple values
            return "object" == typeof e ? this.each(function() {
                Fe.set(this, e);
            }) : Ae(this, function(t) {
                var n;
                // The calling jQuery object (element matches) is not empty
                // (and therefore has an element appears at this[ 0 ]) and the
                // `value` parameter was not undefined. An empty jQuery object
                // will result in `undefined` for elem = this[ 0 ] which will
                // throw an exception if an attempt to read a data cache is made.
                if (i && void 0 === t) {
                    if (void 0 !== (// Attempt to get data from the cache
                    // The key will always be camelCased in Data
                    n = Fe.get(i, e))) return n;
                    if (void 0 !== (// Attempt to "discover" the data in
                    // HTML5 custom data-* attrs
                    n = h(i, e))) return n;
                } else // Set the data...
                this.each(function() {
                    // We always store the camelCased key
                    Fe.set(this, e, t);
                });
            }, null, t, arguments.length > 1, null, !0);
        },
        removeData: function(e) {
            return this.each(function() {
                Fe.remove(this, e);
            });
        }
    }), he.extend({
        queue: function(e, t, n) {
            var r;
            if (e) // Speed up dequeue by getting out quickly if this is just a lookup
            return t = (t || "fx") + "queue", r = Oe.get(e, t), n && (!r || Array.isArray(n) ? r = Oe.access(e, t, he.makeArray(n)) : r.push(n)), 
            r || [];
        },
        dequeue: function(e, t) {
            t = t || "fx";
            var n = he.queue(e, t), r = n.length, o = n.shift(), i = he._queueHooks(e, t), a = function() {
                he.dequeue(e, t);
            };
            // If the fx queue is dequeued, always remove the progress sentinel
            "inprogress" === o && (o = n.shift(), r--), o && (// Add a progress sentinel to prevent the fx queue from being
            // automatically dequeued
            "fx" === t && n.unshift("inprogress"), // Clear up the last queue stop function
            delete i.stop, o.call(e, a, i)), !r && i && i.empty.fire();
        },
        // Not public - generate a queueHooks object, or return the current one
        _queueHooks: function(e, t) {
            var n = t + "queueHooks";
            return Oe.get(e, n) || Oe.access(e, n, {
                empty: he.Callbacks("once memory").add(function() {
                    Oe.remove(e, [ t + "queue", n ]);
                })
            });
        }
    }), he.fn.extend({
        queue: function(e, t) {
            var n = 2;
            return "string" != typeof e && (t = e, e = "fx", n--), arguments.length < n ? he.queue(this[0], e) : void 0 === t ? this : this.each(function() {
                var n = he.queue(this, e, t);
                // Ensure a hooks for this queue
                he._queueHooks(this, e), "fx" === e && "inprogress" !== n[0] && he.dequeue(this, e);
            });
        },
        dequeue: function(e) {
            return this.each(function() {
                he.dequeue(this, e);
            });
        },
        clearQueue: function(e) {
            return this.queue(e || "fx", []);
        },
        // Get a promise resolved when queues of a certain type
        // are emptied (fx is the type by default)
        promise: function(e, t) {
            var n, r = 1, o = he.Deferred(), i = this, a = this.length, s = function() {
                --r || o.resolveWith(i, [ i ]);
            };
            for ("string" != typeof e && (t = e, e = void 0), e = e || "fx"; a--; ) (n = Oe.get(i[a], e + "queueHooks")) && n.empty && (r++, 
            n.empty.add(s));
            return s(), o.promise(t);
        }
    });
    var Le = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, Ue = new RegExp("^(?:([+-])=|)(" + Le + ")([a-z%]*)$", "i"), Be = [ "Top", "Right", "Bottom", "Left" ], qe = function(e, t) {
        // Inline style trumps all
        // isHiddenWithinTree might be called from jQuery#filter function;
        // in that case, element will be second argument
        // Otherwise, check computed style
        // Support: Firefox <=43 - 45
        // Disconnected elements can have computed display: none, so first confirm that elem is
        // in the document.
        return e = t || e, "none" === e.style.display || "" === e.style.display && he.contains(e.ownerDocument, e) && "none" === he.css(e, "display");
    }, He = function(e, t, n, r) {
        var o, i, a = {};
        // Remember the old values, and insert the new ones
        for (i in t) a[i] = e.style[i], e.style[i] = t[i];
        o = n.apply(e, r || []);
        // Revert the old values
        for (i in t) e.style[i] = a[i];
        return o;
    }, We = {};
    he.fn.extend({
        show: function() {
            return v(this, !0);
        },
        hide: function() {
            return v(this);
        },
        toggle: function(e) {
            return "boolean" == typeof e ? e ? this.show() : this.hide() : this.each(function() {
                qe(this) ? he(this).show() : he(this).hide();
            });
        }
    });
    var Ve = /^(?:checkbox|radio)$/i, ze = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i, Ye = /^$|\/(?:java|ecma)script/i, $e = {
        // Support: IE <=9 only
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        // XHTML parsers do not magically insert elements in the
        // same way that tag soup parsers do. So we cannot shorten
        // this by omitting <tbody> or other required elements.
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    // Support: IE <=9 only
    $e.optgroup = $e.option, $e.tbody = $e.tfoot = $e.colgroup = $e.caption = $e.thead, 
    $e.th = $e.td;
    var Xe = /<|&#?\w+;/;
    !function() {
        var e = ne.createDocumentFragment(), t = e.appendChild(ne.createElement("div")), n = ne.createElement("input");
        // Support: Android 4.0 - 4.3 only
        // Check state lost if the name is set (#11217)
        // Support: Windows Web Apps (WWA)
        // `name` and `type` must use .setAttribute for WWA (#14901)
        n.setAttribute("type", "radio"), n.setAttribute("checked", "checked"), n.setAttribute("name", "t"), 
        t.appendChild(n), // Support: Android <=4.1 only
        // Older WebKit doesn't clone checked state correctly in fragments
        fe.checkClone = t.cloneNode(!0).cloneNode(!0).lastChild.checked, // Support: IE <=11 only
        // Make sure textarea (and checkbox) defaultValue is properly cloned
        t.innerHTML = "<textarea>x</textarea>", fe.noCloneChecked = !!t.cloneNode(!0).lastChild.defaultValue;
    }();
    var Ke = ne.documentElement, Ge = /^key/, Qe = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Je = /^([^.]*)(?:\.(.+)|)/;
    /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
    he.event = {
        global: {},
        add: function(e, t, n, r, o) {
            var i, a, s, u, l, c, p, d, f, h, m, g = Oe.get(e);
            // Don't attach events to noData or text/comment nodes (but allow plain objects)
            if (g) for (// Caller can pass in an object of custom data in lieu of the handler
            n.handler && (i = n, n = i.handler, o = i.selector), // Ensure that invalid selectors throw exceptions at attach time
            // Evaluate against documentElement in case elem is a non-element node (e.g., document)
            o && he.find.matchesSelector(Ke, o), // Make sure that the handler has a unique ID, used to find/remove it later
            n.guid || (n.guid = he.guid++), // Init the element's event structure and main handler, if this is the first
            (u = g.events) || (u = g.events = {}), (a = g.handle) || (a = g.handle = function(t) {
                // Discard the second event of a jQuery.event.trigger() and
                // when an event is called after a page has unloaded
                return void 0 !== he && he.event.triggered !== t.type ? he.event.dispatch.apply(e, arguments) : void 0;
            }), // Handle multiple events separated by a space
            t = (t || "").match(De) || [ "" ], l = t.length; l--; ) s = Je.exec(t[l]) || [], 
            f = m = s[1], h = (s[2] || "").split(".").sort(), // There *must* be a type, no attaching namespace-only handlers
            f && (// If event changes its type, use the special event handlers for the changed type
            p = he.event.special[f] || {}, // If selector defined, determine special event api type, otherwise given type
            f = (o ? p.delegateType : p.bindType) || f, // Update special based on newly reset type
            p = he.event.special[f] || {}, // handleObj is passed to all event handlers
            c = he.extend({
                type: f,
                origType: m,
                data: r,
                handler: n,
                guid: n.guid,
                selector: o,
                needsContext: o && he.expr.match.needsContext.test(o),
                namespace: h.join(".")
            }, i), // Init the event handler queue if we're the first
            (d = u[f]) || (d = u[f] = [], d.delegateCount = 0, // Only use addEventListener if the special events handler returns false
            p.setup && !1 !== p.setup.call(e, r, h, a) || e.addEventListener && e.addEventListener(f, a)), 
            p.add && (p.add.call(e, c), c.handler.guid || (c.handler.guid = n.guid)), // Add to the element's handler list, delegates in front
            o ? d.splice(d.delegateCount++, 0, c) : d.push(c), // Keep track of which events have ever been used, for event optimization
            he.event.global[f] = !0);
        },
        // Detach an event or set of events from an element
        remove: function(e, t, n, r, o) {
            var i, a, s, u, l, c, p, d, f, h, m, g = Oe.hasData(e) && Oe.get(e);
            if (g && (u = g.events)) {
                for (// Once for each type.namespace in types; type may be omitted
                t = (t || "").match(De) || [ "" ], l = t.length; l--; ) // Unbind all events (on this namespace, if provided) for the element
                if (s = Je.exec(t[l]) || [], f = m = s[1], h = (s[2] || "").split(".").sort(), f) {
                    for (p = he.event.special[f] || {}, f = (r ? p.delegateType : p.bindType) || f, 
                    d = u[f] || [], s = s[2] && new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)"), 
                    // Remove matching events
                    a = i = d.length; i--; ) c = d[i], !o && m !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (d.splice(i, 1), 
                    c.selector && d.delegateCount--, p.remove && p.remove.call(e, c));
                    // Remove generic event handler if we removed something and no more handlers exist
                    // (avoids potential for endless recursion during removal of special event handlers)
                    a && !d.length && (p.teardown && !1 !== p.teardown.call(e, h, g.handle) || he.removeEvent(e, f, g.handle), 
                    delete u[f]);
                } else for (f in u) he.event.remove(e, f + t[l], n, r, !0);
                // Remove data and the expando if it's no longer used
                he.isEmptyObject(u) && Oe.remove(e, "handle events");
            }
        },
        dispatch: function(e) {
            // Make a writable jQuery.Event from the native event object
            var t, n, r, o, i, a, s = he.event.fix(e), u = new Array(arguments.length), l = (Oe.get(this, "events") || {})[s.type] || [], c = he.event.special[s.type] || {};
            for (// Use the fix-ed jQuery.Event rather than the (read-only) native event
            u[0] = s, t = 1; t < arguments.length; t++) u[t] = arguments[t];
            // Call the preDispatch hook for the mapped type, and let it bail if desired
            if (s.delegateTarget = this, !c.preDispatch || !1 !== c.preDispatch.call(this, s)) {
                for (// Determine handlers
                a = he.event.handlers.call(this, s, l), // Run delegates first; they may want to stop propagation beneath us
                t = 0; (o = a[t++]) && !s.isPropagationStopped(); ) for (s.currentTarget = o.elem, 
                n = 0; (i = o.handlers[n++]) && !s.isImmediatePropagationStopped(); ) // Triggered event must either 1) have no namespace, or 2) have namespace(s)
                // a subset or equal to those in the bound event (both can have no namespace).
                s.rnamespace && !s.rnamespace.test(i.namespace) || (s.handleObj = i, s.data = i.data, 
                void 0 !== (r = ((he.event.special[i.origType] || {}).handle || i.handler).apply(o.elem, u)) && !1 === (s.result = r) && (s.preventDefault(), 
                s.stopPropagation()));
                // Call the postDispatch hook for the mapped type
                return c.postDispatch && c.postDispatch.call(this, s), s.result;
            }
        },
        handlers: function(e, t) {
            var n, r, o, i, a, s = [], u = t.delegateCount, l = e.target;
            // Find delegate handlers
            if (u && // Support: IE <=9
            // Black-hole SVG <use> instance trees (trac-13180)
            l.nodeType && // Support: Firefox <=42
            // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
            // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
            // Support: IE 11 only
            // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
            !("click" === e.type && e.button >= 1)) for (;l !== this; l = l.parentNode || this) // Don't check non-elements (#13208)
            // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
            if (1 === l.nodeType && ("click" !== e.type || !0 !== l.disabled)) {
                for (i = [], a = {}, n = 0; n < u; n++) r = t[n], // Don't conflict with Object.prototype properties (#13203)
                o = r.selector + " ", void 0 === a[o] && (a[o] = r.needsContext ? he(o, this).index(l) > -1 : he.find(o, this, null, [ l ]).length), 
                a[o] && i.push(r);
                i.length && s.push({
                    elem: l,
                    handlers: i
                });
            }
            // Add the remaining (directly-bound) handlers
            return l = this, u < t.length && s.push({
                elem: l,
                handlers: t.slice(u)
            }), s;
        },
        addProp: function(e, t) {
            Object.defineProperty(he.Event.prototype, e, {
                enumerable: !0,
                configurable: !0,
                get: he.isFunction(t) ? function() {
                    if (this.originalEvent) return t(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[e];
                },
                set: function(t) {
                    Object.defineProperty(this, e, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    });
                }
            });
        },
        fix: function(e) {
            return e[he.expando] ? e : new he.Event(e);
        },
        special: {
            load: {
                // Prevent triggered image.load events from bubbling to window.load
                noBubble: !0
            },
            focus: {
                // Fire native event if possible so blur/focus sequence is correct
                trigger: function() {
                    if (this !== E() && this.focus) return this.focus(), !1;
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    if (this === E() && this.blur) return this.blur(), !1;
                },
                delegateType: "focusout"
            },
            click: {
                // For checkbox, fire native event so checked state will be right
                trigger: function() {
                    if ("checkbox" === this.type && this.click && o(this, "input")) return this.click(), 
                    !1;
                },
                // For cross-browser consistency, don't fire native .click() on links
                _default: function(e) {
                    return o(e.target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(e) {
                    // Support: Firefox 20+
                    // Firefox doesn't alert if the returnValue field is not set.
                    void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result);
                }
            }
        }
    }, he.removeEvent = function(e, t, n) {
        // This "if" is needed for plain objects
        e.removeEventListener && e.removeEventListener(t, n);
    }, he.Event = function(e, t) {
        // Allow instantiation without the 'new' keyword
        if (!(this instanceof he.Event)) return new he.Event(e, t);
        // Event object
        e && e.type ? (this.originalEvent = e, this.type = e.type, // Events bubbling up the document may have been marked as prevented
        // by a handler lower down the tree; reflect the correct value.
        this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && // Support: Android <=2.3 only
        !1 === e.returnValue ? C : w, // Create target properties
        // Support: Safari <=6 - 7 only
        // Target should not be a text node (#504, #13143)
        this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target, 
        this.currentTarget = e.currentTarget, this.relatedTarget = e.relatedTarget) : this.type = e, 
        // Put explicitly provided properties onto the event object
        t && he.extend(this, t), // Create a timestamp if incoming event doesn't have one
        this.timeStamp = e && e.timeStamp || he.now(), // Mark it as fixed
        this[he.expando] = !0;
    }, // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
    he.Event.prototype = {
        constructor: he.Event,
        isDefaultPrevented: w,
        isPropagationStopped: w,
        isImmediatePropagationStopped: w,
        isSimulated: !1,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = C, e && !this.isSimulated && e.preventDefault();
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = C, e && !this.isSimulated && e.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var e = this.originalEvent;
            this.isImmediatePropagationStopped = C, e && !this.isSimulated && e.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, // Includes all common event props including KeyEvent and MouseEvent specific props
    he.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(e) {
            var t = e.button;
            // Add which for key events
            // Add which for key events
            // Add which for click: 1 === left; 2 === middle; 3 === right
            return null == e.which && Ge.test(e.type) ? null != e.charCode ? e.charCode : e.keyCode : !e.which && void 0 !== t && Qe.test(e.type) ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : e.which;
        }
    }, he.event.addProp), // Create mouseenter/leave events using mouseover/out and event-time checks
    // so that event delegation works in jQuery.
    // Do the same for pointerenter/pointerleave and pointerover/pointerout
    //
    // Support: Safari 7 only
    // Safari sends mouseenter too often; see:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258
    // for the description of the bug (it existed in older Chrome versions as well).
    he.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(e, t) {
        he.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function(e) {
                var n, r = this, o = e.relatedTarget, i = e.handleObj;
                // For mouseenter/leave call the handler if related is outside the target.
                // NB: No relatedTarget if the mouse left/entered the browser window
                return o && (o === r || he.contains(r, o)) || (e.type = i.origType, n = i.handler.apply(this, arguments), 
                e.type = t), n;
            }
        };
    }), he.fn.extend({
        on: function(e, t, n, r) {
            return _(this, e, t, n, r);
        },
        one: function(e, t, n, r) {
            return _(this, e, t, n, r, 1);
        },
        off: function(e, t, n) {
            var r, o;
            if (e && e.preventDefault && e.handleObj) // ( event )  dispatched jQuery.Event
            return r = e.handleObj, he(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler), 
            this;
            if ("object" == typeof e) {
                // ( types-object [, selector] )
                for (o in e) this.off(o, t, e[o]);
                return this;
            }
            // ( types [, fn] )
            return !1 !== t && "function" != typeof t || (n = t, t = void 0), !1 === n && (n = w), 
            this.each(function() {
                he.event.remove(this, e, n, t);
            });
        }
    });
    var /* eslint-disable max-len */
    // See https://github.com/eslint/eslint/issues/3229
    Ze = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, /* eslint-enable */
    // Support: IE <=10 - 11, Edge 12 - 13
    // In IE/Edge using regex groups here causes severe slowdowns.
    // See https://connect.microsoft.com/IE/feedback/details/1736512/
    et = /<script|<style|<link/i, // checked="checked" or checked
    tt = /checked\s*(?:[^=]|=\s*.checked.)/i, nt = /^true\/(.*)/, rt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    he.extend({
        htmlPrefilter: function(e) {
            return e.replace(Ze, "<$1></$2>");
        },
        clone: function(e, t, n) {
            var r, o, i, a, s = e.cloneNode(!0), u = he.contains(e.ownerDocument, e);
            // Fix IE cloning issues
            if (!(fe.noCloneChecked || 1 !== e.nodeType && 11 !== e.nodeType || he.isXMLDoc(e))) for (// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
            a = y(s), i = y(e), r = 0, o = i.length; r < o; r++) D(i[r], a[r]);
            // Copy the events from the original to the clone
            if (t) if (n) for (i = i || y(e), a = a || y(s), r = 0, o = i.length; r < o; r++) N(i[r], a[r]); else N(e, s);
            // Return the cloned set
            // Preserve script evaluation history
            return a = y(s, "script"), a.length > 0 && b(a, !u && y(e, "script")), s;
        },
        cleanData: function(e) {
            for (var t, n, r, o = he.event.special, i = 0; void 0 !== (n = e[i]); i++) if (Pe(n)) {
                if (t = n[Oe.expando]) {
                    if (t.events) for (r in t.events) o[r] ? he.event.remove(n, r) : he.removeEvent(n, r, t.handle);
                    // Support: Chrome <=35 - 45+
                    // Assign undefined instead of using delete, see Data#remove
                    n[Oe.expando] = void 0;
                }
                n[Fe.expando] && (// Support: Chrome <=35 - 45+
                // Assign undefined instead of using delete, see Data#remove
                n[Fe.expando] = void 0);
            }
        }
    }), he.fn.extend({
        detach: function(e) {
            return R(this, e, !0);
        },
        remove: function(e) {
            return R(this, e);
        },
        text: function(e) {
            return Ae(this, function(e) {
                return void 0 === e ? he.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e);
                });
            }, null, e, arguments.length);
        },
        append: function() {
            return I(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    k(this, e).appendChild(e);
                }
            });
        },
        prepend: function() {
            return I(this, arguments, function(e) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var t = k(this, e);
                    t.insertBefore(e, t.firstChild);
                }
            });
        },
        before: function() {
            return I(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this);
            });
        },
        after: function() {
            return I(this, arguments, function(e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
            });
        },
        empty: function() {
            for (var e, t = 0; null != (e = this[t]); t++) 1 === e.nodeType && (// Prevent memory leaks
            he.cleanData(y(e, !1)), // Remove any remaining nodes
            e.textContent = "");
            return this;
        },
        clone: function(e, t) {
            return e = null != e && e, t = null == t ? e : t, this.map(function() {
                return he.clone(this, e, t);
            });
        },
        html: function(e) {
            return Ae(this, function(e) {
                var t = this[0] || {}, n = 0, r = this.length;
                if (void 0 === e && 1 === t.nodeType) return t.innerHTML;
                // See if we can take a shortcut and just use innerHTML
                if ("string" == typeof e && !et.test(e) && !$e[(ze.exec(e) || [ "", "" ])[1].toLowerCase()]) {
                    e = he.htmlPrefilter(e);
                    try {
                        for (;n < r; n++) t = this[n] || {}, // Remove element nodes and prevent memory leaks
                        1 === t.nodeType && (he.cleanData(y(t, !1)), t.innerHTML = e);
                        t = 0;
                    } catch (e) {}
                }
                t && this.empty().append(e);
            }, null, e, arguments.length);
        },
        replaceWith: function() {
            var e = [];
            // Make the changes, replacing each non-ignored context element with the new content
            return I(this, arguments, function(t) {
                var n = this.parentNode;
                he.inArray(this, e) < 0 && (he.cleanData(y(this)), n && n.replaceChild(t, this));
            }, e);
        }
    }), he.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(e, t) {
        he.fn[e] = function(e) {
            for (var n, r = [], o = he(e), i = o.length - 1, a = 0; a <= i; a++) n = a === i ? this : this.clone(!0), 
            he(o[a])[t](n), // Support: Android <=4.0 only, PhantomJS 1 only
            // .get() because push.apply(_, arraylike) throws on ancient WebKit
            ae.apply(r, n.get());
            return this.pushStack(r);
        };
    });
    var ot = /^margin/, it = new RegExp("^(" + Le + ")(?!px)[a-z%]+$", "i"), at = function(t) {
        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
        // IE throws on elements created in popups
        // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
        var n = t.ownerDocument.defaultView;
        return n && n.opener || (n = e), n.getComputedStyle(t);
    };
    !function() {
        // Executing both pixelPosition & boxSizingReliable tests require only one layout
        // so they're executed at the same time to save the second computation.
        function t() {
            // This is a singleton, we need to execute it only once
            if (s) {
                s.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", 
                s.innerHTML = "", Ke.appendChild(a);
                var t = e.getComputedStyle(s);
                n = "1%" !== t.top, // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
                i = "2px" === t.marginLeft, r = "4px" === t.width, // Support: Android 4.0 - 4.3 only
                // Some styles come back with percentage values, even though they shouldn't
                s.style.marginRight = "50%", o = "4px" === t.marginRight, Ke.removeChild(a), // Nullify the div so it wouldn't be stored in the memory and
                // it will also be a sign that checks already performed
                s = null;
            }
        }
        var n, r, o, i, a = ne.createElement("div"), s = ne.createElement("div");
        // Finish early in limited (non-browser) environments
        s.style && (// Support: IE <=9 - 11 only
        // Style of cloned element affects source element cloned (#8908)
        s.style.backgroundClip = "content-box", s.cloneNode(!0).style.backgroundClip = "", 
        fe.clearCloneStyle = "content-box" === s.style.backgroundClip, a.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", 
        a.appendChild(s), he.extend(fe, {
            pixelPosition: function() {
                return t(), n;
            },
            boxSizingReliable: function() {
                return t(), r;
            },
            pixelMarginRight: function() {
                return t(), o;
            },
            reliableMarginLeft: function() {
                return t(), i;
            }
        }));
    }();
    var // Swappable if display is none or starts with table
    // except "table", "table-cell", or "table-caption"
    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
    st = /^(none|table(?!-c[ea]).+)/, ut = /^--/, lt = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, ct = {
        letterSpacing: "0",
        fontWeight: "400"
    }, pt = [ "Webkit", "Moz", "ms" ], dt = ne.createElement("div").style;
    he.extend({
        // Add in style property hooks for overriding the default
        // behavior of getting and setting a style property
        cssHooks: {
            opacity: {
                get: function(e, t) {
                    if (t) {
                        // We should always get a number back from opacity
                        var n = A(e, "opacity");
                        return "" === n ? "1" : n;
                    }
                }
            }
        },
        // Don't automatically add "px" to these possibly-unitless properties
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        // Add in properties whose names you wish to fix before
        // setting or getting the value
        cssProps: {
            float: "cssFloat"
        },
        // Get and set the style property on a DOM Node
        style: function(e, t, n, r) {
            // Don't set styles on text and comment nodes
            if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                // Make sure that we're working with the right name
                var o, i, a, s = he.camelCase(t), u = ut.test(t), l = e.style;
                // Check if we're setting a value
                if (// Make sure that we're working with the right name. We don't
                // want to query the value if it is a CSS custom property
                // since they are user-defined.
                u || (t = F(s)), // Gets hook for the prefixed version, then unprefixed version
                a = he.cssHooks[t] || he.cssHooks[s], void 0 === n) // If a hook was provided get the non-computed value from there
                // If a hook was provided get the non-computed value from there
                return a && "get" in a && void 0 !== (o = a.get(e, !1, r)) ? o : l[t];
                i = typeof n, // Convert "+=" or "-=" to relative numbers (#7345)
                "string" === i && (o = Ue.exec(n)) && o[1] && (n = m(e, t, o), // Fixes bug #9237
                i = "number"), // Make sure that null and NaN values aren't set (#7116)
                null != n && n === n && (// If a number was passed in, add the unit (except for certain CSS properties)
                "number" === i && (n += o && o[3] || (he.cssNumber[s] ? "" : "px")), // background-* props affect original clone's values
                fe.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (l[t] = "inherit"), 
                // If a hook was provided, use that value, otherwise just set the specified value
                a && "set" in a && void 0 === (n = a.set(e, n, r)) || (u ? l.setProperty(t, n) : l[t] = n));
            }
        },
        css: function(e, t, n, r) {
            var o, i, a, s = he.camelCase(t);
            // Make numeric if forced or a qualifier was provided and val looks numeric
            // Make sure that we're working with the right name. We don't
            // want to modify the value if it is a CSS custom property
            // since they are user-defined.
            // Try prefixed name followed by the unprefixed name
            // If a hook was provided get the computed value from there
            // Otherwise, if a way to get the computed value exists, use that
            // Convert "normal" to computed value
            // Make numeric if forced or a qualifier was provided and val looks numeric
            return ut.test(t) || (t = F(s)), a = he.cssHooks[t] || he.cssHooks[s], a && "get" in a && (o = a.get(e, !0, n)), 
            void 0 === o && (o = A(e, t, r)), "normal" === o && t in ct && (o = ct[t]), "" === n || n ? (i = parseFloat(o), 
            !0 === n || isFinite(i) ? i || 0 : o) : o;
        }
    }), he.each([ "height", "width" ], function(e, t) {
        he.cssHooks[t] = {
            get: function(e, n, r) {
                if (n) // Certain elements can have dimension info if we invisibly show them
                // but it must have a current display style that would benefit
                // Support: Safari 8+
                // Table columns in Safari have non-zero offsetWidth & zero
                // getBoundingClientRect().width unless display is changed.
                // Support: IE <=11 only
                // Running getBoundingClientRect on a disconnected node
                // in IE throws an error.
                return !st.test(he.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? L(e, t, r) : He(e, lt, function() {
                    return L(e, t, r);
                });
            },
            set: function(e, n, r) {
                var o, i = r && at(e), a = r && j(e, t, r, "border-box" === he.css(e, "boxSizing", !1, i), i);
                // Convert to pixels if value adjustment is needed
                return a && (o = Ue.exec(n)) && "px" !== (o[3] || "px") && (e.style[t] = n, n = he.css(e, t)), 
                M(e, n, a);
            }
        };
    }), he.cssHooks.marginLeft = P(fe.reliableMarginLeft, function(e, t) {
        if (t) return (parseFloat(A(e, "marginLeft")) || e.getBoundingClientRect().left - He(e, {
            marginLeft: 0
        }, function() {
            return e.getBoundingClientRect().left;
        })) + "px";
    }), // These hooks are used by animate to expand properties
    he.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(e, t) {
        he.cssHooks[e + t] = {
            expand: function(n) {
                for (var r = 0, o = {}, // Assumes a single number if not a string
                i = "string" == typeof n ? n.split(" ") : [ n ]; r < 4; r++) o[e + Be[r] + t] = i[r] || i[r - 2] || i[0];
                return o;
            }
        }, ot.test(e) || (he.cssHooks[e + t].set = M);
    }), he.fn.extend({
        css: function(e, t) {
            return Ae(this, function(e, t, n) {
                var r, o, i = {}, a = 0;
                if (Array.isArray(t)) {
                    for (r = at(e), o = t.length; a < o; a++) i[t[a]] = he.css(e, t[a], !1, r);
                    return i;
                }
                return void 0 !== n ? he.style(e, t, n) : he.css(e, t);
            }, e, t, arguments.length > 1);
        }
    }), he.Tween = U, U.prototype = {
        constructor: U,
        init: function(e, t, n, r, o, i) {
            this.elem = e, this.prop = n, this.easing = o || he.easing._default, this.options = t, 
            this.start = this.now = this.cur(), this.end = r, this.unit = i || (he.cssNumber[n] ? "" : "px");
        },
        cur: function() {
            var e = U.propHooks[this.prop];
            return e && e.get ? e.get(this) : U.propHooks._default.get(this);
        },
        run: function(e) {
            var t, n = U.propHooks[this.prop];
            return this.options.duration ? this.pos = t = he.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e, 
            this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            n && n.set ? n.set(this) : U.propHooks._default.set(this), this;
        }
    }, U.prototype.init.prototype = U.prototype, U.propHooks = {
        _default: {
            get: function(e) {
                var t;
                // Use a property on the element directly when it is not a DOM element,
                // or when there is no matching style property that exists.
                // Use a property on the element directly when it is not a DOM element,
                // or when there is no matching style property that exists.
                // Passing an empty string as a 3rd parameter to .css will automatically
                // attempt a parseFloat and fallback to a string if the parse fails.
                // Simple values such as "10px" are parsed to Float;
                // complex values such as "rotate(1rad)" are returned as-is.
                return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = he.css(e.elem, e.prop, ""), 
                t && "auto" !== t ? t : 0);
            },
            set: function(e) {
                // Use step hook for back compat.
                // Use cssHook if its there.
                // Use .style if available and use plain properties where available.
                he.fx.step[e.prop] ? he.fx.step[e.prop](e) : 1 !== e.elem.nodeType || null == e.elem.style[he.cssProps[e.prop]] && !he.cssHooks[e.prop] ? e.elem[e.prop] = e.now : he.style(e.elem, e.prop, e.now + e.unit);
            }
        }
    }, // Support: IE <=9 only
    // Panic based approach to setting things on disconnected nodes
    U.propHooks.scrollTop = U.propHooks.scrollLeft = {
        set: function(e) {
            e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        }
    }, he.easing = {
        linear: function(e) {
            return e;
        },
        swing: function(e) {
            return .5 - Math.cos(e * Math.PI) / 2;
        },
        _default: "swing"
    }, he.fx = U.prototype.init, // Back compat <1.8 extension point
    he.fx.step = {};
    var ft, ht, mt = /^(?:toggle|show|hide)$/, gt = /queueHooks$/;
    he.Animation = he.extend(Y, {
        tweeners: {
            "*": [ function(e, t) {
                var n = this.createTween(e, t);
                return m(n.elem, e, Ue.exec(t), n), n;
            } ]
        },
        tweener: function(e, t) {
            he.isFunction(e) ? (t = e, e = [ "*" ]) : e = e.match(De);
            for (var n, r = 0, o = e.length; r < o; r++) n = e[r], Y.tweeners[n] = Y.tweeners[n] || [], 
            Y.tweeners[n].unshift(t);
        },
        prefilters: [ V ],
        prefilter: function(e, t) {
            t ? Y.prefilters.unshift(e) : Y.prefilters.push(e);
        }
    }), he.speed = function(e, t, n) {
        var r = e && "object" == typeof e ? he.extend({}, e) : {
            complete: n || !n && t || he.isFunction(e) && e,
            duration: e,
            easing: n && t || t && !he.isFunction(t) && t
        };
        // Go to the end state if fx are off
        // Normalize opt.queue - true/undefined/null -> "fx"
        // Queueing
        return he.fx.off ? r.duration = 0 : "number" != typeof r.duration && (r.duration in he.fx.speeds ? r.duration = he.fx.speeds[r.duration] : r.duration = he.fx.speeds._default), 
        null != r.queue && !0 !== r.queue || (r.queue = "fx"), r.old = r.complete, r.complete = function() {
            he.isFunction(r.old) && r.old.call(this), r.queue && he.dequeue(this, r.queue);
        }, r;
    }, he.fn.extend({
        fadeTo: function(e, t, n, r) {
            // Show any hidden elements after setting opacity to 0
            return this.filter(qe).css("opacity", 0).show().end().animate({
                opacity: t
            }, e, n, r);
        },
        animate: function(e, t, n, r) {
            var o = he.isEmptyObject(e), i = he.speed(t, n, r), a = function() {
                // Operate on a copy of prop so per-property easing won't be lost
                var t = Y(this, he.extend({}, e), i);
                // Empty animations, or finishing resolves immediately
                (o || Oe.get(this, "finish")) && t.stop(!0);
            };
            return a.finish = a, o || !1 === i.queue ? this.each(a) : this.queue(i.queue, a);
        },
        stop: function(e, t, n) {
            var r = function(e) {
                var t = e.stop;
                delete e.stop, t(n);
            };
            return "string" != typeof e && (n = t, t = e, e = void 0), t && !1 !== e && this.queue(e || "fx", []), 
            this.each(function() {
                var t = !0, o = null != e && e + "queueHooks", i = he.timers, a = Oe.get(this);
                if (o) a[o] && a[o].stop && r(a[o]); else for (o in a) a[o] && a[o].stop && gt.test(o) && r(a[o]);
                for (o = i.length; o--; ) i[o].elem !== this || null != e && i[o].queue !== e || (i[o].anim.stop(n), 
                t = !1, i.splice(o, 1));
                // Start the next in the queue if the last step wasn't forced.
                // Timers currently will call their complete callbacks, which
                // will dequeue but only if they were gotoEnd.
                !t && n || he.dequeue(this, e);
            });
        },
        finish: function(e) {
            return !1 !== e && (e = e || "fx"), this.each(function() {
                var t, n = Oe.get(this), r = n[e + "queue"], o = n[e + "queueHooks"], i = he.timers, a = r ? r.length : 0;
                // Look for any active animations, and finish them
                for (// Enable finishing flag on private data
                n.finish = !0, // Empty the queue first
                he.queue(this, e, []), o && o.stop && o.stop.call(this, !0), t = i.length; t--; ) i[t].elem === this && i[t].queue === e && (i[t].anim.stop(!0), 
                i.splice(t, 1));
                // Look for any animations in the old queue and finish them
                for (t = 0; t < a; t++) r[t] && r[t].finish && r[t].finish.call(this);
                // Turn off finishing flag
                delete n.finish;
            });
        }
    }), he.each([ "toggle", "show", "hide" ], function(e, t) {
        var n = he.fn[t];
        he.fn[t] = function(e, r, o) {
            return null == e || "boolean" == typeof e ? n.apply(this, arguments) : this.animate(H(t, !0), e, r, o);
        };
    }), // Generate shortcuts for custom animations
    he.each({
        slideDown: H("show"),
        slideUp: H("hide"),
        slideToggle: H("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(e, t) {
        he.fn[e] = function(e, n, r) {
            return this.animate(t, e, n, r);
        };
    }), he.timers = [], he.fx.tick = function() {
        var e, t = 0, n = he.timers;
        for (ft = he.now(); t < n.length; t++) // Run the timer and safely remove it when done (allowing for external removal)
        (e = n[t])() || n[t] !== e || n.splice(t--, 1);
        n.length || he.fx.stop(), ft = void 0;
    }, he.fx.timer = function(e) {
        he.timers.push(e), he.fx.start();
    }, he.fx.interval = 13, he.fx.start = function() {
        ht || (ht = !0, B());
    }, he.fx.stop = function() {
        ht = null;
    }, he.fx.speeds = {
        slow: 600,
        fast: 200,
        // Default speed
        _default: 400
    }, // Based off of the plugin by Clint Helfers, with permission.
    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
    he.fn.delay = function(t, n) {
        return t = he.fx ? he.fx.speeds[t] || t : t, n = n || "fx", this.queue(n, function(n, r) {
            var o = e.setTimeout(n, t);
            r.stop = function() {
                e.clearTimeout(o);
            };
        });
    }, function() {
        var e = ne.createElement("input"), t = ne.createElement("select"), n = t.appendChild(ne.createElement("option"));
        e.type = "checkbox", // Support: Android <=4.3 only
        // Default value for a checkbox should be "on"
        fe.checkOn = "" !== e.value, // Support: IE <=11 only
        // Must access selectedIndex to make default options select
        fe.optSelected = n.selected, // Support: IE <=11 only
        // An input loses its value after becoming a radio
        e = ne.createElement("input"), e.value = "t", e.type = "radio", fe.radioValue = "t" === e.value;
    }();
    var vt, yt = he.expr.attrHandle;
    he.fn.extend({
        attr: function(e, t) {
            return Ae(this, he.attr, e, t, arguments.length > 1);
        },
        removeAttr: function(e) {
            return this.each(function() {
                he.removeAttr(this, e);
            });
        }
    }), he.extend({
        attr: function(e, t, n) {
            var r, o, i = e.nodeType;
            // Don't get/set attributes on text, comment and attribute nodes
            if (3 !== i && 8 !== i && 2 !== i) // Fallback to prop when attributes are not supported
            // Fallback to prop when attributes are not supported
            // Attribute hooks are determined by the lowercase version
            // Grab necessary hook if one is defined
            return void 0 === e.getAttribute ? he.prop(e, t, n) : (1 === i && he.isXMLDoc(e) || (o = he.attrHooks[t.toLowerCase()] || (he.expr.match.bool.test(t) ? vt : void 0)), 
            void 0 !== n ? null === n ? void he.removeAttr(e, t) : o && "set" in o && void 0 !== (r = o.set(e, n, t)) ? r : (e.setAttribute(t, n + ""), 
            n) : o && "get" in o && null !== (r = o.get(e, t)) ? r : (r = he.find.attr(e, t), 
            null == r ? void 0 : r));
        },
        attrHooks: {
            type: {
                set: function(e, t) {
                    if (!fe.radioValue && "radio" === t && o(e, "input")) {
                        var n = e.value;
                        return e.setAttribute("type", t), n && (e.value = n), t;
                    }
                }
            }
        },
        removeAttr: function(e, t) {
            var n, r = 0, // Attribute names can contain non-HTML whitespace characters
            // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
            o = t && t.match(De);
            if (o && 1 === e.nodeType) for (;n = o[r++]; ) e.removeAttribute(n);
        }
    }), // Hooks for boolean attributes
    vt = {
        set: function(e, t, n) {
            // Remove boolean attributes when set to false
            return !1 === t ? he.removeAttr(e, n) : e.setAttribute(n, n), n;
        }
    }, he.each(he.expr.match.bool.source.match(/\w+/g), function(e, t) {
        var n = yt[t] || he.find.attr;
        yt[t] = function(e, t, r) {
            var o, i, a = t.toLowerCase();
            // Avoid an infinite loop by temporarily removing this function from the getter
            return r || (i = yt[a], yt[a] = o, o = null != n(e, t, r) ? a : null, yt[a] = i), 
            o;
        };
    });
    var bt = /^(?:input|select|textarea|button)$/i, xt = /^(?:a|area)$/i;
    he.fn.extend({
        prop: function(e, t) {
            return Ae(this, he.prop, e, t, arguments.length > 1);
        },
        removeProp: function(e) {
            return this.each(function() {
                delete this[he.propFix[e] || e];
            });
        }
    }), he.extend({
        prop: function(e, t, n) {
            var r, o, i = e.nodeType;
            // Don't get/set properties on text, comment and attribute nodes
            if (3 !== i && 8 !== i && 2 !== i) // Fix name and attach hooks
            return 1 === i && he.isXMLDoc(e) || (t = he.propFix[t] || t, o = he.propHooks[t]), 
            void 0 !== n ? o && "set" in o && void 0 !== (r = o.set(e, n, t)) ? r : e[t] = n : o && "get" in o && null !== (r = o.get(e, t)) ? r : e[t];
        },
        propHooks: {
            tabIndex: {
                get: function(e) {
                    // Support: IE <=9 - 11 only
                    // elem.tabIndex doesn't always return the
                    // correct value when it hasn't been explicitly set
                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                    // Use proper attribute retrieval(#12072)
                    var t = he.find.attr(e, "tabindex");
                    return t ? parseInt(t, 10) : bt.test(e.nodeName) || xt.test(e.nodeName) && e.href ? 0 : -1;
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }), // Support: IE <=11 only
    // Accessing the selectedIndex property
    // forces the browser to respect setting selected
    // on the option
    // The getter ensures a default option is selected
    // when in an optgroup
    // eslint rule "no-unused-expressions" is disabled for this code
    // since it considers such accessions noop
    fe.optSelected || (he.propHooks.selected = {
        get: function(e) {
            /* eslint no-unused-expressions: "off" */
            var t = e.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex, null;
        },
        set: function(e) {
            /* eslint no-unused-expressions: "off" */
            var t = e.parentNode;
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        }
    }), he.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        he.propFix[this.toLowerCase()] = this;
    }), he.fn.extend({
        addClass: function(e) {
            var t, n, r, o, i, a, s, u = 0;
            if (he.isFunction(e)) return this.each(function(t) {
                he(this).addClass(e.call(this, t, X(this)));
            });
            if ("string" == typeof e && e) for (t = e.match(De) || []; n = this[u++]; ) if (o = X(n), 
            r = 1 === n.nodeType && " " + $(o) + " ") {
                for (a = 0; i = t[a++]; ) r.indexOf(" " + i + " ") < 0 && (r += i + " ");
                // Only assign if different to avoid unneeded rendering.
                s = $(r), o !== s && n.setAttribute("class", s);
            }
            return this;
        },
        removeClass: function(e) {
            var t, n, r, o, i, a, s, u = 0;
            if (he.isFunction(e)) return this.each(function(t) {
                he(this).removeClass(e.call(this, t, X(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            if ("string" == typeof e && e) for (t = e.match(De) || []; n = this[u++]; ) if (o = X(n), 
            // This expression is here for better compressibility (see addClass)
            r = 1 === n.nodeType && " " + $(o) + " ") {
                for (a = 0; i = t[a++]; ) // Remove *all* instances
                for (;r.indexOf(" " + i + " ") > -1; ) r = r.replace(" " + i + " ", " ");
                // Only assign if different to avoid unneeded rendering.
                s = $(r), o !== s && n.setAttribute("class", s);
            }
            return this;
        },
        toggleClass: function(e, t) {
            var n = typeof e;
            return "boolean" == typeof t && "string" === n ? t ? this.addClass(e) : this.removeClass(e) : he.isFunction(e) ? this.each(function(n) {
                he(this).toggleClass(e.call(this, n, X(this), t), t);
            }) : this.each(function() {
                var t, r, o, i;
                if ("string" === n) for (// Toggle individual class names
                r = 0, o = he(this), i = e.match(De) || []; t = i[r++]; ) // Check each className given, space separated list
                o.hasClass(t) ? o.removeClass(t) : o.addClass(t); else void 0 !== e && "boolean" !== n || (t = X(this), 
                t && // Store className if set
                Oe.set(this, "__className__", t), // If the element has a class name or if we're passed `false`,
                // then remove the whole classname (if there was one, the above saved it).
                // Otherwise bring back whatever was previously saved (if anything),
                // falling back to the empty string if nothing was stored.
                this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : Oe.get(this, "__className__") || ""));
            });
        },
        hasClass: function(e) {
            var t, n, r = 0;
            for (t = " " + e + " "; n = this[r++]; ) if (1 === n.nodeType && (" " + $(X(n)) + " ").indexOf(t) > -1) return !0;
            return !1;
        }
    });
    var Ct = /\r/g;
    he.fn.extend({
        val: function(e) {
            var t, n, r, o = this[0];
            {
                if (arguments.length) return r = he.isFunction(e), this.each(function(n) {
                    var o;
                    1 === this.nodeType && (o = r ? e.call(this, n, he(this).val()) : e, // Treat null/undefined as ""; convert numbers to string
                    null == o ? o = "" : "number" == typeof o ? o += "" : Array.isArray(o) && (o = he.map(o, function(e) {
                        return null == e ? "" : e + "";
                    })), // If set returns undefined, fall back to normal setting
                    (t = he.valHooks[this.type] || he.valHooks[this.nodeName.toLowerCase()]) && "set" in t && void 0 !== t.set(this, o, "value") || (this.value = o));
                });
                if (o) // Handle most common string cases
                return (t = he.valHooks[o.type] || he.valHooks[o.nodeName.toLowerCase()]) && "get" in t && void 0 !== (n = t.get(o, "value")) ? n : (n = o.value, 
                "string" == typeof n ? n.replace(Ct, "") : null == n ? "" : n);
            }
        }
    }), he.extend({
        valHooks: {
            option: {
                get: function(e) {
                    var t = he.find.attr(e, "value");
                    // Support: IE <=10 - 11 only
                    // option.text throws exceptions (#14686, #14858)
                    // Strip and collapse whitespace
                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                    return null != t ? t : $(he.text(e));
                }
            },
            select: {
                get: function(e) {
                    var t, n, r, i = e.options, a = e.selectedIndex, s = "select-one" === e.type, u = s ? null : [], l = s ? a + 1 : i.length;
                    // Loop through all the selected options
                    for (r = a < 0 ? l : s ? a : 0; r < l; r++) // Support: IE <=9 only
                    // IE8-9 doesn't update selected after form reset (#2551)
                    if (n = i[r], (n.selected || r === a) && // Don't return options that are disabled or in a disabled optgroup
                    !n.disabled && (!n.parentNode.disabled || !o(n.parentNode, "optgroup"))) {
                        // We don't need an array for one selects
                        if (// Get the specific value for the option
                        t = he(n).val(), s) return t;
                        // Multi-Selects return an array
                        u.push(t);
                    }
                    return u;
                },
                set: function(e, t) {
                    for (var n, r, o = e.options, i = he.makeArray(t), a = o.length; a--; ) r = o[a], 
                    /* eslint-disable no-cond-assign */
                    (r.selected = he.inArray(he.valHooks.option.get(r), i) > -1) && (n = !0);
                    // Force browsers to behave consistently when non-matching value is set
                    return n || (e.selectedIndex = -1), i;
                }
            }
        }
    }), // Radios and checkboxes getter/setter
    he.each([ "radio", "checkbox" ], function() {
        he.valHooks[this] = {
            set: function(e, t) {
                if (Array.isArray(t)) return e.checked = he.inArray(he(e).val(), t) > -1;
            }
        }, fe.checkOn || (he.valHooks[this].get = function(e) {
            return null === e.getAttribute("value") ? "on" : e.value;
        });
    });
    // Return jQuery for attributes-only inclusion
    var wt = /^(?:focusinfocus|focusoutblur)$/;
    he.extend(he.event, {
        trigger: function(t, n, r, o) {
            var i, a, s, u, l, c, p, d = [ r || ne ], f = ce.call(t, "type") ? t.type : t, h = ce.call(t, "namespace") ? t.namespace.split(".") : [];
            // Don't do events on text and comment nodes
            if (a = s = r = r || ne, 3 !== r.nodeType && 8 !== r.nodeType && !wt.test(f + he.event.triggered) && (f.indexOf(".") > -1 && (// Namespaced trigger; create a regexp to match event type in handle()
            h = f.split("."), f = h.shift(), h.sort()), l = f.indexOf(":") < 0 && "on" + f, 
            // Caller can pass in a jQuery.Event object, Object, or just an event type string
            t = t[he.expando] ? t : new he.Event(f, "object" == typeof t && t), // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
            t.isTrigger = o ? 2 : 3, t.namespace = h.join("."), t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + h.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            // Clean up the event in case it is being reused
            t.result = void 0, t.target || (t.target = r), // Clone any incoming data and prepend the event, creating the handler arg list
            n = null == n ? [ t ] : he.makeArray(n, [ t ]), // Allow special events to draw outside the lines
            p = he.event.special[f] || {}, o || !p.trigger || !1 !== p.trigger.apply(r, n))) {
                // Determine event propagation path in advance, per W3C events spec (#9951)
                // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                if (!o && !p.noBubble && !he.isWindow(r)) {
                    for (u = p.delegateType || f, wt.test(u + f) || (a = a.parentNode); a; a = a.parentNode) d.push(a), 
                    s = a;
                    // Only add window if we got to document (e.g., not plain obj or detached DOM)
                    s === (r.ownerDocument || ne) && d.push(s.defaultView || s.parentWindow || e);
                }
                for (// Fire handlers on the event path
                i = 0; (a = d[i++]) && !t.isPropagationStopped(); ) t.type = i > 1 ? u : p.bindType || f, 
                // jQuery handler
                c = (Oe.get(a, "events") || {})[t.type] && Oe.get(a, "handle"), c && c.apply(a, n), 
                (// Native handler
                c = l && a[l]) && c.apply && Pe(a) && (t.result = c.apply(a, n), !1 === t.result && t.preventDefault());
                // If nobody prevented the default action, do it now
                // Call a native DOM method on the target with the same name as the event.
                // Don't do default actions on window, that's where global variables be (#6170)
                // Don't re-trigger an onFOO event when we call its FOO() method
                // Prevent re-triggering of the same event, since we already bubbled it above
                return t.type = f, o || t.isDefaultPrevented() || p._default && !1 !== p._default.apply(d.pop(), n) || !Pe(r) || l && he.isFunction(r[f]) && !he.isWindow(r) && (s = r[l], 
                s && (r[l] = null), he.event.triggered = f, r[f](), he.event.triggered = void 0, 
                s && (r[l] = s)), t.result;
            }
        },
        // Piggyback on a donor event to simulate a different one
        // Used only for `focus(in | out)` events
        simulate: function(e, t, n) {
            var r = he.extend(new he.Event(), n, {
                type: e,
                isSimulated: !0
            });
            he.event.trigger(r, null, t);
        }
    }), he.fn.extend({
        trigger: function(e, t) {
            return this.each(function() {
                he.event.trigger(e, t, this);
            });
        },
        triggerHandler: function(e, t) {
            var n = this[0];
            if (n) return he.event.trigger(e, t, n, !0);
        }
    }), he.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(e, t) {
        // Handle event binding
        he.fn[t] = function(e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t);
        };
    }), he.fn.extend({
        hover: function(e, t) {
            return this.mouseenter(e).mouseleave(t || e);
        }
    }), fe.focusin = "onfocusin" in e, // Support: Firefox <=44
    // Firefox doesn't have focus(in | out) events
    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
    //
    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
    // focus(in | out) events fire after focus & blur events,
    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
    fe.focusin || he.each({
        focus: "focusin",
        blur: "focusout"
    }, function(e, t) {
        // Attach a single capturing handler on the document while someone wants focusin/focusout
        var n = function(e) {
            he.event.simulate(t, e.target, he.event.fix(e));
        };
        he.event.special[t] = {
            setup: function() {
                var r = this.ownerDocument || this, o = Oe.access(r, t);
                o || r.addEventListener(e, n, !0), Oe.access(r, t, (o || 0) + 1);
            },
            teardown: function() {
                var r = this.ownerDocument || this, o = Oe.access(r, t) - 1;
                o ? Oe.access(r, t, o) : (r.removeEventListener(e, n, !0), Oe.remove(r, t));
            }
        };
    });
    var Et = e.location, _t = he.now(), kt = /\?/;
    // Cross-browser xml parsing
    he.parseXML = function(t) {
        var n;
        if (!t || "string" != typeof t) return null;
        // Support: IE 9 - 11 only
        // IE throws on parseFromString with invalid input.
        try {
            n = new e.DOMParser().parseFromString(t, "text/xml");
        } catch (e) {
            n = void 0;
        }
        return n && !n.getElementsByTagName("parsererror").length || he.error("Invalid XML: " + t), 
        n;
    };
    var Tt = /\[\]$/, St = /\r?\n/g, Nt = /^(?:submit|button|image|reset|file)$/i, Dt = /^(?:input|select|textarea|keygen)/i;
    // Serialize an array of form elements or a set of
    // key/values into a query string
    he.param = function(e, t) {
        var n, r = [], o = function(e, t) {
            // If value is a function, invoke it and use its return value
            var n = he.isFunction(t) ? t() : t;
            r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n);
        };
        // If an array was passed in, assume that it is an array of form elements.
        if (Array.isArray(e) || e.jquery && !he.isPlainObject(e)) // Serialize the form elements
        he.each(e, function() {
            o(this.name, this.value);
        }); else // If traditional, encode the "old" way (the way 1.3.2 or older
        // did it), otherwise encode params recursively.
        for (n in e) K(n, e[n], t, o);
        // Return the resulting serialization
        return r.join("&");
    }, he.fn.extend({
        serialize: function() {
            return he.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                // Can add propHook for "elements" to filter or add form elements
                var e = he.prop(this, "elements");
                return e ? he.makeArray(e) : this;
            }).filter(function() {
                var e = this.type;
                // Use .is( ":disabled" ) so that fieldset[disabled] works
                return this.name && !he(this).is(":disabled") && Dt.test(this.nodeName) && !Nt.test(e) && (this.checked || !Ve.test(e));
            }).map(function(e, t) {
                var n = he(this).val();
                return null == n ? null : Array.isArray(n) ? he.map(n, function(e) {
                    return {
                        name: t.name,
                        value: e.replace(St, "\r\n")
                    };
                }) : {
                    name: t.name,
                    value: n.replace(St, "\r\n")
                };
            }).get();
        }
    });
    var It = /%20/g, Rt = /#.*$/, At = /([?&])_=[^&]*/, Pt = /^(.*?):[ \t]*([^\r\n]*)$/gm, // #7653, #8125, #8152: local protocol detection
    Ot = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Ft = /^(?:GET|HEAD)$/, Mt = /^\/\//, /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
    jt = {}, /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
    Lt = {}, // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
    Ut = "*/".concat("*"), // Anchor tag for parsing the document origin
    Bt = ne.createElement("a");
    Bt.href = Et.href, he.extend({
        // Counter for holding the number of active queries
        active: 0,
        // Last-Modified header cache for next request
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Et.href,
            type: "GET",
            isLocal: Ot.test(Et.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/
            accepts: {
                "*": Ut,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            // Data converters
            // Keys separate source (or catchall "*") and destination types with a single space
            converters: {
                // Convert anything to text
                "* text": String,
                // Text to html (true = no transformation)
                "text html": !0,
                // Evaluate text as a json expression
                "text json": JSON.parse,
                // Parse text as xml
                "text xml": he.parseXML
            },
            // For options that shouldn't be deep extended:
            // you can add your own custom options here if
            // and when you create one that shouldn't be
            // deep extended (see ajaxExtend)
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        // Creates a full fledged settings object into target
        // with both ajaxSettings and settings fields.
        // If target is omitted, writes into ajaxSettings.
        ajaxSetup: function(e, t) {
            // Building a settings object
            // Extending ajaxSettings
            return t ? J(J(e, he.ajaxSettings), t) : J(he.ajaxSettings, e);
        },
        ajaxPrefilter: G(jt),
        ajaxTransport: G(Lt),
        // Main method
        ajax: function(t, n) {
            // Callback for when everything is done
            function r(t, n, r, s) {
                var l, d, f, x, C, w = n;
                // Ignore repeat invocations
                c || (c = !0, // Clear timeout if it exists
                u && e.clearTimeout(u), // Dereference transport for early garbage collection
                // (no matter how long the jqXHR object will be used)
                o = void 0, // Cache response headers
                a = s || "", // Set readyState
                E.readyState = t > 0 ? 4 : 0, // Determine if successful
                l = t >= 200 && t < 300 || 304 === t, // Get response data
                r && (x = Z(h, E, r)), // Convert no matter what (that way responseXXX fields are always set)
                x = ee(h, x, E, l), // If successful, handle type chaining
                l ? (// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                h.ifModified && (C = E.getResponseHeader("Last-Modified"), C && (he.lastModified[i] = C), 
                (C = E.getResponseHeader("etag")) && (he.etag[i] = C)), // if no content
                204 === t || "HEAD" === h.type ? w = "nocontent" : 304 === t ? w = "notmodified" : (w = x.state, 
                d = x.data, f = x.error, l = !f)) : (// Extract error from statusText and normalize for non-aborts
                f = w, !t && w || (w = "error", t < 0 && (t = 0))), // Set data for the fake xhr object
                E.status = t, E.statusText = (n || w) + "", // Success/Error
                l ? v.resolveWith(m, [ d, w, E ]) : v.rejectWith(m, [ E, w, f ]), // Status-dependent callbacks
                E.statusCode(b), b = void 0, p && g.trigger(l ? "ajaxSuccess" : "ajaxError", [ E, h, l ? d : f ]), 
                // Complete
                y.fireWith(m, [ E, w ]), p && (g.trigger("ajaxComplete", [ E, h ]), // Handle the global AJAX counter
                --he.active || he.event.trigger("ajaxStop")));
            }
            // If url is an object, simulate pre-1.5 signature
            "object" == typeof t && (n = t, t = void 0), // Force options to be an object
            n = n || {};
            var o, // URL without anti-cache param
            i, // Response headers
            a, s, // timeout handle
            u, // Url cleanup var
            l, // Request state (becomes false upon send and true upon completion)
            c, // To know if global events are to be dispatched
            p, // Loop variable
            d, // uncached part of the url
            f, // Create the final options object
            h = he.ajaxSetup({}, n), // Callbacks context
            m = h.context || h, // Context for global events is callbackContext if it is a DOM node or jQuery collection
            g = h.context && (m.nodeType || m.jquery) ? he(m) : he.event, // Deferreds
            v = he.Deferred(), y = he.Callbacks("once memory"), // Status-dependent callbacks
            b = h.statusCode || {}, // Headers (they are sent all at once)
            x = {}, C = {}, // Default abort message
            w = "canceled", // Fake xhr
            E = {
                readyState: 0,
                // Builds headers hashtable if needed
                getResponseHeader: function(e) {
                    var t;
                    if (c) {
                        if (!s) for (s = {}; t = Pt.exec(a); ) s[t[1].toLowerCase()] = t[2];
                        t = s[e.toLowerCase()];
                    }
                    return null == t ? null : t;
                },
                // Raw string
                getAllResponseHeaders: function() {
                    return c ? a : null;
                },
                // Caches the header
                setRequestHeader: function(e, t) {
                    return null == c && (e = C[e.toLowerCase()] = C[e.toLowerCase()] || e, x[e] = t), 
                    this;
                },
                // Overrides response content-type header
                overrideMimeType: function(e) {
                    return null == c && (h.mimeType = e), this;
                },
                // Status-dependent callbacks
                statusCode: function(e) {
                    var t;
                    if (e) if (c) // Execute the appropriate callbacks
                    E.always(e[E.status]); else // Lazy-add the new callbacks in a way that preserves old ones
                    for (t in e) b[t] = [ b[t], e[t] ];
                    return this;
                },
                // Cancel the request
                abort: function(e) {
                    var t = e || w;
                    return o && o.abort(t), r(0, t), this;
                }
            };
            // A cross-domain request is in order when the origin doesn't match the current origin.
            if (// Attach deferreds
            v.promise(E), // Add protocol if not provided (prefilters might expect it)
            // Handle falsy url in the settings object (#10093: consistency with old signature)
            // We also use the url parameter if available
            h.url = ((t || h.url || Et.href) + "").replace(Mt, Et.protocol + "//"), // Alias method option to type as per ticket #12004
            h.type = n.method || n.type || h.method || h.type, // Extract dataTypes list
            h.dataTypes = (h.dataType || "*").toLowerCase().match(De) || [ "" ], null == h.crossDomain) {
                l = ne.createElement("a");
                // Support: IE <=8 - 11, Edge 12 - 13
                // IE throws exception on accessing the href property if url is malformed,
                // e.g. http://example.com:80x/
                try {
                    l.href = h.url, // Support: IE <=8 - 11 only
                    // Anchor's host property isn't correctly set when s.url is relative
                    l.href = l.href, h.crossDomain = Bt.protocol + "//" + Bt.host != l.protocol + "//" + l.host;
                } catch (e) {
                    // If there is an error parsing the URL, assume it is crossDomain,
                    // it can be rejected by the transport if it is invalid
                    h.crossDomain = !0;
                }
            }
            // If request was aborted inside a prefilter, stop there
            if (// Convert data if not already a string
            h.data && h.processData && "string" != typeof h.data && (h.data = he.param(h.data, h.traditional)), 
            // Apply prefilters
            Q(jt, h, n, E), c) return E;
            // We can fire global events as of now if asked to
            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
            p = he.event && h.global, // Watch for a new set of requests
            p && 0 == he.active++ && he.event.trigger("ajaxStart"), // Uppercase the type
            h.type = h.type.toUpperCase(), // Determine if request has content
            h.hasContent = !Ft.test(h.type), // Save the URL in case we're toying with the If-Modified-Since
            // and/or If-None-Match header later on
            // Remove hash to simplify url manipulation
            i = h.url.replace(Rt, ""), // More options handling for requests with no content
            h.hasContent ? h.data && h.processData && 0 === (h.contentType || "").indexOf("application/x-www-form-urlencoded") && (h.data = h.data.replace(It, "+")) : (// Remember the hash so we can put it back
            f = h.url.slice(i.length), // If data is available, append data to url
            h.data && (i += (kt.test(i) ? "&" : "?") + h.data, // #9682: remove data so that it's not used in an eventual retry
            delete h.data), // Add or update anti-cache param if needed
            !1 === h.cache && (i = i.replace(At, "$1"), f = (kt.test(i) ? "&" : "?") + "_=" + _t++ + f), 
            // Put hash and anti-cache on the URL that will be requested (gh-1732)
            h.url = i + f), // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
            h.ifModified && (he.lastModified[i] && E.setRequestHeader("If-Modified-Since", he.lastModified[i]), 
            he.etag[i] && E.setRequestHeader("If-None-Match", he.etag[i])), // Set the correct header, if data is being sent
            (h.data && h.hasContent && !1 !== h.contentType || n.contentType) && E.setRequestHeader("Content-Type", h.contentType), 
            // Set the Accepts header for the server, depending on the dataType
            E.setRequestHeader("Accept", h.dataTypes[0] && h.accepts[h.dataTypes[0]] ? h.accepts[h.dataTypes[0]] + ("*" !== h.dataTypes[0] ? ", " + Ut + "; q=0.01" : "") : h.accepts["*"]);
            // Check for headers option
            for (d in h.headers) E.setRequestHeader(d, h.headers[d]);
            // Allow custom headers/mimetypes and early abort
            if (h.beforeSend && (!1 === h.beforeSend.call(m, E, h) || c)) // Abort if not done already and return
            return E.abort();
            // If no transport, we auto-abort
            if (// Aborting is no longer a cancellation
            w = "abort", // Install callbacks on deferreds
            y.add(h.complete), E.done(h.success), E.fail(h.error), // Get transport
            o = Q(Lt, h, n, E)) {
                // If request was aborted inside ajaxSend, stop there
                if (E.readyState = 1, // Send global event
                p && g.trigger("ajaxSend", [ E, h ]), c) return E;
                // Timeout
                h.async && h.timeout > 0 && (u = e.setTimeout(function() {
                    E.abort("timeout");
                }, h.timeout));
                try {
                    c = !1, o.send(x, r);
                } catch (e) {
                    // Rethrow post-completion exceptions
                    if (c) throw e;
                    // Propagate others as results
                    r(-1, e);
                }
            } else r(-1, "No Transport");
            return E;
        },
        getJSON: function(e, t, n) {
            return he.get(e, t, n, "json");
        },
        getScript: function(e, t) {
            return he.get(e, void 0, t, "script");
        }
    }), he.each([ "get", "post" ], function(e, t) {
        he[t] = function(e, n, r, o) {
            // The url can be an options object (which then must have .url)
            // Shift arguments if data argument was omitted
            return he.isFunction(n) && (o = o || r, r = n, n = void 0), he.ajax(he.extend({
                url: e,
                type: t,
                dataType: o,
                data: n,
                success: r
            }, he.isPlainObject(e) && e));
        };
    }), he._evalUrl = function(e) {
        return he.ajax({
            url: e,
            // Make this explicit, since user can override this through ajaxSetup (#11264)
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            throws: !0
        });
    }, he.fn.extend({
        wrapAll: function(e) {
            var t;
            // The elements to wrap the target around
            return this[0] && (he.isFunction(e) && (e = e.call(this[0])), t = he(e, this[0].ownerDocument).eq(0).clone(!0), 
            this[0].parentNode && t.insertBefore(this[0]), t.map(function() {
                for (var e = this; e.firstElementChild; ) e = e.firstElementChild;
                return e;
            }).append(this)), this;
        },
        wrapInner: function(e) {
            return he.isFunction(e) ? this.each(function(t) {
                he(this).wrapInner(e.call(this, t));
            }) : this.each(function() {
                var t = he(this), n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e);
            });
        },
        wrap: function(e) {
            var t = he.isFunction(e);
            return this.each(function(n) {
                he(this).wrapAll(t ? e.call(this, n) : e);
            });
        },
        unwrap: function(e) {
            return this.parent(e).not("body").each(function() {
                he(this).replaceWith(this.childNodes);
            }), this;
        }
    }), he.expr.pseudos.hidden = function(e) {
        return !he.expr.pseudos.visible(e);
    }, he.expr.pseudos.visible = function(e) {
        return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length);
    }, he.ajaxSettings.xhr = function() {
        try {
            return new e.XMLHttpRequest();
        } catch (e) {}
    };
    var qt = {
        // File protocol always yields status code 0, assume 200
        0: 200,
        // Support: IE <=9 only
        // #1450: sometimes IE returns 1223 when it should be 204
        1223: 204
    }, Ht = he.ajaxSettings.xhr();
    fe.cors = !!Ht && "withCredentials" in Ht, fe.ajax = Ht = !!Ht, he.ajaxTransport(function(t) {
        var n, r;
        // Cross domain only allowed if supported through XMLHttpRequest
        if (fe.cors || Ht && !t.crossDomain) return {
            send: function(o, i) {
                var a, s = t.xhr();
                // Apply custom fields if provided
                if (s.open(t.type, t.url, t.async, t.username, t.password), t.xhrFields) for (a in t.xhrFields) s[a] = t.xhrFields[a];
                // Override mime type if needed
                t.mimeType && s.overrideMimeType && s.overrideMimeType(t.mimeType), // X-Requested-With header
                // For cross-domain requests, seeing as conditions for a preflight are
                // akin to a jigsaw puzzle, we simply never set it to be sure.
                // (it can always be set on a per-request basis or even using ajaxSetup)
                // For same-domain requests, won't change header if already provided.
                t.crossDomain || o["X-Requested-With"] || (o["X-Requested-With"] = "XMLHttpRequest");
                // Set headers
                for (a in o) s.setRequestHeader(a, o[a]);
                // Callback
                n = function(e) {
                    return function() {
                        n && (n = r = s.onload = s.onerror = s.onabort = s.onreadystatechange = null, "abort" === e ? s.abort() : "error" === e ? // Support: IE <=9 only
                        // On a manual native abort, IE9 throws
                        // errors on any property access that is not readyState
                        "number" != typeof s.status ? i(0, "error") : i(// File: protocol always yields status 0; see #8605, #14207
                        s.status, s.statusText) : i(qt[s.status] || s.status, s.statusText, // Support: IE <=9 only
                        // IE9 has no XHR2 but throws on binary (trac-11426)
                        // For XHR2 non-text, let the caller handle it (gh-2498)
                        "text" !== (s.responseType || "text") || "string" != typeof s.responseText ? {
                            binary: s.response
                        } : {
                            text: s.responseText
                        }, s.getAllResponseHeaders()));
                    };
                }, // Listen to events
                s.onload = n(), r = s.onerror = n("error"), // Support: IE 9 only
                // Use onreadystatechange to replace onabort
                // to handle uncaught aborts
                void 0 !== s.onabort ? s.onabort = r : s.onreadystatechange = function() {
                    // Check readyState before timeout as it changes
                    4 === s.readyState && // Allow onerror to be called first,
                    // but that will not handle a native abort
                    // Also, save errorCallback to a variable
                    // as xhr.onerror cannot be accessed
                    e.setTimeout(function() {
                        n && r();
                    });
                }, // Create the abort callback
                n = n("abort");
                try {
                    // Do send the request (this may raise an exception)
                    s.send(t.hasContent && t.data || null);
                } catch (e) {
                    // #14683: Only rethrow if this hasn't been notified as an error yet
                    if (n) throw e;
                }
            },
            abort: function() {
                n && n();
            }
        };
    }), // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
    he.ajaxPrefilter(function(e) {
        e.crossDomain && (e.contents.script = !1);
    }), // Install script dataType
    he.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(e) {
                return he.globalEval(e), e;
            }
        }
    }), // Handle cache's special case and crossDomain
    he.ajaxPrefilter("script", function(e) {
        void 0 === e.cache && (e.cache = !1), e.crossDomain && (e.type = "GET");
    }), // Bind script tag hack transport
    he.ajaxTransport("script", function(e) {
        // This transport only deals with cross domain requests
        if (e.crossDomain) {
            var t, n;
            return {
                send: function(r, o) {
                    t = he("<script>").prop({
                        charset: e.scriptCharset,
                        src: e.url
                    }).on("load error", n = function(e) {
                        t.remove(), n = null, e && o("error" === e.type ? 404 : 200, e.type);
                    }), // Use native DOM manipulation to avoid our domManip AJAX trickery
                    ne.head.appendChild(t[0]);
                },
                abort: function() {
                    n && n();
                }
            };
        }
    });
    var Wt = [], Vt = /(=)\?(?=&|$)|\?\?/;
    // Default jsonp settings
    he.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var e = Wt.pop() || he.expando + "_" + _t++;
            return this[e] = !0, e;
        }
    }), // Detect, normalize options and install callbacks for jsonp requests
    he.ajaxPrefilter("json jsonp", function(t, n, r) {
        var o, i, a, s = !1 !== t.jsonp && (Vt.test(t.url) ? "url" : "string" == typeof t.data && 0 === (t.contentType || "").indexOf("application/x-www-form-urlencoded") && Vt.test(t.data) && "data");
        // Handle iff the expected data type is "jsonp" or we have a parameter to set
        if (s || "jsonp" === t.dataTypes[0]) // Delegate to script
        // Get callback name, remembering preexisting value associated with it
        // Insert callback into url or form data
        // Use data converter to retrieve json after script execution
        // Force json dataType
        // Install callback
        // Clean-up function (fires after converters)
        return o = t.jsonpCallback = he.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, 
        s ? t[s] = t[s].replace(Vt, "$1" + o) : !1 !== t.jsonp && (t.url += (kt.test(t.url) ? "&" : "?") + t.jsonp + "=" + o), 
        t.converters["script json"] = function() {
            return a || he.error(o + " was not called"), a[0];
        }, t.dataTypes[0] = "json", i = e[o], e[o] = function() {
            a = arguments;
        }, r.always(function() {
            // If previous value didn't exist - remove it
            void 0 === i ? he(e).removeProp(o) : e[o] = i, // Save back as free
            t[o] && (// Make sure that re-using the options doesn't screw things around
            t.jsonpCallback = n.jsonpCallback, // Save the callback name for future use
            Wt.push(o)), // Call if it was a function and we have a response
            a && he.isFunction(i) && i(a[0]), a = i = void 0;
        }), "script";
    }), // Support: Safari 8 only
    // In Safari 8 documents created via document.implementation.createHTMLDocument
    // collapse sibling forms: the second one becomes a child of the first one.
    // Because of that, this security measure has to be disabled in Safari 8.
    // https://bugs.webkit.org/show_bug.cgi?id=137337
    fe.createHTMLDocument = function() {
        var e = ne.implementation.createHTMLDocument("").body;
        return e.innerHTML = "<form></form><form></form>", 2 === e.childNodes.length;
    }(), // Argument "data" should be string of html
    // context (optional): If specified, the fragment will be created in this context,
    // defaults to document
    // keepScripts (optional): If true, will include scripts passed in the html string
    he.parseHTML = function(e, t, n) {
        if ("string" != typeof e) return [];
        "boolean" == typeof t && (n = t, t = !1);
        var r, o, i;
        // Single tag
        // Stop scripts or inline event handlers from being executed immediately
        // by using document.implementation
        // Set the base href for the created document
        // so any parsed elements with URLs
        // are based on the document's URL (gh-2965)
        // Single tag
        return t || (fe.createHTMLDocument ? (t = ne.implementation.createHTMLDocument(""), 
        r = t.createElement("base"), r.href = ne.location.href, t.head.appendChild(r)) : t = ne), 
        o = Ee.exec(e), i = !n && [], o ? [ t.createElement(o[1]) ] : (o = x([ e ], t, i), 
        i && i.length && he(i).remove(), he.merge([], o.childNodes));
    }, /**
 * Load a url into a page
 */
    he.fn.load = function(e, t, n) {
        var r, o, i, a = this, s = e.indexOf(" ");
        // If it's a function
        // We assume that it's the callback
        // If we have elements to modify, make the request
        return s > -1 && (r = $(e.slice(s)), e = e.slice(0, s)), he.isFunction(t) ? (n = t, 
        t = void 0) : t && "object" == typeof t && (o = "POST"), a.length > 0 && he.ajax({
            url: e,
            // If "type" variable is undefined, then "GET" method will be used.
            // Make value of this field explicit since
            // user can override it through ajaxSetup method
            type: o || "GET",
            dataType: "html",
            data: t
        }).done(function(e) {
            // Save response for use in complete callback
            i = arguments, a.html(r ? // If a selector was specified, locate the right elements in a dummy div
            // Exclude scripts to avoid IE 'Permission Denied' errors
            he("<div>").append(he.parseHTML(e)).find(r) : // Otherwise use the full result
            e);
        }).always(n && function(e, t) {
            a.each(function() {
                n.apply(this, i || [ e.responseText, t, e ]);
            });
        }), this;
    }, // Attach a bunch of functions for handling common AJAX events
    he.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(e, t) {
        he.fn[t] = function(e) {
            return this.on(t, e);
        };
    }), he.expr.pseudos.animated = function(e) {
        return he.grep(he.timers, function(t) {
            return e === t.elem;
        }).length;
    }, he.offset = {
        setOffset: function(e, t, n) {
            var r, o, i, a, s, u, l, c = he.css(e, "position"), p = he(e), d = {};
            // Set position first, in-case top/left are set even on static elem
            "static" === c && (e.style.position = "relative"), s = p.offset(), i = he.css(e, "top"), 
            u = he.css(e, "left"), l = ("absolute" === c || "fixed" === c) && (i + u).indexOf("auto") > -1, 
            // Need to be able to calculate position if either
            // top or left is auto and position is either absolute or fixed
            l ? (r = p.position(), a = r.top, o = r.left) : (a = parseFloat(i) || 0, o = parseFloat(u) || 0), 
            he.isFunction(t) && (// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
            t = t.call(e, n, he.extend({}, s))), null != t.top && (d.top = t.top - s.top + a), 
            null != t.left && (d.left = t.left - s.left + o), "using" in t ? t.using.call(e, d) : p.css(d);
        }
    }, he.fn.extend({
        offset: function(e) {
            // Preserve chaining for setter
            if (arguments.length) return void 0 === e ? this : this.each(function(t) {
                he.offset.setOffset(this, e, t);
            });
            var t, n, r, o, i = this[0];
            if (i) // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
            // Support: IE <=11 only
            // Running getBoundingClientRect on a
            // disconnected node in IE throws an error
            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
            // Support: IE <=11 only
            // Running getBoundingClientRect on a
            // disconnected node in IE throws an error
            return i.getClientRects().length ? (r = i.getBoundingClientRect(), t = i.ownerDocument, 
            n = t.documentElement, o = t.defaultView, {
                top: r.top + o.pageYOffset - n.clientTop,
                left: r.left + o.pageXOffset - n.clientLeft
            }) : {
                top: 0,
                left: 0
            };
        },
        position: function() {
            if (this[0]) {
                var e, t, n = this[0], r = {
                    top: 0,
                    left: 0
                };
                // Subtract parent offsets and element margins
                // Fixed elements are offset from window (parentOffset = {top:0, left: 0},
                // because it is its only offset parent
                // Assume getBoundingClientRect is there when computed position is fixed
                // Get *real* offsetParent
                // Get correct offsets
                // Add offsetParent borders
                return "fixed" === he.css(n, "position") ? t = n.getBoundingClientRect() : (e = this.offsetParent(), 
                t = this.offset(), o(e[0], "html") || (r = e.offset()), r = {
                    top: r.top + he.css(e[0], "borderTopWidth", !0),
                    left: r.left + he.css(e[0], "borderLeftWidth", !0)
                }), {
                    top: t.top - r.top - he.css(n, "marginTop", !0),
                    left: t.left - r.left - he.css(n, "marginLeft", !0)
                };
            }
        },
        // This method will return documentElement in the following cases:
        // 1) For the element inside the iframe without offsetParent, this method will return
        //    documentElement of the parent window
        // 2) For the hidden or detached element
        // 3) For body or html element, i.e. in case of the html node - it will return itself
        //
        // but those exceptions were never presented as a real life use-cases
        // and might be considered as more preferable results.
        //
        // This logic, however, is not guaranteed and can change at any point in the future
        offsetParent: function() {
            return this.map(function() {
                for (var e = this.offsetParent; e && "static" === he.css(e, "position"); ) e = e.offsetParent;
                return e || Ke;
            });
        }
    }), // Create scrollLeft and scrollTop methods
    he.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, t) {
        var n = "pageYOffset" === t;
        he.fn[e] = function(r) {
            return Ae(this, function(e, r, o) {
                // Coalesce documents and windows
                var i;
                if (he.isWindow(e) ? i = e : 9 === e.nodeType && (i = e.defaultView), void 0 === o) return i ? i[t] : e[r];
                i ? i.scrollTo(n ? i.pageXOffset : o, n ? o : i.pageYOffset) : e[r] = o;
            }, e, r, arguments.length);
        };
    }), // Support: Safari <=7 - 9.1, Chrome <=37 - 49
    // Add the top/left cssHooks using jQuery.fn.position
    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
    // getComputedStyle returns percent when specified for top/left/bottom/right;
    // rather than make the css module depend on the offset module, just check for it here
    he.each([ "top", "left" ], function(e, t) {
        he.cssHooks[t] = P(fe.pixelPosition, function(e, n) {
            if (n) // If curCSS returns percentage, fallback to offset
            return n = A(e, t), it.test(n) ? he(e).position()[t] + "px" : n;
        });
    }), // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
    he.each({
        Height: "height",
        Width: "width"
    }, function(e, t) {
        he.each({
            padding: "inner" + e,
            content: t,
            "": "outer" + e
        }, function(n, r) {
            // Margin is only for outerHeight, outerWidth
            he.fn[r] = function(o, i) {
                var a = arguments.length && (n || "boolean" != typeof o), s = n || (!0 === o || !0 === i ? "margin" : "border");
                return Ae(this, function(t, n, o) {
                    var i;
                    // Get document width or height
                    // Get width or height on the element, requesting but not forcing parseFloat
                    // Set width or height on the element
                    return he.isWindow(t) ? 0 === r.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (i = t.documentElement, 
                    Math.max(t.body["scroll" + e], i["scroll" + e], t.body["offset" + e], i["offset" + e], i["client" + e])) : void 0 === o ? he.css(t, n, s) : he.style(t, n, o, s);
                }, t, a ? o : void 0, a);
            };
        });
    }), he.fn.extend({
        bind: function(e, t, n) {
            return this.on(e, null, t, n);
        },
        unbind: function(e, t) {
            return this.off(e, null, t);
        },
        delegate: function(e, t, n, r) {
            return this.on(t, e, n, r);
        },
        undelegate: function(e, t, n) {
            // ( namespace ) or ( selector, types [, fn] )
            return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n);
        }
    }), he.holdReady = function(e) {
        e ? he.readyWait++ : he.ready(!0);
    }, he.isArray = Array.isArray, he.parseJSON = JSON.parse, he.nodeName = o, // Register as a named AMD module, since jQuery can be concatenated with other
    // files that may use define, but not via a proper concatenation script that
    // understands anonymous AMD modules. A named AMD is safest and most robust
    // way to register. Lowercase jquery is used because AMD module names are
    // derived from file names, and jQuery is normally delivered in a lowercase
    // file name. Do this after creating the global so that if an AMD module wants
    // to call noConflict to hide this version of jQuery, it will work.
    // Note that for maximum portability, libraries that are not jQuery should
    // declare themselves as anonymous modules, and avoid setting a global if an
    // AMD loader is present. jQuery is a special case. For more information, see
    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return he;
    });
    var // Map over jQuery in case of overwrite
    zt = e.jQuery, // Map over the $ in case of overwrite
    Yt = e.$;
    // Expose jQuery and $ identifiers, even in AMD
    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
    // and CommonJS for browser emulators (#13566)
    return he.noConflict = function(t) {
        return e.$ === he && (e.$ = Yt), t && e.jQuery === he && (e.jQuery = zt), he;
    }, t || (e.jQuery = e.$ = he), he;
}), function(e, t) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = t(e, document) : "function" == typeof define && define.amd ? define([], function() {
        return t(e, document);
    }) : e.plyr = t(e, document);
}("undefined" != typeof window ? window : this, function(e, t) {
    "use strict";
    function n() {
        var e, n, r, o = navigator.userAgent, i = navigator.appName, a = "" + parseFloat(navigator.appVersion), s = parseInt(navigator.appVersion, 10), u = !1, l = !1, c = !1, p = !1;
        return -1 !== navigator.appVersion.indexOf("Windows NT") && -1 !== navigator.appVersion.indexOf("rv:11") ? (u = !0, 
        i = "IE", a = "11") : -1 !== (n = o.indexOf("MSIE")) ? (u = !0, i = "IE", a = o.substring(n + 5)) : -1 !== (n = o.indexOf("Chrome")) ? (c = !0, 
        i = "Chrome", a = o.substring(n + 7)) : -1 !== (n = o.indexOf("Safari")) ? (p = !0, 
        i = "Safari", a = o.substring(n + 7), -1 !== (n = o.indexOf("Version")) && (a = o.substring(n + 8))) : -1 !== (n = o.indexOf("Firefox")) ? (l = !0, 
        i = "Firefox", a = o.substring(n + 8)) : (e = o.lastIndexOf(" ") + 1) < (n = o.lastIndexOf("/")) && (i = o.substring(e, n), 
        a = o.substring(n + 1), i.toLowerCase() === i.toUpperCase() && (i = navigator.appName)), 
        -1 !== (r = a.indexOf(";")) && (a = a.substring(0, r)), -1 !== (r = a.indexOf(" ")) && (a = a.substring(0, r)), 
        s = parseInt("" + a, 10), isNaN(s) && (a = "" + parseFloat(navigator.appVersion), 
        s = parseInt(navigator.appVersion, 10)), {
            name: i,
            version: s,
            isIE: u,
            isFirefox: l,
            isChrome: c,
            isSafari: p,
            isIos: /(iPad|iPhone|iPod)/g.test(navigator.platform),
            isIphone: /(iPhone|iPod)/g.test(navigator.userAgent),
            isTouch: "ontouchstart" in t.documentElement
        };
    }
    function r(e, t) {
        var n = e.media;
        if ("video" === e.type) switch (t) {
          case "video/webm":
            return !(!n.canPlayType || !n.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/no/, ""));

          case "video/mp4":
            return !(!n.canPlayType || !n.canPlayType('video/mp4; codecs="avc1.42E01E, mp4a.40.2"').replace(/no/, ""));

          case "video/ogg":
            return !(!n.canPlayType || !n.canPlayType('video/ogg; codecs="theora"').replace(/no/, ""));
        } else if ("audio" === e.type) switch (t) {
          case "audio/mpeg":
            return !(!n.canPlayType || !n.canPlayType("audio/mpeg;").replace(/no/, ""));

          case "audio/ogg":
            return !(!n.canPlayType || !n.canPlayType('audio/ogg; codecs="vorbis"').replace(/no/, ""));

          case "audio/wav":
            return !(!n.canPlayType || !n.canPlayType('audio/wav; codecs="1"').replace(/no/, ""));
        }
        return !1;
    }
    function o(e) {
        if (!t.querySelectorAll('script[src="' + e + '"]').length) {
            var n = t.createElement("script");
            n.src = e;
            var r = t.getElementsByTagName("script")[0];
            r.parentNode.insertBefore(n, r);
        }
    }
    function i(e, t) {
        return Array.prototype.indexOf && -1 !== e.indexOf(t);
    }
    function a(e, t, n) {
        return e.replace(new RegExp(t.replace(/([.*+?\^=!:${}()|\[\]\/\\])/g, "\\$1"), "g"), n);
    }
    function s(e, t) {
        e.length || (e = [ e ]);
        for (var n = e.length - 1; n >= 0; n--) {
            var r = n > 0 ? t.cloneNode(!0) : t, o = e[n], i = o.parentNode, a = o.nextSibling;
            return r.appendChild(o), a ? i.insertBefore(r, a) : i.appendChild(r), r;
        }
    }
    function u(e) {
        e && e.parentNode.removeChild(e);
    }
    function l(e, t) {
        e.insertBefore(t, e.firstChild);
    }
    function c(e, t) {
        for (var n in t) e.setAttribute(n, O.boolean(t[n]) && t[n] ? "" : t[n]);
    }
    function p(e, n, r) {
        var o = t.createElement(e);
        c(o, r), l(n, o);
    }
    function d(e) {
        return e.replace(".", "");
    }
    function f(e, t, n) {
        if (e) if (e.classList) e.classList[n ? "add" : "remove"](t); else {
            var r = (" " + e.className + " ").replace(/\s+/g, " ").replace(" " + t + " ", "");
            e.className = r + (n ? " " + t : "");
        }
    }
    function h(e, t) {
        return !!e && (e.classList ? e.classList.contains(t) : new RegExp("(\\s|^)" + t + "(\\s|$)").test(e.className));
    }
    function m(e, n) {
        var r = Element.prototype;
        return (r.matches || r.webkitMatchesSelector || r.mozMatchesSelector || r.msMatchesSelector || function(e) {
            return -1 !== [].indexOf.call(t.querySelectorAll(e), this);
        }).call(e, n);
    }
    function g(e, t, n, r, o) {
        y(e, t, function(t) {
            n && n.apply(e, [ t ]), r.apply(e, [ t ]);
        }, o);
    }
    function v(e, t, n, r, o) {
        var i = t.split(" ");
        if (O.boolean(o) || (o = !1), e instanceof NodeList) for (var a = 0; a < e.length; a++) e[a] instanceof Node && v(e[a], arguments[1], arguments[2], arguments[3]); else for (var s = 0; s < i.length; s++) e[r ? "addEventListener" : "removeEventListener"](i[s], n, o);
    }
    function y(e, t, n, r) {
        e && v(e, t, n, !0, r);
    }
    function b(e, t, n, r) {
        if (e && t) {
            O.boolean(n) || (n = !1);
            var o = new CustomEvent(t, {
                bubbles: n,
                detail: r
            });
            e.dispatchEvent(o);
        }
    }
    function x(e, t) {
        if (e) return t = O.boolean(t) ? t : !e.getAttribute("aria-pressed"), e.setAttribute("aria-pressed", t), 
        t;
    }
    function C(e, t) {
        return 0 === e || 0 === t || isNaN(e) || isNaN(t) ? 0 : (e / t * 100).toFixed(2);
    }
    function w() {
        var e = arguments;
        if (e.length) {
            if (1 === e.length) return e[0];
            for (var t = Array.prototype.shift.call(e), n = e.length, r = 0; r < n; r++) {
                var o = e[r];
                for (var i in o) o[i] && o[i].constructor && o[i].constructor === Object ? (t[i] = t[i] || {}, 
                w(t[i], o[i])) : t[i] = o[i];
            }
            return t;
        }
    }
    function E(e) {
        var t = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
        return e.match(t) ? RegExp.$2 : e;
    }
    function _(e) {
        var t = /^.*(vimeo.com\/|video\/)(\d+).*/;
        return e.match(t) ? RegExp.$2 : e;
    }
    function k() {
        var e = {
            supportsFullScreen: !1,
            isFullScreen: function() {
                return !1;
            },
            requestFullScreen: function() {},
            cancelFullScreen: function() {},
            fullScreenEventName: "",
            element: null,
            prefix: ""
        }, n = "webkit o moz ms khtml".split(" ");
        if (O.undefined(t.cancelFullScreen)) for (var r = 0, o = n.length; r < o; r++) {
            if (e.prefix = n[r], !O.undefined(t[e.prefix + "CancelFullScreen"])) {
                e.supportsFullScreen = !0;
                break;
            }
            if (!O.undefined(t.msExitFullscreen) && t.msFullscreenEnabled) {
                e.prefix = "ms", e.supportsFullScreen = !0;
                break;
            }
        } else e.supportsFullScreen = !0;
        return e.supportsFullScreen && (e.fullScreenEventName = "ms" === e.prefix ? "MSFullscreenChange" : e.prefix + "fullscreenchange", 
        e.isFullScreen = function(e) {
            switch (O.undefined(e) && (e = t.body), this.prefix) {
              case "":
                return t.fullscreenElement === e;

              case "moz":
                return t.mozFullScreenElement === e;

              default:
                return t[this.prefix + "FullscreenElement"] === e;
            }
        }, e.requestFullScreen = function(e) {
            return O.undefined(e) && (e = t.body), "" === this.prefix ? e.requestFullScreen() : e[this.prefix + ("ms" === this.prefix ? "RequestFullscreen" : "RequestFullScreen")]();
        }, e.cancelFullScreen = function() {
            return "" === this.prefix ? t.cancelFullScreen() : t[this.prefix + ("ms" === this.prefix ? "ExitFullscreen" : "CancelFullScreen")]();
        }, e.element = function() {
            return "" === this.prefix ? t.fullscreenElement : t[this.prefix + "FullscreenElement"];
        }), e;
    }
    function T(v, T) {
        function D(e, t, n, r) {
            b(e, t, n, w({}, r, {
                plyr: We
            }));
        }
        function M(t, n) {
            T.debug && e.console && (n = Array.prototype.slice.call(n), O.string(T.logPrefix) && T.logPrefix.length && n.unshift(T.logPrefix), 
            console[t].apply(console, n));
        }
        function j() {
            return {
                url: T.iconUrl,
                absolute: 0 === T.iconUrl.indexOf("http") || Ve.browser.isIE
            };
        }
        function L() {
            var e = [], t = j(), n = (t.absolute ? "" : t.url) + "#" + T.iconPrefix;
            return i(T.controls, "play-large") && e.push('<button type="button" data-plyr="play" class="plyr__play-large">', '<svg><use xlink:href="' + n + '-play" /></svg>', '<span class="plyr__sr-only">' + T.i18n.play + "</span>", "</button>"), 
            e.push('<div class="plyr__controls">'), i(T.controls, "restart") && e.push('<button type="button" data-plyr="restart">', '<svg><use xlink:href="' + n + '-restart" /></svg>', '<span class="plyr__sr-only">' + T.i18n.restart + "</span>", "</button>"), 
            i(T.controls, "rewind") && e.push('<button type="button" data-plyr="rewind">', '<svg><use xlink:href="' + n + '-rewind" /></svg>', '<span class="plyr__sr-only">' + T.i18n.rewind + "</span>", "</button>"), 
            i(T.controls, "play") && e.push('<button type="button" data-plyr="play">', '<svg><use xlink:href="' + n + '-play" /></svg>', '<span class="plyr__sr-only">' + T.i18n.play + "</span>", "</button>", '<button type="button" data-plyr="pause">', '<svg><use xlink:href="' + n + '-pause" /></svg>', '<span class="plyr__sr-only">' + T.i18n.pause + "</span>", "</button>"), 
            i(T.controls, "fast-forward") && e.push('<button type="button" data-plyr="fast-forward">', '<svg><use xlink:href="' + n + '-fast-forward" /></svg>', '<span class="plyr__sr-only">' + T.i18n.forward + "</span>", "</button>"), 
            i(T.controls, "progress") && (e.push('<span class="plyr__progress">', '<label for="seek{id}" class="plyr__sr-only">Seek</label>', '<input id="seek{id}" class="plyr__progress--seek" type="range" min="0" max="100" step="0.1" value="0" data-plyr="seek">', '<progress class="plyr__progress--played" max="100" value="0" role="presentation"></progress>', '<progress class="plyr__progress--buffer" max="100" value="0">', "<span>0</span>% " + T.i18n.buffered, "</progress>"), 
            T.tooltips.seek && e.push('<span class="plyr__tooltip">00:00</span>'), e.push("</span>")), 
            i(T.controls, "current-time") && e.push('<span class="plyr__time">', '<span class="plyr__sr-only">' + T.i18n.currentTime + "</span>", '<span class="plyr__time--current">00:00</span>', "</span>"), 
            i(T.controls, "duration") && e.push('<span class="plyr__time">', '<span class="plyr__sr-only">' + T.i18n.duration + "</span>", '<span class="plyr__time--duration">00:00</span>', "</span>"), 
            i(T.controls, "mute") && e.push('<button type="button" data-plyr="mute">', '<svg class="icon--muted"><use xlink:href="' + n + '-muted" /></svg>', '<svg><use xlink:href="' + n + '-volume" /></svg>', '<span class="plyr__sr-only">' + T.i18n.toggleMute + "</span>", "</button>"), 
            i(T.controls, "volume") && e.push('<span class="plyr__volume">', '<label for="volume{id}" class="plyr__sr-only">' + T.i18n.volume + "</label>", '<input id="volume{id}" class="plyr__volume--input" type="range" min="' + T.volumeMin + '" max="' + T.volumeMax + '" value="' + T.volume + '" data-plyr="volume">', '<progress class="plyr__volume--display" max="' + T.volumeMax + '" value="' + T.volumeMin + '" role="presentation"></progress>', "</span>"), 
            i(T.controls, "captions") && e.push('<button type="button" data-plyr="captions">', '<svg class="icon--captions-on"><use xlink:href="' + n + '-captions-on" /></svg>', '<svg><use xlink:href="' + n + '-captions-off" /></svg>', '<span class="plyr__sr-only">' + T.i18n.toggleCaptions + "</span>", "</button>"), 
            i(T.controls, "fullscreen") && e.push('<button type="button" data-plyr="fullscreen">', '<svg class="icon--exit-fullscreen"><use xlink:href="' + n + '-exit-fullscreen" /></svg>', '<svg><use xlink:href="' + n + '-enter-fullscreen" /></svg>', '<span class="plyr__sr-only">' + T.i18n.toggleFullscreen + "</span>", "</button>"), 
            e.push("</div>"), e.join("");
        }
        function U() {
            if (Ve.supported.full && ("audio" !== Ve.type || T.fullscreen.allowAudio) && T.fullscreen.enabled) {
                var e = R.supportsFullScreen;
                e || T.fullscreen.fallback && !Y() ? ($e((e ? "Native" : "Fallback") + " fullscreen enabled"), 
                f(Ve.container, T.classes.fullscreen.enabled, !0)) : $e("Fullscreen not supported and fallback disabled"), 
                Ve.buttons && Ve.buttons.fullscreen && x(Ve.buttons.fullscreen, !1), $();
            }
        }
        function B() {
            if ("video" === Ve.type) {
                z(T.selectors.captions) || Ve.videoContainer.insertAdjacentHTML("afterbegin", '<div class="' + d(T.selectors.captions) + '"></div>'), 
                Ve.usingTextTracks = !1, Ve.media.textTracks && (Ve.usingTextTracks = !0);
                for (var e, t = "", n = Ve.media.childNodes, r = 0; r < n.length; r++) "track" === n[r].nodeName.toLowerCase() && ("captions" !== (e = n[r].kind) && "subtitles" !== e || (t = n[r].getAttribute("src")));
                if (Ve.captionExists = !0, "" === t ? (Ve.captionExists = !1, $e("No caption track found")) : $e("Caption track found; URI: " + t), 
                Ve.captionExists) {
                    for (var o = Ve.media.textTracks, i = 0; i < o.length; i++) o[i].mode = "hidden";
                    if (W(), (Ve.browser.isIE && Ve.browser.version >= 10 || Ve.browser.isFirefox && Ve.browser.version >= 31) && ($e("Detected browser with known TextTrack issues - using manual fallback"), 
                    Ve.usingTextTracks = !1), Ve.usingTextTracks) {
                        $e("TextTracks supported");
                        for (var a = 0; a < o.length; a++) {
                            var s = o[a];
                            "captions" !== s.kind && "subtitles" !== s.kind || y(s, "cuechange", function() {
                                this.activeCues[0] && "text" in this.activeCues[0] ? q(this.activeCues[0].getCueAsHTML()) : q();
                            });
                        }
                    } else if ($e("TextTracks not supported so rendering captions manually"), Ve.currentCaption = "", 
                    Ve.captions = [], "" !== t) {
                        var u = new XMLHttpRequest();
                        u.onreadystatechange = function() {
                            if (4 === u.readyState) if (200 === u.status) {
                                var e, t = [], n = u.responseText, r = "\r\n";
                                -1 === n.indexOf(r + r) && (r = -1 !== n.indexOf("\r\r") ? "\r" : "\n"), t = n.split(r + r);
                                for (var o = 0; o < t.length; o++) {
                                    e = t[o], Ve.captions[o] = [];
                                    var i = e.split(r), a = 0;
                                    -1 === i[a].indexOf(":") && (a = 1), Ve.captions[o] = [ i[a], i[a + 1] ];
                                }
                                Ve.captions.shift(), $e("Successfully loaded the caption file via AJAX");
                            } else Xe(T.logPrefix + "There was a problem loading the caption file via AJAX");
                        }, u.open("get", t, !0), u.send();
                    }
                } else f(Ve.container, T.classes.captions.enabled);
            }
        }
        function q(e) {
            var n = z(T.selectors.captions), r = t.createElement("span");
            n.innerHTML = "", O.undefined(e) && (e = ""), O.string(e) ? r.innerHTML = e.trim() : r.appendChild(e), 
            n.appendChild(r), n.offsetHeight;
        }
        function H(e) {
            function t(e, t) {
                var n = [];
                n = e.split(" --\x3e ");
                for (var o = 0; o < n.length; o++) n[o] = n[o].replace(/(\d+:\d+:\d+\.\d+).*/, "$1");
                return r(n[t]);
            }
            function n(e) {
                return t(e, 1);
            }
            function r(e) {
                if (null === e || void 0 === e) return 0;
                var t = [], n = [];
                return t = e.split(","), n = t[0].split(":"), Math.floor(60 * n[0] * 60) + Math.floor(60 * n[1]) + Math.floor(n[2]);
            }
            if (!Ve.usingTextTracks && "video" === Ve.type && Ve.supported.full && (Ve.subcount = 0, 
            e = O.number(e) ? e : Ve.media.currentTime, Ve.captions[Ve.subcount])) {
                for (;n(Ve.captions[Ve.subcount][0]) < e.toFixed(1); ) if (++Ve.subcount > Ve.captions.length - 1) {
                    Ve.subcount = Ve.captions.length - 1;
                    break;
                }
                Ve.media.currentTime.toFixed(1) >= function(e) {
                    return t(e, 0);
                }(Ve.captions[Ve.subcount][0]) && Ve.media.currentTime.toFixed(1) <= n(Ve.captions[Ve.subcount][0]) ? (Ve.currentCaption = Ve.captions[Ve.subcount][1], 
                q(Ve.currentCaption)) : q();
            }
        }
        function W() {
            if (Ve.buttons.captions) {
                f(Ve.container, T.classes.captions.enabled, !0);
                var e = Ve.storage.captionsEnabled;
                O.boolean(e) || (e = T.captions.defaultActive), e && (f(Ve.container, T.classes.captions.active, !0), 
                x(Ve.buttons.captions, !0));
            }
        }
        function V(e) {
            return Ve.container.querySelectorAll(e);
        }
        function z(e) {
            return V(e)[0];
        }
        function Y() {
            try {
                return e.self !== e.top;
            } catch (e) {
                return !0;
            }
        }
        function $() {
            function e(e) {
                9 === e.which && Ve.isFullscreen && (e.target !== r || e.shiftKey ? e.target === n && e.shiftKey && (e.preventDefault(), 
                r.focus()) : (e.preventDefault(), n.focus()));
            }
            var t = V("input:not([disabled]), button:not([disabled])"), n = t[0], r = t[t.length - 1];
            y(Ve.container, "keydown", e);
        }
        function X(e, t) {
            if (O.string(t)) p(e, Ve.media, {
                src: t
            }); else if (t.constructor === Array) for (var n = t.length - 1; n >= 0; n--) p(e, Ve.media, t[n]);
        }
        function K() {
            if (T.loadSprite) {
                var e = j();
                e.absolute ? ($e("AJAX loading absolute SVG sprite" + (Ve.browser.isIE ? " (due to IE)" : "")), 
                S(e.url, "sprite-plyr")) : $e("Sprite will be used as external resource directly");
            }
            var n = T.html;
            $e("Injecting custom controls"), n || (n = L()), n = a(n, "{seektime}", T.seekTime), 
            n = a(n, "{id}", Math.floor(1e4 * Math.random()));
            var r;
            if (O.string(T.selectors.controls.container) && (r = t.querySelector(T.selectors.controls.container)), 
            O.htmlElement(r) || (r = Ve.container), r.insertAdjacentHTML("beforeend", n), T.tooltips.controls) for (var o = V([ T.selectors.controls.wrapper, " ", T.selectors.labels, " .", T.classes.hidden ].join("")), i = o.length - 1; i >= 0; i--) {
                var s = o[i];
                f(s, T.classes.hidden, !1), f(s, T.classes.tooltip, !0);
            }
        }
        function G() {
            try {
                return Ve.controls = z(T.selectors.controls.wrapper), Ve.buttons = {}, Ve.buttons.seek = z(T.selectors.buttons.seek), 
                Ve.buttons.play = V(T.selectors.buttons.play), Ve.buttons.pause = z(T.selectors.buttons.pause), 
                Ve.buttons.restart = z(T.selectors.buttons.restart), Ve.buttons.rewind = z(T.selectors.buttons.rewind), 
                Ve.buttons.forward = z(T.selectors.buttons.forward), Ve.buttons.fullscreen = z(T.selectors.buttons.fullscreen), 
                Ve.buttons.mute = z(T.selectors.buttons.mute), Ve.buttons.captions = z(T.selectors.buttons.captions), 
                Ve.progress = {}, Ve.progress.container = z(T.selectors.progress.container), Ve.progress.buffer = {}, 
                Ve.progress.buffer.bar = z(T.selectors.progress.buffer), Ve.progress.buffer.text = Ve.progress.buffer.bar && Ve.progress.buffer.bar.getElementsByTagName("span")[0], 
                Ve.progress.played = z(T.selectors.progress.played), Ve.progress.tooltip = Ve.progress.container && Ve.progress.container.querySelector("." + T.classes.tooltip), 
                Ve.volume = {}, Ve.volume.input = z(T.selectors.volume.input), Ve.volume.display = z(T.selectors.volume.display), 
                Ve.duration = z(T.selectors.duration), Ve.currentTime = z(T.selectors.currentTime), 
                Ve.seekTime = V(T.selectors.seekTime), !0;
            } catch (e) {
                return Xe("It looks like there is a problem with your controls HTML"), J(!0), !1;
            }
        }
        function Q() {
            f(Ve.container, T.selectors.container.replace(".", ""), Ve.supported.full);
        }
        function J(e) {
            e && i(T.types.html5, Ve.type) ? Ve.media.setAttribute("controls", "") : Ve.media.removeAttribute("controls");
        }
        function Z(e) {
            var t = T.i18n.play;
            if (O.string(T.title) && T.title.length && (t += ", " + T.title, Ve.container.setAttribute("aria-label", T.title)), 
            Ve.supported.full && Ve.buttons.play) for (var n = Ve.buttons.play.length - 1; n >= 0; n--) Ve.buttons.play[n].setAttribute("aria-label", t);
            O.htmlElement(e) && e.setAttribute("title", T.i18n.frameTitle.replace("{title}", T.title));
        }
        function ee() {
            var t = null;
            Ve.storage = {}, F.supported && T.storage.enabled && (e.localStorage.removeItem("plyr-volume"), 
            (t = e.localStorage.getItem(T.storage.key)) && (/^\d+(\.\d+)?$/.test(t) ? te({
                volume: parseFloat(t)
            }) : Ve.storage = JSON.parse(t)));
        }
        function te(t) {
            F.supported && T.storage.enabled && (w(Ve.storage, t), e.localStorage.setItem(T.storage.key, JSON.stringify(Ve.storage)));
        }
        function ne() {
            if (!Ve.media) return void Xe("No media element found!");
            if (Ve.supported.full && (f(Ve.container, T.classes.type.replace("{0}", Ve.type), !0), 
            i(T.types.embed, Ve.type) && f(Ve.container, T.classes.type.replace("{0}", "video"), !0), 
            f(Ve.container, T.classes.stopped, T.autoplay), f(Ve.container, T.classes.isIos, Ve.browser.isIos), 
            f(Ve.container, T.classes.isTouch, Ve.browser.isTouch), "video" === Ve.type)) {
                var e = t.createElement("div");
                e.setAttribute("class", T.classes.videoWrapper), s(Ve.media, e), Ve.videoContainer = e;
            }
            i(T.types.embed, Ve.type) && re();
        }
        function re() {
            var n, r = t.createElement("div"), i = Ve.type + "-" + Math.floor(1e4 * Math.random());
            switch (Ve.type) {
              case "youtube":
                n = E(Ve.embedId);
                break;

              case "vimeo":
                n = _(Ve.embedId);
                break;

              default:
                n = Ve.embedId;
            }
            for (var a = V('[id^="' + Ve.type + '-"]'), s = a.length - 1; s >= 0; s--) u(a[s]);
            if (f(Ve.media, T.classes.videoWrapper, !0), f(Ve.media, T.classes.embedWrapper, !0), 
            "youtube" === Ve.type) Ve.media.appendChild(r), r.setAttribute("id", i), O.object(e.YT) ? ie(n, r) : (o(T.urls.youtube.api), 
            e.onYouTubeReadyCallbacks = e.onYouTubeReadyCallbacks || [], e.onYouTubeReadyCallbacks.push(function() {
                ie(n, r);
            }), e.onYouTubeIframeAPIReady = function() {
                e.onYouTubeReadyCallbacks.forEach(function(e) {
                    e();
                });
            }); else if ("vimeo" === Ve.type) if (Ve.supported.full ? Ve.media.appendChild(r) : r = Ve.media, 
            r.setAttribute("id", i), O.object(e.Vimeo)) ae(n, r); else {
                o(T.urls.vimeo.api);
                var l = e.setInterval(function() {
                    O.object(e.Vimeo) && (e.clearInterval(l), ae(n, r));
                }, 50);
            } else if ("soundcloud" === Ve.type) {
                var p = t.createElement("iframe");
                p.loaded = !1, y(p, "load", function() {
                    p.loaded = !0;
                }), c(p, {
                    src: "https://w.soundcloud.com/player/?url=https://api.soundcloud.com/tracks/" + n,
                    id: i
                }), r.appendChild(p), Ve.media.appendChild(r), e.SC || o(T.urls.soundcloud.api);
                var d = e.setInterval(function() {
                    e.SC && p.loaded && (e.clearInterval(d), se.call(p));
                }, 50);
            }
        }
        function oe() {
            Ve.supported.full && (qe(), He()), Z(z("iframe"));
        }
        function ie(t, n) {
            Ve.embed = new e.YT.Player(n.id, {
                videoId: t,
                playerVars: {
                    autoplay: T.autoplay ? 1 : 0,
                    controls: Ve.supported.full ? 0 : 1,
                    rel: 0,
                    showinfo: 0,
                    iv_load_policy: 3,
                    cc_load_policy: T.captions.defaultActive ? 1 : 0,
                    cc_lang_pref: "en",
                    wmode: "transparent",
                    modestbranding: 1,
                    disablekb: 1,
                    origin: "*"
                },
                events: {
                    onError: function(e) {
                        D(Ve.container, "error", !0, {
                            code: e.data,
                            embed: e.target
                        });
                    },
                    onReady: function(t) {
                        var n = t.target;
                        Ve.media.play = function() {
                            n.playVideo(), Ve.media.paused = !1;
                        }, Ve.media.pause = function() {
                            n.pauseVideo(), Ve.media.paused = !0;
                        }, Ve.media.stop = function() {
                            n.stopVideo(), Ve.media.paused = !0;
                        }, Ve.media.duration = n.getDuration(), Ve.media.paused = !0, Ve.media.currentTime = 0, 
                        Ve.media.muted = n.isMuted(), T.title = n.getVideoData().title, Ve.supported.full && Ve.media.querySelector("iframe").setAttribute("tabindex", "-1"), 
                        oe(), D(Ve.media, "timeupdate"), D(Ve.media, "durationchange"), e.clearInterval(ze.buffering), 
                        ze.buffering = e.setInterval(function() {
                            Ve.media.buffered = n.getVideoLoadedFraction(), (null === Ve.media.lastBuffered || Ve.media.lastBuffered < Ve.media.buffered) && D(Ve.media, "progress"), 
                            Ve.media.lastBuffered = Ve.media.buffered, 1 === Ve.media.buffered && (e.clearInterval(ze.buffering), 
                            D(Ve.media, "canplaythrough"));
                        }, 200);
                    },
                    onStateChange: function(t) {
                        var n = t.target;
                        switch (e.clearInterval(ze.playing), t.data) {
                          case 0:
                            Ve.media.paused = !0, D(Ve.media, "ended");
                            break;

                          case 1:
                            Ve.media.paused = !1, Ve.media.seeking && D(Ve.media, "seeked"), Ve.media.seeking = !1, 
                            D(Ve.media, "play"), D(Ve.media, "playing"), ze.playing = e.setInterval(function() {
                                Ve.media.currentTime = n.getCurrentTime(), D(Ve.media, "timeupdate");
                            }, 100), Ve.media.duration !== n.getDuration() && (Ve.media.duration = n.getDuration(), 
                            D(Ve.media, "durationchange"));
                            break;

                          case 2:
                            Ve.media.paused = !0, D(Ve.media, "pause");
                        }
                        D(Ve.container, "statechange", !1, {
                            code: t.data
                        });
                    }
                }
            });
        }
        function ae(t, n) {
            Ve.embed = new e.Vimeo.Player(n, {
                id: parseInt(t),
                loop: T.loop,
                autoplay: T.autoplay,
                byline: !1,
                portrait: !1,
                title: !1
            }), Ve.media.play = function() {
                Ve.embed.play(), Ve.media.paused = !1;
            }, Ve.media.pause = function() {
                Ve.embed.pause(), Ve.media.paused = !0;
            }, Ve.media.stop = function() {
                Ve.embed.stop(), Ve.media.paused = !0;
            }, Ve.media.paused = !0, Ve.media.currentTime = 0, oe(), Ve.embed.getCurrentTime().then(function(e) {
                Ve.media.currentTime = e, D(Ve.media, "timeupdate");
            }), Ve.embed.getDuration().then(function(e) {
                Ve.media.duration = e, D(Ve.media, "durationchange");
            }), Ve.embed.on("loaded", function() {
                O.htmlElement(Ve.embed.element) && Ve.supported.full && Ve.embed.element.setAttribute("tabindex", "-1");
            }), Ve.embed.on("play", function() {
                Ve.media.paused = !1, D(Ve.media, "play"), D(Ve.media, "playing");
            }), Ve.embed.on("pause", function() {
                Ve.media.paused = !0, D(Ve.media, "pause");
            }), Ve.embed.on("timeupdate", function(e) {
                Ve.media.seeking = !1, Ve.media.currentTime = e.seconds, D(Ve.media, "timeupdate");
            }), Ve.embed.on("progress", function(e) {
                Ve.media.buffered = e.percent, D(Ve.media, "progress"), 1 === parseInt(e.percent) && D(Ve.media, "canplaythrough");
            }), Ve.embed.on("seeked", function() {
                Ve.media.seeking = !1, D(Ve.media, "seeked"), D(Ve.media, "play");
            }), Ve.embed.on("ended", function() {
                Ve.media.paused = !0, D(Ve.media, "ended");
            });
        }
        function se() {
            Ve.embed = e.SC.Widget(this), Ve.embed.bind(e.SC.Widget.Events.READY, function() {
                Ve.media.play = function() {
                    Ve.embed.play(), Ve.media.paused = !1;
                }, Ve.media.pause = function() {
                    Ve.embed.pause(), Ve.media.paused = !0;
                }, Ve.media.stop = function() {
                    Ve.embed.seekTo(0), Ve.embed.pause(), Ve.media.paused = !0;
                }, Ve.media.paused = !0, Ve.media.currentTime = 0, Ve.embed.getDuration(function(e) {
                    Ve.media.duration = e / 1e3, oe();
                }), Ve.embed.getPosition(function(e) {
                    Ve.media.currentTime = e, D(Ve.media, "timeupdate");
                }), Ve.embed.bind(e.SC.Widget.Events.PLAY, function() {
                    Ve.media.paused = !1, D(Ve.media, "play"), D(Ve.media, "playing");
                }), Ve.embed.bind(e.SC.Widget.Events.PAUSE, function() {
                    Ve.media.paused = !0, D(Ve.media, "pause");
                }), Ve.embed.bind(e.SC.Widget.Events.PLAY_PROGRESS, function(e) {
                    Ve.media.seeking = !1, Ve.media.currentTime = e.currentPosition / 1e3, D(Ve.media, "timeupdate");
                }), Ve.embed.bind(e.SC.Widget.Events.LOAD_PROGRESS, function(e) {
                    Ve.media.buffered = e.loadProgress, D(Ve.media, "progress"), 1 === parseInt(e.loadProgress) && D(Ve.media, "canplaythrough");
                }), Ve.embed.bind(e.SC.Widget.Events.FINISH, function() {
                    Ve.media.paused = !0, D(Ve.media, "ended");
                });
            });
        }
        function ue() {
            "play" in Ve.media && Ve.media.play();
        }
        function le() {
            "pause" in Ve.media && Ve.media.pause();
        }
        function ce(e) {
            return O.boolean(e) || (e = Ve.media.paused), e ? ue() : le(), e;
        }
        function pe(e) {
            O.number(e) || (e = T.seekTime), fe(Ve.media.currentTime - e);
        }
        function de(e) {
            O.number(e) || (e = T.seekTime), fe(Ve.media.currentTime + e);
        }
        function fe(e) {
            var t = 0, n = Ve.media.paused, r = he();
            O.number(e) ? t = e : O.object(e) && i([ "input", "change" ], e.type) && (t = e.target.value / e.target.max * r), 
            t < 0 ? t = 0 : t > r && (t = r), Re(t);
            try {
                Ve.media.currentTime = t.toFixed(4);
            } catch (e) {}
            if (i(T.types.embed, Ve.type)) {
                switch (Ve.type) {
                  case "youtube":
                    Ve.embed.seekTo(t);
                    break;

                  case "vimeo":
                    Ve.embed.setCurrentTime(t.toFixed(0));
                    break;

                  case "soundcloud":
                    Ve.embed.seekTo(1e3 * t);
                }
                n && le(), D(Ve.media, "timeupdate"), Ve.media.seeking = !0, D(Ve.media, "seeking");
            }
            $e("Seeking to " + Ve.media.currentTime + " seconds"), H(t);
        }
        function he() {
            var e = parseInt(T.duration), t = 0;
            return null === Ve.media.duration || isNaN(Ve.media.duration) || (t = Ve.media.duration), 
            isNaN(e) ? t : e;
        }
        function me() {
            f(Ve.container, T.classes.playing, !Ve.media.paused), f(Ve.container, T.classes.stopped, Ve.media.paused), 
            Pe(Ve.media.paused);
        }
        function ge() {
            A = {
                x: e.pageXOffset || 0,
                y: e.pageYOffset || 0
            };
        }
        function ve() {
            e.scrollTo(A.x, A.y);
        }
        function ye(e) {
            var n = R.supportsFullScreen;
            if (n) {
                if (!e || e.type !== R.fullScreenEventName) return R.isFullScreen(Ve.container) ? R.cancelFullScreen() : (ge(), 
                R.requestFullScreen(Ve.container)), void (Ve.isFullscreen = R.isFullScreen(Ve.container));
                Ve.isFullscreen = R.isFullScreen(Ve.container);
            } else Ve.isFullscreen = !Ve.isFullscreen, t.body.style.overflow = Ve.isFullscreen ? "hidden" : "";
            f(Ve.container, T.classes.fullscreen.active, Ve.isFullscreen), $(Ve.isFullscreen), 
            Ve.buttons && Ve.buttons.fullscreen && x(Ve.buttons.fullscreen, Ve.isFullscreen), 
            D(Ve.container, Ve.isFullscreen ? "enterfullscreen" : "exitfullscreen", !0), !Ve.isFullscreen && n && ve();
        }
        function be(e) {
            if (O.boolean(e) || (e = !Ve.media.muted), x(Ve.buttons.mute, e), Ve.media.muted = e, 
            0 === Ve.media.volume && xe(T.volume), i(T.types.embed, Ve.type)) {
                switch (Ve.type) {
                  case "youtube":
                    Ve.embed[Ve.media.muted ? "mute" : "unMute"]();
                    break;

                  case "vimeo":
                  case "soundcloud":
                    Ve.embed.setVolume(Ve.media.muted ? 0 : parseFloat(T.volume / T.volumeMax));
                }
                D(Ve.media, "volumechange");
            }
        }
        function xe(e) {
            var t = T.volumeMax, n = T.volumeMin;
            if (O.undefined(e) && (e = Ve.storage.volume), (null === e || isNaN(e)) && (e = T.volume), 
            e > t && (e = t), e < n && (e = n), Ve.media.volume = parseFloat(e / t), Ve.volume.display && (Ve.volume.display.value = e), 
            i(T.types.embed, Ve.type)) {
                switch (Ve.type) {
                  case "youtube":
                    Ve.embed.setVolume(100 * Ve.media.volume);
                    break;

                  case "vimeo":
                  case "soundcloud":
                    Ve.embed.setVolume(Ve.media.volume);
                }
                D(Ve.media, "volumechange");
            }
            0 === e ? Ve.media.muted = !0 : Ve.media.muted && e > 0 && be();
        }
        function Ce(e) {
            var t = Ve.media.muted ? 0 : Ve.media.volume * T.volumeMax;
            O.number(e) || (e = T.volumeStep), xe(t + e);
        }
        function we(e) {
            var t = Ve.media.muted ? 0 : Ve.media.volume * T.volumeMax;
            O.number(e) || (e = T.volumeStep), xe(t - e);
        }
        function Ee() {
            var e = Ve.media.muted ? 0 : Ve.media.volume * T.volumeMax;
            Ve.supported.full && (Ve.volume.input && (Ve.volume.input.value = e), Ve.volume.display && (Ve.volume.display.value = e)), 
            te({
                volume: e
            }), f(Ve.container, T.classes.muted, 0 === e), Ve.supported.full && Ve.buttons.mute && x(Ve.buttons.mute, 0 === e);
        }
        function _e(e) {
            Ve.supported.full && Ve.buttons.captions && (O.boolean(e) || (e = -1 === Ve.container.className.indexOf(T.classes.captions.active)), 
            Ve.captionsEnabled = e, x(Ve.buttons.captions, Ve.captionsEnabled), f(Ve.container, T.classes.captions.active, Ve.captionsEnabled), 
            D(Ve.container, Ve.captionsEnabled ? "captionsenabled" : "captionsdisabled", !0), 
            te({
                captionsEnabled: Ve.captionsEnabled
            }));
        }
        function ke(e) {
            var t = "waiting" === e.type;
            clearTimeout(ze.loading), ze.loading = setTimeout(function() {
                f(Ve.container, T.classes.loading, t), Pe(t);
            }, t ? 250 : 0);
        }
        function Te(e) {
            if (Ve.supported.full) {
                var t = Ve.progress.played, n = 0, r = he();
                if (e) switch (e.type) {
                  case "timeupdate":
                  case "seeking":
                    if (Ve.controls.pressed) return;
                    n = C(Ve.media.currentTime, r), "timeupdate" === e.type && Ve.buttons.seek && (Ve.buttons.seek.value = n);
                    break;

                  case "playing":
                  case "progress":
                    t = Ve.progress.buffer, n = function() {
                        var e = Ve.media.buffered;
                        return e && e.length ? C(e.end(0), r) : O.number(e) ? 100 * e : 0;
                    }();
                }
                Se(t, n);
            }
        }
        function Se(e, t) {
            if (Ve.supported.full) {
                if (O.undefined(t) && (t = 0), O.undefined(e)) {
                    if (!Ve.progress || !Ve.progress.buffer) return;
                    e = Ve.progress.buffer;
                }
                O.htmlElement(e) ? e.value = t : e && (e.bar && (e.bar.value = t), e.text && (e.text.innerHTML = t));
            }
        }
        function Ne(e, t) {
            if (t) {
                isNaN(e) && (e = 0), Ve.secs = parseInt(e % 60), Ve.mins = parseInt(e / 60 % 60), 
                Ve.hours = parseInt(e / 60 / 60 % 60);
                var n = parseInt(he() / 60 / 60 % 60) > 0;
                Ve.secs = ("0" + Ve.secs).slice(-2), Ve.mins = ("0" + Ve.mins).slice(-2), t.innerHTML = (n ? Ve.hours + ":" : "") + Ve.mins + ":" + Ve.secs;
            }
        }
        function De() {
            if (Ve.supported.full) {
                var e = he() || 0;
                !Ve.duration && T.displayDuration && Ve.media.paused && Ne(e, Ve.currentTime), Ve.duration && Ne(e, Ve.duration), 
                Ae();
            }
        }
        function Ie(e) {
            Ne(Ve.media.currentTime, Ve.currentTime), e && "timeupdate" === e.type && Ve.media.seeking || Te(e);
        }
        function Re(e) {
            O.number(e) || (e = 0);
            var t = he(), n = C(e, t);
            Ve.progress && Ve.progress.played && (Ve.progress.played.value = n), Ve.buttons && Ve.buttons.seek && (Ve.buttons.seek.value = n);
        }
        function Ae(e) {
            var t = he();
            if (T.tooltips.seek && Ve.progress.container && 0 !== t) {
                var n = Ve.progress.container.getBoundingClientRect(), r = 0, o = T.classes.tooltip + "--visible";
                if (e) r = 100 / n.width * (e.pageX - n.left); else {
                    if (!h(Ve.progress.tooltip, o)) return;
                    r = Ve.progress.tooltip.style.left.replace("%", "");
                }
                r < 0 ? r = 0 : r > 100 && (r = 100), Ne(t / 100 * r, Ve.progress.tooltip), Ve.progress.tooltip.style.left = r + "%", 
                e && i([ "mouseenter", "mouseleave" ], e.type) && f(Ve.progress.tooltip, o, "mouseenter" === e.type);
            }
        }
        function Pe(t) {
            if (T.hideControls && "audio" !== Ve.type) {
                var n = 0, r = !1, o = t, a = h(Ve.container, T.classes.loading);
                if (O.boolean(t) || (t && t.type ? (r = "enterfullscreen" === t.type, o = i([ "mousemove", "touchstart", "mouseenter", "focus" ], t.type), 
                i([ "mousemove", "touchmove" ], t.type) && (n = 2e3), "focus" === t.type && (n = 3e3)) : o = h(Ve.container, T.classes.hideControls)), 
                e.clearTimeout(ze.hover), o || Ve.media.paused || a) {
                    if (f(Ve.container, T.classes.hideControls, !1), Ve.media.paused || a) return;
                    Ve.browser.isTouch && (n = 3e3);
                }
                o && Ve.media.paused || (ze.hover = e.setTimeout(function() {
                    (!Ve.controls.pressed && !Ve.controls.hover || r) && f(Ve.container, T.classes.hideControls, !0);
                }, n));
            }
        }
        function Oe(e) {
            if (!O.undefined(e)) return void Fe(e);
            var t;
            switch (Ve.type) {
              case "youtube":
                t = Ve.embed.getVideoUrl();
                break;

              case "vimeo":
                Ve.embed.getVideoUrl.then(function(e) {
                    t = e;
                });
                break;

              case "soundcloud":
                Ve.embed.getCurrentSound(function(e) {
                    t = e.permalink_url;
                });
                break;

              default:
                t = Ve.media.currentSrc;
            }
            return t || "";
        }
        function Fe(e) {
            function n() {
                if (Ve.embed = null, u(Ve.media), "video" === Ve.type && Ve.videoContainer && u(Ve.videoContainer), 
                Ve.container && Ve.container.removeAttribute("class"), "type" in e && (Ve.type = e.type, 
                "video" === Ve.type)) {
                    var n = e.sources[0];
                    "type" in n && i(T.types.embed, n.type) && (Ve.type = n.type);
                }
                switch (Ve.supported = N(Ve.type), Ve.type) {
                  case "video":
                    Ve.media = t.createElement("video");
                    break;

                  case "audio":
                    Ve.media = t.createElement("audio");
                    break;

                  case "youtube":
                  case "vimeo":
                  case "soundcloud":
                    Ve.media = t.createElement("div"), Ve.embedId = e.sources[0].src;
                }
                l(Ve.container, Ve.media), O.boolean(e.autoplay) && (T.autoplay = e.autoplay), i(T.types.html5, Ve.type) && (T.crossorigin && Ve.media.setAttribute("crossorigin", ""), 
                T.autoplay && Ve.media.setAttribute("autoplay", ""), "poster" in e && Ve.media.setAttribute("poster", e.poster), 
                T.loop && Ve.media.setAttribute("loop", "")), f(Ve.container, T.classes.fullscreen.active, Ve.isFullscreen), 
                f(Ve.container, T.classes.captions.active, Ve.captionsEnabled), Q(), i(T.types.html5, Ve.type) && X("source", e.sources), 
                ne(), i(T.types.html5, Ve.type) && ("tracks" in e && X("track", e.tracks), Ve.media.load()), 
                (i(T.types.html5, Ve.type) || i(T.types.embed, Ve.type) && !Ve.supported.full) && (qe(), 
                He()), T.title = e.title, Z();
            }
            return O.object(e) && "sources" in e && e.sources.length ? (f(Ve.container, T.classes.ready, !1), 
            le(), Re(), Se(), Ue(), void Be(n, !1)) : void Xe("Invalid source format");
        }
        function Me(e) {
            "video" === Ve.type && Ve.media.setAttribute("poster", e);
        }
        function je() {
            function n() {
                var e = ce(), t = Ve.buttons[e ? "play" : "pause"], n = Ve.buttons[e ? "pause" : "play"];
                if (n = n && n.length > 1 ? n[n.length - 1] : n[0]) {
                    var r = h(t, T.classes.tabFocus);
                    setTimeout(function() {
                        n.focus(), r && (f(t, T.classes.tabFocus, !1), f(n, T.classes.tabFocus, !0));
                    }, 100);
                }
            }
            function r() {
                var e = t.activeElement;
                return e = e && e !== t.body ? t.querySelector(":focus") : null;
            }
            function o(e) {
                return e.keyCode ? e.keyCode : e.which;
            }
            function a(e) {
                for (var t in Ve.buttons) {
                    var n = Ve.buttons[t];
                    if (O.nodeList(n)) for (var r = 0; r < n.length; r++) f(n[r], T.classes.tabFocus, n[r] === e); else f(n, T.classes.tabFocus, n === e);
                }
            }
            function s(e) {
                var t = o(e), n = "keydown" === e.type, r = n && t === l;
                if (O.number(t)) if (n) {
                    var a = [ 48, 49, 50, 51, 52, 53, 54, 56, 57, 32, 75, 38, 40, 77, 39, 37, 70, 67 ];
                    switch (i(a, t) && (e.preventDefault(), e.stopPropagation()), t) {
                      case 48:
                      case 49:
                      case 50:
                      case 51:
                      case 52:
                      case 53:
                      case 54:
                      case 55:
                      case 56:
                      case 57:
                        r || function() {
                            var e = Ve.media.duration;
                            O.number(e) && fe(e / 10 * (t - 48));
                        }();
                        break;

                      case 32:
                      case 75:
                        r || ce();
                        break;

                      case 38:
                        Ce();
                        break;

                      case 40:
                        we();
                        break;

                      case 77:
                        r || be();
                        break;

                      case 39:
                        de();
                        break;

                      case 37:
                        pe();
                        break;

                      case 70:
                        ye();
                        break;

                      case 67:
                        r || _e();
                    }
                    !R.supportsFullScreen && Ve.isFullscreen && 27 === t && ye(), l = t;
                } else l = null;
            }
            var u = Ve.browser.isIE ? "change" : "input";
            if (T.keyboardShorcuts.focused) {
                var l = null;
                T.keyboardShorcuts.global && y(e, "keydown keyup", function(e) {
                    var t = o(e), n = r(), a = [ 48, 49, 50, 51, 52, 53, 54, 56, 57, 75, 77, 70, 67 ];
                    1 !== I().length || !i(a, t) || O.htmlElement(n) && m(n, T.selectors.editable) || s(e);
                }), y(Ve.container, "keydown keyup", s);
            }
            y(e, "keyup", function(e) {
                var t = o(e), n = r();
                9 === t && a(n);
            }), y(t.body, "click", function() {
                f(z("." + T.classes.tabFocus), T.classes.tabFocus, !1);
            });
            for (var c in Ve.buttons) {
                var p = Ve.buttons[c];
                y(p, "blur", function() {
                    f(p, "tab-focus", !1);
                });
            }
            g(Ve.buttons.play, "click", T.listeners.play, n), g(Ve.buttons.pause, "click", T.listeners.pause, n), 
            g(Ve.buttons.restart, "click", T.listeners.restart, fe), g(Ve.buttons.rewind, "click", T.listeners.rewind, pe), 
            g(Ve.buttons.forward, "click", T.listeners.forward, de), g(Ve.buttons.seek, u, T.listeners.seek, fe), 
            g(Ve.volume.input, u, T.listeners.volume, function() {
                xe(Ve.volume.input.value);
            }), g(Ve.buttons.mute, "click", T.listeners.mute, be), g(Ve.buttons.fullscreen, "click", T.listeners.fullscreen, ye), 
            R.supportsFullScreen && y(t, R.fullScreenEventName, ye), g(Ve.buttons.captions, "click", T.listeners.captions, _e), 
            y(Ve.progress.container, "mouseenter mouseleave mousemove", Ae), T.hideControls && (y(Ve.container, "mouseenter mouseleave mousemove touchstart touchend touchcancel touchmove enterfullscreen", Pe), 
            y(Ve.controls, "mouseenter mouseleave", function(e) {
                Ve.controls.hover = "mouseenter" === e.type;
            }), y(Ve.controls, "mousedown mouseup touchstart touchend touchcancel", function(e) {
                Ve.controls.pressed = i([ "mousedown", "touchstart" ], e.type);
            }), y(Ve.controls, "focus blur", Pe, !0)), y(Ve.volume.input, "wheel", function(e) {
                e.preventDefault();
                var t = e.webkitDirectionInvertedFromDevice, n = T.volumeStep / 5;
                (e.deltaY < 0 || e.deltaX > 0) && (t ? we(n) : Ce(n)), (e.deltaY > 0 || e.deltaX < 0) && (t ? Ce(n) : we(n));
            });
        }
        function Le() {
            if (y(Ve.media, "timeupdate seeking", Ie), y(Ve.media, "timeupdate", H), y(Ve.media, "durationchange loadedmetadata", De), 
            y(Ve.media, "ended", function() {
                "video" === Ve.type && T.showPosterOnEnd && ("video" === Ve.type && q(), fe(), Ve.media.load());
            }), y(Ve.media, "progress playing", Te), y(Ve.media, "volumechange", Ee), y(Ve.media, "play pause ended", me), 
            y(Ve.media, "waiting canplay seeked", ke), T.clickToPlay && "audio" !== Ve.type) {
                var e = z("." + T.classes.videoWrapper);
                if (!e) return;
                e.style.cursor = "pointer", y(e, "click", function() {
                    T.hideControls && Ve.browser.isTouch && !Ve.media.paused || (Ve.media.paused ? ue() : Ve.media.ended ? (fe(), 
                    ue()) : le());
                });
            }
            T.disableContextMenu && y(Ve.media, "contextmenu", function(e) {
                e.preventDefault();
            }), y(Ve.media, T.events.concat([ "keyup", "keydown" ]).join(" "), function(e) {
                D(Ve.container, e.type, !0);
            });
        }
        function Ue() {
            if (i(T.types.html5, Ve.type)) {
                for (var e = Ve.media.querySelectorAll("source"), t = 0; t < e.length; t++) u(e[t]);
                Ve.media.setAttribute("src", T.blankUrl), Ve.media.load(), $e("Cancelled network requests");
            }
        }
        function Be(n, r) {
            function o() {
                clearTimeout(ze.cleanUp), O.boolean(r) || (r = !0), O.function(n) && n.call(Ye), 
                r && (Ve.init = !1, Ve.container.parentNode.replaceChild(Ye, Ve.container), t.body.style.overflow = "", 
                D(Ye, "destroyed", !0));
            }
            if (!Ve.init) return null;
            switch (Ve.type) {
              case "youtube":
                e.clearInterval(ze.buffering), e.clearInterval(ze.playing), Ve.embed.destroy(), 
                o();
                break;

              case "vimeo":
                Ve.embed.unload().then(o), ze.cleanUp = e.setTimeout(o, 200);
                break;

              case "video":
              case "audio":
                J(!0), o();
            }
        }
        function qe() {
            if (!Ve.supported.full) return Xe("Basic support only", Ve.type), u(z(T.selectors.controls.wrapper)), 
            u(z(T.selectors.buttons.play)), void J(!0);
            var e = !V(T.selectors.controls.wrapper).length;
            e && K(), G() && (e && je(), Le(), J(), U(), B(), xe(), Ee(), Ie(), me());
        }
        function He() {
            e.setTimeout(function() {
                D(Ve.media, "ready");
            }, 0), f(Ve.media, P.classes.setup, !0), f(Ve.container, T.classes.ready, !0), Ve.media.plyr = We, 
            T.autoplay && ue();
        }
        var We, Ve = this, ze = {};
        Ve.media = v;
        var Ye = v.cloneNode(!0), $e = function() {
            M("log", arguments);
        }, Xe = function() {
            M("warn", arguments);
        };
        return $e("Config", T), We = {
            getOriginal: function() {
                return Ye;
            },
            getContainer: function() {
                return Ve.container;
            },
            getEmbed: function() {
                return Ve.embed;
            },
            getMedia: function() {
                return Ve.media;
            },
            getType: function() {
                return Ve.type;
            },
            getDuration: he,
            getCurrentTime: function() {
                return Ve.media.currentTime;
            },
            getVolume: function() {
                return Ve.media.volume;
            },
            isMuted: function() {
                return Ve.media.muted;
            },
            isReady: function() {
                return h(Ve.container, T.classes.ready);
            },
            isLoading: function() {
                return h(Ve.container, T.classes.loading);
            },
            isPaused: function() {
                return Ve.media.paused;
            },
            on: function(e, t) {
                return y(Ve.container, e, t), this;
            },
            play: ue,
            pause: le,
            stop: function() {
                le(), fe();
            },
            restart: fe,
            rewind: pe,
            forward: de,
            seek: fe,
            source: Oe,
            poster: Me,
            setVolume: xe,
            togglePlay: ce,
            toggleMute: be,
            toggleCaptions: _e,
            toggleFullscreen: ye,
            toggleControls: Pe,
            isFullscreen: function() {
                return Ve.isFullscreen || !1;
            },
            support: function(e) {
                return r(Ve, e);
            },
            destroy: Be
        }, function() {
            if (Ve.init) return null;
            if (R = k(), Ve.browser = n(), O.htmlElement(Ve.media)) {
                ee();
                var e = v.tagName.toLowerCase();
                "div" === e ? (Ve.type = v.getAttribute("data-type"), Ve.embedId = v.getAttribute("data-video-id"), 
                v.removeAttribute("data-type"), v.removeAttribute("data-video-id")) : (Ve.type = e, 
                T.crossorigin = null !== v.getAttribute("crossorigin"), T.autoplay = T.autoplay || null !== v.getAttribute("autoplay"), 
                T.loop = T.loop || null !== v.getAttribute("loop")), Ve.supported = N(Ve.type), 
                Ve.supported.basic && (Ve.container = s(v, t.createElement("div")), Ve.container.setAttribute("tabindex", 0), 
                Q(), $e(Ve.browser.name + " " + Ve.browser.version), ne(), (i(T.types.html5, Ve.type) || i(T.types.embed, Ve.type) && !Ve.supported.full) && (qe(), 
                He(), Z()), Ve.init = !0);
            }
        }(), Ve.init ? We : null;
    }
    function S(e, n) {
        var r = new XMLHttpRequest();
        if (!O.string(n) || !O.htmlElement(t.querySelector("#" + n))) {
            var o = t.createElement("div");
            o.setAttribute("hidden", ""), O.string(n) && o.setAttribute("id", n), t.body.insertBefore(o, t.body.childNodes[0]), 
            "withCredentials" in r && (r.open("GET", e, !0), r.onload = function() {
                o.innerHTML = r.responseText;
            }, r.send());
        }
    }
    function N(e) {
        var r = n(), o = r.isIE && r.version <= 9, i = r.isIos, a = r.isIphone, s = !!t.createElement("audio").canPlayType, u = !!t.createElement("video").canPlayType, l = !1, c = !1;
        switch (e) {
          case "video":
            l = u, c = l && !o && !a;
            break;

          case "audio":
            l = s, c = l && !o;
            break;

          case "vimeo":
            l = !0, c = !o && !i;
            break;

          case "youtube":
            l = !0, c = !o && !i, i && !a && r.version >= 10 && (c = !0);
            break;

          case "soundcloud":
            l = !0, c = !o && !a;
            break;

          default:
            l = s && u, c = l && !o;
        }
        return {
            basic: l,
            full: c
        };
    }
    function D(e, n) {
        function r(e, t) {
            h(t, P.classes.hook) || o.push({
                target: e,
                media: t
            });
        }
        var o = [], i = [], a = [ P.selectors.html5, P.selectors.embed ].join(",");
        if (O.string(e) ? e = t.querySelectorAll(e) : O.htmlElement(e) ? e = [ e ] : O.nodeList(e) || O.array(e) || O.string(e) || (O.undefined(n) && O.object(e) && (n = e), 
        e = t.querySelectorAll(a)), O.nodeList(e) && (e = Array.prototype.slice.call(e)), 
        !N().basic || !e.length) return !1;
        for (var s = 0; s < e.length; s++) {
            var u = e[s], l = u.querySelectorAll(a);
            if (l.length) for (var c = 0; c < l.length; c++) r(u, l[c]); else m(u, a) && r(u, u);
        }
        return o.forEach(function(e) {
            var t = e.target, r = e.media;
            var o = {};
            try {
                o = JSON.parse(t.getAttribute("data-plyr"));
            } catch (e) {}
            var a = w({}, P, n, o);
            if (!a.enabled) return null;
            var s = new T(r, a);
            if (O.object(s)) {
                if (a.debug) {
                    var u = a.events.concat([ "setup", "statechange", "enterfullscreen", "exitfullscreen", "captionsenabled", "captionsdisabled" ]);
                    y(s.getContainer(), u.join(" "), function(e) {
                        console.log([ a.logPrefix, "event:", e.type ].join(" "), e.detail.plyr);
                    });
                }
                b(s.getContainer(), "setup", !0, {
                    plyr: s
                }), i.push(s);
            }
        }), i;
    }
    function I(e) {
        if (O.string(e) ? e = t.querySelector(e) : O.undefined(e) && (e = t.body), O.htmlElement(e)) {
            var n = e.querySelectorAll("." + P.classes.setup), r = [];
            return Array.prototype.slice.call(n).forEach(function(e) {
                O.object(e.plyr) && r.push(e.plyr);
            }), r;
        }
        return [];
    }
    var R, A = {
        x: 0,
        y: 0
    }, P = {
        enabled: !0,
        debug: !1,
        autoplay: !1,
        loop: !1,
        seekTime: 10,
        volume: 10,
        volumeMin: 0,
        volumeMax: 10,
        volumeStep: 1,
        duration: null,
        displayDuration: !0,
        loadSprite: !0,
        iconPrefix: "plyr",
        iconUrl: "https://cdn.plyr.io/2.0.13/plyr.svg",
        blankUrl: "https://cdn.selz.com/plyr/blank.mp4",
        clickToPlay: !0,
        hideControls: !0,
        showPosterOnEnd: !1,
        disableContextMenu: !0,
        keyboardShorcuts: {
            focused: !0,
            global: !1
        },
        tooltips: {
            controls: !1,
            seek: !0
        },
        selectors: {
            html5: "video, audio",
            embed: "[data-type]",
            editable: "input, textarea, select, [contenteditable]",
            container: ".plyr",
            controls: {
                container: null,
                wrapper: ".plyr__controls"
            },
            labels: "[data-plyr]",
            buttons: {
                seek: '[data-plyr="seek"]',
                play: '[data-plyr="play"]',
                pause: '[data-plyr="pause"]',
                restart: '[data-plyr="restart"]',
                rewind: '[data-plyr="rewind"]',
                forward: '[data-plyr="fast-forward"]',
                mute: '[data-plyr="mute"]',
                captions: '[data-plyr="captions"]',
                fullscreen: '[data-plyr="fullscreen"]'
            },
            volume: {
                input: '[data-plyr="volume"]',
                display: ".plyr__volume--display"
            },
            progress: {
                container: ".plyr__progress",
                buffer: ".plyr__progress--buffer",
                played: ".plyr__progress--played"
            },
            captions: ".plyr__captions",
            currentTime: ".plyr__time--current",
            duration: ".plyr__time--duration"
        },
        classes: {
            setup: "plyr--setup",
            ready: "plyr--ready",
            videoWrapper: "plyr__video-wrapper",
            embedWrapper: "plyr__video-embed",
            type: "plyr--{0}",
            stopped: "plyr--stopped",
            playing: "plyr--playing",
            muted: "plyr--muted",
            loading: "plyr--loading",
            hover: "plyr--hover",
            tooltip: "plyr__tooltip",
            hidden: "plyr__sr-only",
            hideControls: "plyr--hide-controls",
            isIos: "plyr--is-ios",
            isTouch: "plyr--is-touch",
            captions: {
                enabled: "plyr--captions-enabled",
                active: "plyr--captions-active"
            },
            fullscreen: {
                enabled: "plyr--fullscreen-enabled",
                active: "plyr--fullscreen-active"
            },
            tabFocus: "tab-focus"
        },
        captions: {
            defaultActive: !1
        },
        fullscreen: {
            enabled: !0,
            fallback: !0,
            allowAudio: !1
        },
        storage: {
            enabled: !0,
            key: "plyr"
        },
        controls: [ "play-large", "play", "progress", "current-time", "mute", "volume", "captions", "fullscreen" ],
        i18n: {
            restart: "Restart",
            rewind: "Rewind {seektime} secs",
            play: "Play",
            pause: "Pause",
            forward: "Forward {seektime} secs",
            played: "played",
            buffered: "buffered",
            currentTime: "Current time",
            duration: "Duration",
            volume: "Volume",
            toggleMute: "Toggle Mute",
            toggleCaptions: "Toggle Captions",
            toggleFullscreen: "Toggle Fullscreen",
            frameTitle: "Player for {title}"
        },
        types: {
            embed: [ "youtube", "vimeo", "soundcloud" ],
            html5: [ "video", "audio" ]
        },
        urls: {
            vimeo: {
                api: "https://player.vimeo.com/api/player.js"
            },
            youtube: {
                api: "https://www.youtube.com/iframe_api"
            },
            soundcloud: {
                api: "https://w.soundcloud.com/player/api.js"
            }
        },
        listeners: {
            seek: null,
            play: null,
            pause: null,
            restart: null,
            rewind: null,
            forward: null,
            mute: null,
            volume: null,
            captions: null,
            fullscreen: null
        },
        events: [ "ready", "ended", "progress", "stalled", "playing", "waiting", "canplay", "canplaythrough", "loadstart", "loadeddata", "loadedmetadata", "timeupdate", "volumechange", "play", "pause", "error", "seeking", "seeked", "emptied" ],
        logPrefix: "[Plyr]"
    }, O = {
        object: function(e) {
            return null !== e && "object" == typeof e;
        },
        array: function(e) {
            return null !== e && "object" == typeof e && e.constructor === Array;
        },
        number: function(e) {
            return null !== e && ("number" == typeof e && !isNaN(e - 0) || "object" == typeof e && e.constructor === Number);
        },
        string: function(e) {
            return null !== e && ("string" == typeof e || "object" == typeof e && e.constructor === String);
        },
        boolean: function(e) {
            return null !== e && "boolean" == typeof e;
        },
        nodeList: function(e) {
            return null !== e && e instanceof NodeList;
        },
        htmlElement: function(e) {
            return null !== e && e instanceof HTMLElement;
        },
        function: function(e) {
            return null !== e && "function" == typeof e;
        },
        undefined: function(e) {
            return null !== e && void 0 === e;
        }
    }, F = {
        supported: function() {
            if (!("localStorage" in e)) return !1;
            try {
                e.localStorage.setItem("___test", "OK");
                var t = e.localStorage.getItem("___test");
                return e.localStorage.removeItem("___test"), "OK" === t;
            } catch (e) {
                return !1;
            }
            return !1;
        }()
    };
    return {
        setup: D,
        supported: N,
        loadSprite: S,
        get: I
    };
}), function() {
    function e(e, t) {
        t = t || {
            bubbles: !1,
            cancelable: !1,
            detail: void 0
        };
        var n = document.createEvent("CustomEvent");
        return n.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), n;
    }
    "function" != typeof window.CustomEvent && (e.prototype = window.Event.prototype, 
    window.CustomEvent = e);
}(), /**
  * React v15.6.1
  */
function(e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, 
        t.React = e();
    }
}(function() {
    return function e(t, n, r) {
        function o(a, s) {
            if (!n[a]) {
                if (!t[a]) {
                    var u = "function" == typeof require && require;
                    if (!s && u) return u(a, !0);
                    if (i) return i(a, !0);
                    var l = new Error("Cannot find module '" + a + "'");
                    throw l.code = "MODULE_NOT_FOUND", l;
                }
                var c = n[a] = {
                    exports: {}
                };
                t[a][0].call(c.exports, function(e) {
                    var n = t[a][1][e];
                    return o(n || e);
                }, c, c.exports, e, t, n, r);
            }
            return n[a].exports;
        }
        for (var i = "function" == typeof require && require, a = 0; a < r.length; a++) o(r[a]);
        return o;
    }({
        1: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
            function r(e) {
                var t = {
                    "=": "=0",
                    ":": "=2"
                };
                return "$" + ("" + e).replace(/[=:]/g, function(e) {
                    return t[e];
                });
            }
            /**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
            function o(e) {
                var t = /(=0|=2)/g, n = {
                    "=0": "=",
                    "=2": ":"
                };
                return ("" + ("." === e[0] && "$" === e[1] ? e.substring(2) : e.substring(1))).replace(t, function(e) {
                    return n[e];
                });
            }
            var i = {
                escape: r,
                unescape: o
            };
            t.exports = i;
        }, {} ],
        2: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            var r = (e(25), e(30)), o = function(e) {
                var t = this;
                if (t.instancePool.length) {
                    var n = t.instancePool.pop();
                    return t.call(n, e), n;
                }
                return new t(e);
            }, i = function(e, t) {
                var n = this;
                if (n.instancePool.length) {
                    var r = n.instancePool.pop();
                    return n.call(r, e, t), r;
                }
                return new n(e, t);
            }, a = function(e, t, n) {
                var r = this;
                if (r.instancePool.length) {
                    var o = r.instancePool.pop();
                    return r.call(o, e, t, n), o;
                }
                return new r(e, t, n);
            }, s = function(e, t, n, r) {
                var o = this;
                if (o.instancePool.length) {
                    var i = o.instancePool.pop();
                    return o.call(i, e, t, n, r), i;
                }
                return new o(e, t, n, r);
            }, u = function(e) {
                var t = this;
                e instanceof t || r(!1, "Trying to release an instance into a pool of a different type."), 
                e.destructor(), t.instancePool.length < t.poolSize && t.instancePool.push(e);
            }, l = o, c = function(e, t) {
                // Casting as any so that flow ignores the actual implementation and trusts
                // it to match the type we declared
                var n = e;
                return n.instancePool = [], n.getPooled = t || l, n.poolSize || (n.poolSize = 10), 
                n.release = u, n;
            }, p = {
                addPoolingTo: c,
                oneArgumentPooler: o,
                twoArgumentPooler: i,
                threeArgumentPooler: a,
                fourArgumentPooler: s
            };
            t.exports = p;
        }, {
            "25": 25,
            "30": 30
        } ],
        3: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(32), o = e(4), i = e(5), a = e(8), s = e(9), u = e(14), l = e(17), c = e(20), p = e(24), d = s.createElement, f = s.createFactory, h = s.cloneElement, m = e(23), g = e(18), v = e(11), y = !1;
            d = v.createElement, f = v.createFactory, h = v.cloneElement;
            var b = r, x = function(e) {
                return e;
            }, C = !1, w = !1;
            b = function() {
                return m(C, "React.__spread is deprecated and should not be used. Use Object.assign directly or another helper function with similar semantics. You may be seeing this warning due to your compiler. See https://fb.me/react-spread-deprecation for more details."), 
                C = !0, r.apply(null, arguments);
            }, x = function(e) {
                return m(w, "React.createMixin is deprecated and should not be used. In React v16.0, it will be removed. You can use this mixin directly instead. See https://fb.me/createmixin-was-never-implemented for more info."), 
                w = !0, e;
            };
            var E = {
                // Modern
                Children: {
                    map: i.map,
                    forEach: i.forEach,
                    count: i.count,
                    toArray: i.toArray,
                    only: p
                },
                Component: o.Component,
                PureComponent: o.PureComponent,
                createElement: d,
                cloneElement: h,
                isValidElement: s.isValidElement,
                // Classic
                PropTypes: u,
                createClass: c,
                createFactory: f,
                createMixin: x,
                // This looks DOM specific but these are actually isomorphic helpers
                // since they are just generating DOM strings.
                DOM: a,
                version: l,
                // Deprecated hook for JSX spread, don't use this for anything.
                __spread: b
            }, _ = !1;
            g && (Object.defineProperty(E, "PropTypes", {
                get: function() {
                    return m(y, "Accessing PropTypes via the main React package is deprecated, and will be removed in  React v16.0. Use the latest available v15.* prop-types package from npm instead. For info on usage, compatibility, migration and more, see https://fb.me/prop-types-docs"), 
                    y = !0, u;
                }
            }), Object.defineProperty(E, "createClass", {
                get: function() {
                    return m(_, "Accessing createClass via the main React package is deprecated, and will be removed in React v16.0. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class v15.* is available on npm as a temporary, drop-in replacement. For more info see https://fb.me/react-create-class"), 
                    _ = !0, c;
                }
            })), // React.DOM factories are deprecated. Wrap these methods so that
            // invocations of the React.DOM namespace and alert users to switch
            // to the `react-dom-factories` package.
            E.DOM = {};
            var k = !1;
            Object.keys(a).forEach(function(e) {
                E.DOM[e] = function() {
                    return k || (m(!1, "Accessing factories like React.DOM.%s has been deprecated and will be removed in v16.0+. Use the react-dom-factories package instead.  Version 1.0 provides a drop-in replacement. For more info, see https://fb.me/react-dom-factories", e), 
                    k = !0), a[e].apply(a, arguments);
                };
            }), t.exports = E;
        }, {
            "11": 11,
            "14": 14,
            "17": 17,
            "18": 18,
            "20": 20,
            "23": 23,
            "24": 24,
            "32": 32,
            "4": 4,
            "5": 5,
            "8": 8,
            "9": 9
        } ],
        4: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            /**
 * Base class helpers for the updating state of a component.
 */
            function r(e, t, n) {
                this.props = e, this.context = t, this.refs = l, // We initialize the default updater but the real one gets injected by the
                // renderer.
                this.updater = n || s;
            }
            /**
 * Base class helpers for the updating state of a component.
 */
            function o(e, t, n) {
                // Duplicated from ReactComponent.
                this.props = e, this.context = t, this.refs = l, // We initialize the default updater but the real one gets injected by the
                // renderer.
                this.updater = n || s;
            }
            function i() {}
            var a = (e(25), e(32)), s = e(12), u = e(18), l = e(29), c = e(30), p = e(23);
            r.prototype.isReactComponent = {}, /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
            r.prototype.setState = function(e, t) {
                "object" != typeof e && "function" != typeof e && null != e && c(!1, "setState(...): takes an object of state variables to update or a function which returns an object of state variables."), 
                this.updater.enqueueSetState(this, e), t && this.updater.enqueueCallback(this, t, "setState");
            }, /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
            r.prototype.forceUpdate = function(e) {
                this.updater.enqueueForceUpdate(this), e && this.updater.enqueueCallback(this, e, "forceUpdate");
            };
            var d = {
                isMounted: [ "isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks." ],
                replaceState: [ "replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)." ]
            };
            for (var f in d) d.hasOwnProperty(f) && function(e, t) {
                u && Object.defineProperty(r.prototype, e, {
                    get: function() {
                        p(!1, "%s(...) is deprecated in plain JavaScript React classes. %s", t[0], t[1]);
                    }
                });
            }(f, d[f]);
            i.prototype = r.prototype, o.prototype = new i(), o.prototype.constructor = o, // Avoid an extra prototype jump for these methods.
            a(o.prototype, r.prototype), o.prototype.isPureReactComponent = !0, t.exports = {
                Component: r,
                PureComponent: o
            };
        }, {
            "12": 12,
            "18": 18,
            "23": 23,
            "25": 25,
            "29": 29,
            "30": 30,
            "32": 32
        } ],
        5: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            function r(e) {
                return ("" + e).replace(x, "$&/");
            }
            /**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
            function o(e, t) {
                this.func = e, this.context = t, this.count = 0;
            }
            function i(e, t, n) {
                var r = e.func, o = e.context;
                r.call(o, t, e.count++);
            }
            /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
            function a(e, t, n) {
                if (null == e) return e;
                var r = o.getPooled(t, n);
                v(e, i, r), o.release(r);
            }
            /**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
            function s(e, t, n, r) {
                this.result = e, this.keyPrefix = t, this.func = n, this.context = r, this.count = 0;
            }
            function u(e, t, n) {
                var o = e.result, i = e.keyPrefix, a = e.func, s = e.context, u = a.call(s, t, e.count++);
                Array.isArray(u) ? l(u, o, n, g.thatReturnsArgument) : null != u && (m.isValidElement(u) && (u = m.cloneAndReplaceKey(u, // Keep both the (mapped) and old keys if they differ, just as
                // traverseAllChildren used to do for objects as children
                i + (!u.key || t && t.key === u.key ? "" : r(u.key) + "/") + n)), o.push(u));
            }
            function l(e, t, n, o, i) {
                var a = "";
                null != n && (a = r(n) + "/");
                var l = s.getPooled(t, a, o, i);
                v(e, u, l), s.release(l);
            }
            /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
            function c(e, t, n) {
                if (null == e) return e;
                var r = [];
                return l(e, r, null, t, n), r;
            }
            function p(e, t, n) {
                return null;
            }
            /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
            function d(e, t) {
                return v(e, p, null);
            }
            /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
            function f(e) {
                var t = [];
                return l(e, t, null, g.thatReturnsArgument), t;
            }
            var h = e(2), m = e(9), g = e(28), v = e(26), y = h.twoArgumentPooler, b = h.fourArgumentPooler, x = /\/+/g;
            o.prototype.destructor = function() {
                this.func = null, this.context = null, this.count = 0;
            }, h.addPoolingTo(o, y), s.prototype.destructor = function() {
                this.result = null, this.keyPrefix = null, this.func = null, this.context = null, 
                this.count = 0;
            }, h.addPoolingTo(s, b);
            var C = {
                forEach: a,
                map: c,
                mapIntoWithKeyPrefixInternal: l,
                count: d,
                toArray: f
            };
            t.exports = C;
        }, {
            "2": 2,
            "26": 26,
            "28": 28,
            "9": 9
        } ],
        6: [ function(e, t, n) {
            /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            function r(e) {
                // Based on isNative() from Lodash
                var t = Function.prototype.toString, n = Object.prototype.hasOwnProperty, r = RegExp("^" + t.call(n).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
                try {
                    var o = t.call(e);
                    return r.test(o);
                } catch (e) {
                    return !1;
                }
            }
            function o(e) {
                var t = l(e);
                if (t) {
                    var n = t.childIDs;
                    c(e), n.forEach(o);
                }
            }
            function i(e, t, n) {
                return "\n    in " + (e || "Unknown") + (t ? " (at " + t.fileName.replace(/^.*[\\\/]/, "") + ":" + t.lineNumber + ")" : n ? " (created by " + n + ")" : "");
            }
            function a(e) {
                return null == e ? "#empty" : "string" == typeof e || "number" == typeof e ? "#text" : "string" == typeof e.type ? e.type : e.type.displayName || e.type.name || "Unknown";
            }
            function s(e) {
                var t, n = T.getDisplayName(e), r = T.getElement(e), o = T.getOwnerID(e);
                return o && (t = T.getDisplayName(o)), v(r, "ReactComponentTreeHook: Missing React element for debugID %s when building stack", e), 
                i(n, r && r._source, t);
            }
            var u, l, c, p, d, f, h, m = (e(25), e(7)), g = e(30), v = e(31), y = // Array.from
            "function" == typeof Array.from && // Map
            "function" == typeof Map && r(Map) && // Map.prototype.keys
            null != Map.prototype && "function" == typeof Map.prototype.keys && r(Map.prototype.keys) && // Set
            "function" == typeof Set && r(Set) && // Set.prototype.keys
            null != Set.prototype && "function" == typeof Set.prototype.keys && r(Set.prototype.keys);
            if (y) {
                var b = new Map(), x = new Set();
                u = function(e, t) {
                    b.set(e, t);
                }, l = function(e) {
                    return b.get(e);
                }, c = function(e) {
                    b.delete(e);
                }, p = function() {
                    return Array.from(b.keys());
                }, d = function(e) {
                    x.add(e);
                }, f = function(e) {
                    x.delete(e);
                }, h = function() {
                    return Array.from(x.keys());
                };
            } else {
                var C = {}, w = {}, E = function(e) {
                    return "." + e;
                }, _ = function(e) {
                    return parseInt(e.substr(1), 10);
                };
                u = function(e, t) {
                    var n = E(e);
                    C[n] = t;
                }, l = function(e) {
                    var t = E(e);
                    return C[t];
                }, c = function(e) {
                    var t = E(e);
                    delete C[t];
                }, p = function() {
                    return Object.keys(C).map(_);
                }, d = function(e) {
                    var t = E(e);
                    w[t] = !0;
                }, f = function(e) {
                    var t = E(e);
                    delete w[t];
                }, h = function() {
                    return Object.keys(w).map(_);
                };
            }
            var k = [], T = {
                onSetChildren: function(e, t) {
                    var n = l(e);
                    n || g(!1, "Item must have been set"), n.childIDs = t;
                    for (var r = 0; r < t.length; r++) {
                        var o = t[r], i = l(o);
                        i || g(!1, "Expected hook events to fire for the child before its parent includes it in onSetChildren()."), 
                        null == i.childIDs && "object" == typeof i.element && null != i.element && g(!1, "Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren()."), 
                        i.isMounted || g(!1, "Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren()."), 
                        null == i.parentID && (i.parentID = e), i.parentID !== e && g(!1, "Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).", o, i.parentID, e);
                    }
                },
                onBeforeMountComponent: function(e, t, n) {
                    u(e, {
                        element: t,
                        parentID: n,
                        text: null,
                        childIDs: [],
                        isMounted: !1,
                        updateCount: 0
                    });
                },
                onBeforeUpdateComponent: function(e, t) {
                    var n = l(e);
                    n && n.isMounted && (n.element = t);
                },
                onMountComponent: function(e) {
                    var t = l(e);
                    t || g(!1, "Item must have been set"), t.isMounted = !0, 0 === t.parentID && d(e);
                },
                onUpdateComponent: function(e) {
                    var t = l(e);
                    t && t.isMounted && t.updateCount++;
                },
                onUnmountComponent: function(e) {
                    var t = l(e);
                    if (t) {
                        // We need to check if it exists.
                        // `item` might not exist if it is inside an error boundary, and a sibling
                        // error boundary child threw while mounting. Then this instance never
                        // got a chance to mount, but it still gets an unmounting event during
                        // the error boundary cleanup.
                        t.isMounted = !1;
                        0 === t.parentID && f(e);
                    }
                    k.push(e);
                },
                purgeUnmountedComponents: function() {
                    if (!T._preventPurging) {
                        for (var e = 0; e < k.length; e++) {
                            o(k[e]);
                        }
                        k.length = 0;
                    }
                },
                isMounted: function(e) {
                    var t = l(e);
                    return !!t && t.isMounted;
                },
                getCurrentStackAddendum: function(e) {
                    var t = "";
                    if (e) {
                        var n = a(e), r = e._owner;
                        t += i(n, e._source, r && r.getName());
                    }
                    var o = m.current, s = o && o._debugID;
                    return t += T.getStackAddendumByID(s);
                },
                getStackAddendumByID: function(e) {
                    for (var t = ""; e; ) t += s(e), e = T.getParentID(e);
                    return t;
                },
                getChildIDs: function(e) {
                    var t = l(e);
                    return t ? t.childIDs : [];
                },
                getDisplayName: function(e) {
                    var t = T.getElement(e);
                    return t ? a(t) : null;
                },
                getElement: function(e) {
                    var t = l(e);
                    return t ? t.element : null;
                },
                getOwnerID: function(e) {
                    var t = T.getElement(e);
                    return t && t._owner ? t._owner._debugID : null;
                },
                getParentID: function(e) {
                    var t = l(e);
                    return t ? t.parentID : null;
                },
                getSource: function(e) {
                    var t = l(e), n = t ? t.element : null;
                    return null != n ? n._source : null;
                },
                getText: function(e) {
                    var t = T.getElement(e);
                    return "string" == typeof t ? t : "number" == typeof t ? "" + t : null;
                },
                getUpdateCount: function(e) {
                    var t = l(e);
                    return t ? t.updateCount : 0;
                },
                getRootIDs: h,
                getRegisteredIDs: p,
                pushNonStandardWarningStack: function(e, t) {
                    if ("function" == typeof console.reactStack) {
                        var n = [], r = m.current, o = r && r._debugID;
                        try {
                            for (e && n.push({
                                name: o ? T.getDisplayName(o) : null,
                                fileName: t ? t.fileName : null,
                                lineNumber: t ? t.lineNumber : null
                            }); o; ) {
                                var i = T.getElement(o), a = T.getParentID(o), s = T.getOwnerID(o), u = s ? T.getDisplayName(s) : null, l = i && i._source;
                                n.push({
                                    name: u,
                                    fileName: l ? l.fileName : null,
                                    lineNumber: l ? l.lineNumber : null
                                }), o = a;
                            }
                        } catch (e) {}
                        console.reactStack(n);
                    }
                },
                popNonStandardWarningStack: function() {
                    "function" == typeof console.reactStackEnd && console.reactStackEnd();
                }
            };
            t.exports = T;
        }, {
            "25": 25,
            "30": 30,
            "31": 31,
            "7": 7
        } ],
        7: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
            var r = {
                /**
   * @internal
   * @type {ReactComponent}
   */
                current: null
            };
            t.exports = r;
        }, {} ],
        8: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(9), o = r.createFactory;
            o = e(11).createFactory;
            /**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
            var i = {
                a: o("a"),
                abbr: o("abbr"),
                address: o("address"),
                area: o("area"),
                article: o("article"),
                aside: o("aside"),
                audio: o("audio"),
                b: o("b"),
                base: o("base"),
                bdi: o("bdi"),
                bdo: o("bdo"),
                big: o("big"),
                blockquote: o("blockquote"),
                body: o("body"),
                br: o("br"),
                button: o("button"),
                canvas: o("canvas"),
                caption: o("caption"),
                cite: o("cite"),
                code: o("code"),
                col: o("col"),
                colgroup: o("colgroup"),
                data: o("data"),
                datalist: o("datalist"),
                dd: o("dd"),
                del: o("del"),
                details: o("details"),
                dfn: o("dfn"),
                dialog: o("dialog"),
                div: o("div"),
                dl: o("dl"),
                dt: o("dt"),
                em: o("em"),
                embed: o("embed"),
                fieldset: o("fieldset"),
                figcaption: o("figcaption"),
                figure: o("figure"),
                footer: o("footer"),
                form: o("form"),
                h1: o("h1"),
                h2: o("h2"),
                h3: o("h3"),
                h4: o("h4"),
                h5: o("h5"),
                h6: o("h6"),
                head: o("head"),
                header: o("header"),
                hgroup: o("hgroup"),
                hr: o("hr"),
                html: o("html"),
                i: o("i"),
                iframe: o("iframe"),
                img: o("img"),
                input: o("input"),
                ins: o("ins"),
                kbd: o("kbd"),
                keygen: o("keygen"),
                label: o("label"),
                legend: o("legend"),
                li: o("li"),
                link: o("link"),
                main: o("main"),
                map: o("map"),
                mark: o("mark"),
                menu: o("menu"),
                menuitem: o("menuitem"),
                meta: o("meta"),
                meter: o("meter"),
                nav: o("nav"),
                noscript: o("noscript"),
                object: o("object"),
                ol: o("ol"),
                optgroup: o("optgroup"),
                option: o("option"),
                output: o("output"),
                p: o("p"),
                param: o("param"),
                picture: o("picture"),
                pre: o("pre"),
                progress: o("progress"),
                q: o("q"),
                rp: o("rp"),
                rt: o("rt"),
                ruby: o("ruby"),
                s: o("s"),
                samp: o("samp"),
                script: o("script"),
                section: o("section"),
                select: o("select"),
                small: o("small"),
                source: o("source"),
                span: o("span"),
                strong: o("strong"),
                style: o("style"),
                sub: o("sub"),
                summary: o("summary"),
                sup: o("sup"),
                table: o("table"),
                tbody: o("tbody"),
                td: o("td"),
                textarea: o("textarea"),
                tfoot: o("tfoot"),
                th: o("th"),
                thead: o("thead"),
                time: o("time"),
                title: o("title"),
                tr: o("tr"),
                track: o("track"),
                u: o("u"),
                ul: o("ul"),
                var: o("var"),
                video: o("video"),
                wbr: o("wbr"),
                // SVG
                circle: o("circle"),
                clipPath: o("clipPath"),
                defs: o("defs"),
                ellipse: o("ellipse"),
                g: o("g"),
                image: o("image"),
                line: o("line"),
                linearGradient: o("linearGradient"),
                mask: o("mask"),
                path: o("path"),
                pattern: o("pattern"),
                polygon: o("polygon"),
                polyline: o("polyline"),
                radialGradient: o("radialGradient"),
                rect: o("rect"),
                stop: o("stop"),
                svg: o("svg"),
                text: o("text"),
                tspan: o("tspan")
            };
            t.exports = i;
        }, {
            "11": 11,
            "9": 9
        } ],
        9: [ function(e, t, n) {
            /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            function r(e) {
                if (f.call(e, "ref")) {
                    var t = Object.getOwnPropertyDescriptor(e, "ref").get;
                    if (t && t.isReactWarning) return !1;
                }
                return void 0 !== e.ref;
            }
            function o(e) {
                if (f.call(e, "key")) {
                    var t = Object.getOwnPropertyDescriptor(e, "key").get;
                    if (t && t.isReactWarning) return !1;
                }
                return void 0 !== e.key;
            }
            function i(e, t) {
                var n = function() {
                    s || (s = !0, p(!1, "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", t));
                };
                n.isReactWarning = !0, Object.defineProperty(e, "key", {
                    get: n,
                    configurable: !0
                });
            }
            function a(e, t) {
                var n = function() {
                    u || (u = !0, p(!1, "%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://fb.me/react-special-props)", t));
                };
                n.isReactWarning = !0, Object.defineProperty(e, "ref", {
                    get: n,
                    configurable: !0
                });
            }
            var s, u, l = e(32), c = e(7), p = e(31), d = e(18), f = Object.prototype.hasOwnProperty, h = e(10), m = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            }, g = function(e, t, n, r, o, i, a) {
                var s = {
                    // This tag allow us to uniquely identify this as a React Element
                    $$typeof: h,
                    // Built-in properties that belong on the element
                    type: e,
                    key: t,
                    ref: n,
                    props: a,
                    // Record the component responsible for creating this element.
                    _owner: i
                };
                // The validation flag is currently mutative. We put it on
                // an external backing store so that we can freeze the whole object.
                // This can be replaced with a WeakMap once they are implemented in
                // commonly used development environments.
                // To make comparing ReactElements easier for testing purposes, we make
                // the validation flag non-enumerable (where possible, which should
                // include every environment we run tests in), so the test framework
                // ignores it.
                // self and source are DEV only properties.
                // Two elements created in two different places should be considered
                // equal for testing purposes and therefore we hide it from enumeration.
                return s._store = {}, d ? (Object.defineProperty(s._store, "validated", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !0,
                    value: !1
                }), Object.defineProperty(s, "_self", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: r
                }), Object.defineProperty(s, "_source", {
                    configurable: !1,
                    enumerable: !1,
                    writable: !1,
                    value: o
                })) : (s._store.validated = !1, s._self = r, s._source = o), Object.freeze && (Object.freeze(s.props), 
                Object.freeze(s)), s;
            };
            /**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
            g.createElement = function(e, t, n) {
                var s, u = {}, l = null, p = null, d = null, v = null;
                if (null != t) {
                    r(t) && (p = t.ref), o(t) && (l = "" + t.key), d = void 0 === t.__self ? null : t.__self, 
                    v = void 0 === t.__source ? null : t.__source;
                    // Remaining properties are added to a new props object
                    for (s in t) f.call(t, s) && !m.hasOwnProperty(s) && (u[s] = t[s]);
                }
                // Children can be more than one argument, and those are transferred onto
                // the newly allocated props object.
                var y = arguments.length - 2;
                if (1 === y) u.children = n; else if (y > 1) {
                    for (var b = Array(y), x = 0; x < y; x++) b[x] = arguments[x + 2];
                    Object.freeze && Object.freeze(b), u.children = b;
                }
                // Resolve default props
                if (e && e.defaultProps) {
                    var C = e.defaultProps;
                    for (s in C) void 0 === u[s] && (u[s] = C[s]);
                }
                if ((l || p) && (void 0 === u.$$typeof || u.$$typeof !== h)) {
                    var w = "function" == typeof e ? e.displayName || e.name || "Unknown" : e;
                    l && i(u, w), p && a(u, w);
                }
                return g(e, l, p, d, v, c.current, u);
            }, /**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
            g.createFactory = function(e) {
                var t = g.createElement.bind(null, e);
                // Expose the type on the factory and the prototype so that it can be
                // easily accessed on elements. E.g. `<Foo />.type === Foo`.
                // This should not be named `constructor` since this may not be the function
                // that created the element, and it may not even be a constructor.
                // Legacy hook TODO: Warn if this is accessed
                return t.type = e, t;
            }, g.cloneAndReplaceKey = function(e, t) {
                return g(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
            }, /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
            g.cloneElement = function(e, t, n) {
                var i, a = l({}, e.props), s = e.key, u = e.ref, p = e._self, d = e._source, h = e._owner;
                if (null != t) {
                    r(t) && (// Silently steal the ref from the parent.
                    u = t.ref, h = c.current), o(t) && (s = "" + t.key);
                    // Remaining properties override existing props
                    var v;
                    e.type && e.type.defaultProps && (v = e.type.defaultProps);
                    for (i in t) f.call(t, i) && !m.hasOwnProperty(i) && (void 0 === t[i] && void 0 !== v ? // Resolve default props
                    a[i] = v[i] : a[i] = t[i]);
                }
                // Children can be more than one argument, and those are transferred onto
                // the newly allocated props object.
                var y = arguments.length - 2;
                if (1 === y) a.children = n; else if (y > 1) {
                    for (var b = Array(y), x = 0; x < y; x++) b[x] = arguments[x + 2];
                    a.children = b;
                }
                return g(e.type, s, u, p, d, h, a);
            }, /**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
            g.isValidElement = function(e) {
                return "object" == typeof e && null !== e && e.$$typeof === h;
            }, t.exports = g;
        }, {
            "10": 10,
            "18": 18,
            "31": 31,
            "32": 32,
            "7": 7
        } ],
        10: [ function(e, t, n) {
            /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            // The Symbol used to tag the ReactElement type. If there is no native Symbol
            // nor polyfill, then a plain number is used for performance.
            var r = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
            t.exports = r;
        }, {} ],
        11: [ function(e, t, n) {
            /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            /**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */
            "use strict";
            function r() {
                if (l.current) {
                    var e = l.current.getName();
                    if (e) return " Check the render method of `" + e + "`.";
                }
                return "";
            }
            function o(e) {
                if (null !== e && void 0 !== e && void 0 !== e.__source) {
                    var t = e.__source;
                    return " Check your code at " + t.fileName.replace(/^.*[\\\/]/, "") + ":" + t.lineNumber + ".";
                }
                return "";
            }
            function i(e) {
                var t = r();
                if (!t) {
                    var n = "string" == typeof e ? e : e.displayName || e.name;
                    n && (t = " Check the top-level render call using <" + n + ">.");
                }
                return t;
            }
            /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
            function a(e, t) {
                if (e._store && !e._store.validated && null == e.key) {
                    e._store.validated = !0;
                    var n = v.uniqueKey || (v.uniqueKey = {}), r = i(t);
                    if (!n[r]) {
                        n[r] = !0;
                        // Usually the current owner is the offender, but if it accepts children as a
                        // property, it may be the creator of the child that's responsible for
                        // assigning it a key.
                        var o = "";
                        e && e._owner && e._owner !== l.current && (// Give the component that originally created this child.
                        o = " It was passed a child from " + e._owner.getName() + "."), m(!1, 'Each child in an array or iterator should have a unique "key" prop.%s%s See https://fb.me/react-warning-keys for more information.%s', r, o, c.getCurrentStackAddendum(e));
                    }
                }
            }
            /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
            function s(e, t) {
                if ("object" == typeof e) if (Array.isArray(e)) for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    p.isValidElement(r) && a(r, t);
                } else if (p.isValidElement(e)) // This element was passed in a valid location.
                e._store && (e._store.validated = !0); else if (e) {
                    var o = h(e);
                    // Entry iterators provide implicit keys.
                    if (o && o !== e.entries) for (var i, s = o.call(e); !(i = s.next()).done; ) p.isValidElement(i.value) && a(i.value, t);
                }
            }
            /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
            function u(e) {
                var t = e.type;
                if ("function" == typeof t) {
                    var n = t.displayName || t.name;
                    t.propTypes && d(t.propTypes, e.props, "prop", n, e, null), "function" == typeof t.getDefaultProps && m(t.getDefaultProps.isReactClassApproved, "getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
                }
            }
            var l = e(7), c = e(6), p = e(9), d = e(19), f = e(18), h = e(21), m = e(31), g = e(23), v = {}, y = {
                createElement: function(e, t, n) {
                    var i = "string" == typeof e || "function" == typeof e;
                    // We warn in this case but don't throw. We expect the element creation to
                    // succeed and there will likely be errors in render.
                    if (!i && "function" != typeof e && "string" != typeof e) {
                        var a = "";
                        (void 0 === e || "object" == typeof e && null !== e && 0 === Object.keys(e).length) && (a += " You likely forgot to export your component from the file it's defined in.");
                        var l = o(t);
                        a += l || r(), a += c.getCurrentStackAddendum();
                        var d = null !== t && void 0 !== t && void 0 !== t.__source ? t.__source : null;
                        c.pushNonStandardWarningStack(!0, d), m(!1, "React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == e ? e : typeof e, a), 
                        c.popNonStandardWarningStack();
                    }
                    var f = p.createElement.apply(this, arguments);
                    // The result can be nullish if a mock or a custom function is used.
                    // TODO: Drop this when these are no longer allowed as the type argument.
                    if (null == f) return f;
                    // Skip key warning if the type isn't valid since our key validation logic
                    // doesn't expect a non-string/function type and can throw confusing errors.
                    // We don't want exception behavior to differ between dev and prod.
                    // (Rendering will throw with a helpful message and as soon as the type is
                    // fixed, the key warnings will appear.)
                    if (i) for (var h = 2; h < arguments.length; h++) s(arguments[h], e);
                    return u(f), f;
                },
                createFactory: function(e) {
                    var t = y.createElement.bind(null, e);
                    // Legacy hook TODO: Warn if this is accessed
                    return t.type = e, f && Object.defineProperty(t, "type", {
                        enumerable: !1,
                        get: function() {
                            return g(!1, "Factory.type is deprecated. Access the class directly before passing it to createFactory."), 
                            Object.defineProperty(this, "type", {
                                value: e
                            }), e;
                        }
                    }), t;
                },
                cloneElement: function(e, t, n) {
                    for (var r = p.cloneElement.apply(this, arguments), o = 2; o < arguments.length; o++) s(arguments[o], r.type);
                    return u(r), r;
                }
            };
            t.exports = y;
        }, {
            "18": 18,
            "19": 19,
            "21": 21,
            "23": 23,
            "31": 31,
            "6": 6,
            "7": 7,
            "9": 9
        } ],
        12: [ function(e, t, n) {
            /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            function r(e, t) {
                var n = e.constructor;
                o(!1, "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.", t, t, n && (n.displayName || n.name) || "ReactClass");
            }
            var o = e(31), i = {
                /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
                isMounted: function(e) {
                    return !1;
                },
                /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
                enqueueCallback: function(e, t) {},
                /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
                enqueueForceUpdate: function(e) {
                    r(e, "forceUpdate");
                },
                /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
                enqueueReplaceState: function(e, t) {
                    r(e, "replaceState");
                },
                /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
                enqueueSetState: function(e, t) {
                    r(e, "setState");
                }
            };
            t.exports = i;
        }, {
            "31": 31
        } ],
        13: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            var r = {};
            r = {
                prop: "prop",
                context: "context",
                childContext: "child context"
            }, t.exports = r;
        }, {} ],
        14: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(9), o = r.isValidElement, i = e(34);
            t.exports = i(o);
        }, {
            "34": 34,
            "9": 9
        } ],
        15: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            t.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        }, {} ],
        16: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(32), o = e(3), i = r(o, {
                __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                    ReactCurrentOwner: e(7)
                }
            });
            r(i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
                // ReactComponentTreeHook should not be included in production.
                ReactComponentTreeHook: e(6),
                getNextDebugID: e(22)
            }), t.exports = i;
        }, {
            "22": 22,
            "3": 3,
            "32": 32,
            "6": 6,
            "7": 7
        } ],
        17: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            t.exports = "15.6.1";
        }, {} ],
        18: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            var r = !1;
            try {
                // $FlowFixMe https://github.com/facebook/flow/issues/285
                Object.defineProperty({}, "x", {
                    get: function() {}
                }), r = !0;
            } catch (e) {}
            t.exports = r;
        }, {} ],
        19: [ function(e, t, n) {
            (function(n) {
                /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                "use strict";
                /**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
                function r(t, n, r, c, p, d) {
                    for (var f in t) if (t.hasOwnProperty(f)) {
                        var h;
                        // Prop type validation may throw. In case they do, we don't want to
                        // fail the render phase where it didn't fail before. So we log it.
                        // After these have been cleaned up, we'll let them throw.
                        try {
                            // This is intentionally an invariant that gets caught. It's the same
                            // behavior as without this statement except with a better message.
                            "function" != typeof t[f] && s(!1, "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", c || "React class", i[r], f), 
                            h = t[f](n, f, c, r, null, a);
                        } catch (e) {
                            h = e;
                        }
                        if (u(!h || h instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", c || "React class", i[r], f, typeof h), 
                        h instanceof Error && !(h.message in l)) {
                            // Only monitor this failure once because there tends to be a lot of the
                            // same error.
                            l[h.message] = !0;
                            var m = "";
                            o || (o = e(6)), null !== d ? m = o.getStackAddendumByID(d) : null !== p && (m = o.getCurrentStackAddendum(p)), 
                            u(!1, "Failed %s type: %s%s", r, h.message, m);
                        }
                    }
                }
                var o, i = (e(25), e(13)), a = e(15), s = e(30), u = e(31);
                void 0 !== n && n.env;
                var l = {};
                t.exports = r;
            }).call(this, void 0);
        }, {
            "13": 13,
            "15": 15,
            "25": 25,
            "30": 30,
            "31": 31,
            "6": 6
        } ],
        20: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(4), o = r.Component, i = e(9), a = i.isValidElement, s = e(12), u = e(27);
            t.exports = u(o, a, s);
        }, {
            "12": 12,
            "27": 27,
            "4": 4,
            "9": 9
        } ],
        21: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            // Before Symbol spec.
            /**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
            function r(e) {
                var t = e && (o && e[o] || e[i]);
                if ("function" == typeof t) return t;
            }
            /* global Symbol */
            var o = "function" == typeof Symbol && Symbol.iterator, i = "@@iterator";
            t.exports = r;
        }, {} ],
        22: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            function r() {
                return o++;
            }
            var o = 1;
            t.exports = r;
        }, {} ],
        23: [ function(e, t, n) {
            /**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            /**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
            var r = function() {}, o = function(e) {
                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                var o = 0, i = "Warning: " + e.replace(/%s/g, function() {
                    return n[o++];
                });
                "undefined" != typeof console && console.warn(i);
                try {
                    // --- Welcome to debugging React ---
                    // This error was thrown as a convenience so that you can use this stack
                    // to find the callsite that caused this warning to fire.
                    throw new Error(i);
                } catch (e) {}
            };
            r = function(e, t) {
                if (void 0 === t) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
                if (!e) {
                    for (var n = arguments.length, r = Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
                    o.apply(void 0, [ t ].concat(r));
                }
            }, t.exports = r;
        }, {} ],
        24: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
            function r(e) {
                return o.isValidElement(e) || i(!1, "React.Children.only expected to receive a single React element child."), 
                e;
            }
            var o = (e(25), e(9)), i = e(30);
            t.exports = r;
        }, {
            "25": 25,
            "30": 30,
            "9": 9
        } ],
        25: [ function(e, t, n) {
            /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            "use strict";
            /**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */
            function r(e) {
                for (var t = arguments.length - 1, n = "Minified React error #" + e + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" + e, r = 0; r < t; r++) n += "&args[]=" + encodeURIComponent(arguments[r + 1]);
                n += " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
                var o = new Error(n);
                // we don't care about reactProdInvariant's own frame
                throw o.name = "Invariant Violation", o.framesToPop = 1, o;
            }
            t.exports = r;
        }, {} ],
        26: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            /**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
            function r(e, t) {
                // Do some typechecking here since we call this blindly. We want to ensure
                // that we don't block potential future ES APIs.
                // Do some typechecking here since we call this blindly. We want to ensure
                // that we don't block potential future ES APIs.
                return e && "object" == typeof e && null != e.key ? c.escape(e.key) : t.toString(36);
            }
            /**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
            function o(e, t, n, i) {
                var m = typeof e;
                if ("undefined" !== m && "boolean" !== m || (// All of the above are perceived as null.
                e = null), null === e || "string" === m || "number" === m || // The following is inlined from ReactElement. This means we can optimize
                // some checks. React Fiber also inlines this logic for similar purposes.
                "object" === m && e.$$typeof === s) // If it's the only child, treat the name as if it was wrapped in an array
                // so that it's consistent if the number of children grows.
                return n(i, e, "" === t ? d + r(e, 0) : t), 1;
                var g, v, y = 0, b = "" === t ? d : t + f;
                if (Array.isArray(e)) for (var x = 0; x < e.length; x++) g = e[x], v = b + r(g, x), 
                y += o(g, v, n, i); else {
                    var C = u(e);
                    if (C) {
                        var w, E = C.call(e);
                        if (C !== e.entries) for (var _ = 0; !(w = E.next()).done; ) g = w.value, v = b + r(g, _++), 
                        y += o(g, v, n, i); else {
                            var k = "";
                            if (a.current) {
                                var T = a.current.getName();
                                T && (k = " Check the render method of `" + T + "`.");
                            }
                            // Iterator will provide entry [k,v] tuples rather than values.
                            for (p(h, "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s", k), 
                            h = !0; !(w = E.next()).done; ) {
                                var S = w.value;
                                S && (g = S[1], v = b + c.escape(S[0]) + f + r(g, 0), y += o(g, v, n, i));
                            }
                        }
                    } else if ("object" === m) {
                        var N = "";
                        if (N = " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.", 
                        e._isReactElement && (N = " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."), 
                        a.current) {
                            var D = a.current.getName();
                            D && (N += " Check the render method of `" + D + "`.");
                        }
                        var I = String(e);
                        l(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === I ? "object with keys {" + Object.keys(e).join(", ") + "}" : I, N);
                    }
                }
                return y;
            }
            /**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
            function i(e, t, n) {
                return null == e ? 0 : o(e, "", t, n);
            }
            var a = (e(25), e(7)), s = e(10), u = e(21), l = e(30), c = e(1), p = e(31), d = ".", f = ":", h = !1;
            t.exports = i;
        }, {
            "1": 1,
            "10": 10,
            "21": 21,
            "25": 25,
            "30": 30,
            "31": 31,
            "7": 7
        } ],
        27: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            // Helper function to allow the creation of anonymous functions which do not
            // have .name set to the name of the variable being assigned to.
            function r(e) {
                return e;
            }
            function o(e, t, n) {
                function o(e, t, n) {
                    for (var r in t) t.hasOwnProperty(r) && l("function" == typeof t[r], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", e.displayName || "ReactClass", i[n], r);
                }
                function p(e, t) {
                    var n = C.hasOwnProperty(t) ? C[t] : null;
                    // Disallow overriding of base class methods unless explicitly allowed.
                    k.hasOwnProperty(t) && u("OVERRIDE_BASE" === n, "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", t), 
                    // Disallow defining methods more than once unless explicitly allowed.
                    e && u("DEFINE_MANY" === n || "DEFINE_MANY_MERGED" === n, "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", t);
                }
                /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
                function d(e, n) {
                    if (!n) {
                        var r = typeof n;
                        return void l("object" === r && null !== n, "%s: You're attempting to include a mixin that is either null or not an object. Check the mixins included by the component, as well as any mixins they include themselves. Expected object but got %s.", e.displayName || "ReactClass", null === n ? null : r);
                    }
                    u("function" != typeof n, "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."), 
                    u(!t(n), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");
                    var o = e.prototype, i = o.__reactAutoBindPairs;
                    // By handling mixins before any other properties, we ensure the same
                    // chaining order is applied to methods with DEFINE_MANY policy, whether
                    // mixins are listed before or after these methods in the spec.
                    n.hasOwnProperty(c) && w.mixins(e, n.mixins);
                    for (var a in n) if (n.hasOwnProperty(a) && a !== c) {
                        var s = n[a], d = o.hasOwnProperty(a);
                        if (p(d, a), w.hasOwnProperty(a)) w[a](e, s); else {
                            // Setup methods on prototype:
                            // The following member methods should not be automatically bound:
                            // 1. Expected ReactClass methods (in the "interface").
                            // 2. Overridden methods (that were mixed in).
                            var f = C.hasOwnProperty(a), h = "function" == typeof s, v = h && !f && !d && !1 !== n.autobind;
                            if (v) i.push(a, s), o[a] = s; else if (d) {
                                var y = C[a];
                                // These cases should already be caught by validateMethodOverride.
                                u(f && ("DEFINE_MANY_MERGED" === y || "DEFINE_MANY" === y), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", y, a), 
                                // For methods which are defined more than once, call the existing
                                // methods before calling the new property, merging if appropriate.
                                "DEFINE_MANY_MERGED" === y ? o[a] = m(o[a], s) : "DEFINE_MANY" === y && (o[a] = g(o[a], s));
                            } else o[a] = s, // Add verbose displayName to the function, which helps when looking
                            // at profiling tools.
                            "function" == typeof s && n.displayName && (o[a].displayName = n.displayName + "_" + a);
                        }
                    }
                }
                function f(e, t) {
                    if (t) for (var n in t) {
                        var r = t[n];
                        if (t.hasOwnProperty(n)) {
                            var o = n in w;
                            u(!o, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', n);
                            var i = n in e;
                            u(!i, "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", n), 
                            e[n] = r;
                        }
                    }
                }
                /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
                function h(e, t) {
                    u(e && t && "object" == typeof e && "object" == typeof t, "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.");
                    for (var n in t) t.hasOwnProperty(n) && (u(void 0 === e[n], "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", n), 
                    e[n] = t[n]);
                    return e;
                }
                /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
                function m(e, t) {
                    return function() {
                        var n = e.apply(this, arguments), r = t.apply(this, arguments);
                        if (null == n) return r;
                        if (null == r) return n;
                        var o = {};
                        return h(o, n), h(o, r), o;
                    };
                }
                /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
                function g(e, t) {
                    return function() {
                        e.apply(this, arguments), t.apply(this, arguments);
                    };
                }
                /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
                function v(e, t) {
                    var n = t.bind(e);
                    n.__reactBoundContext = e, n.__reactBoundMethod = t, n.__reactBoundArguments = null;
                    var r = e.constructor.displayName, o = n.bind;
                    return n.bind = function(i) {
                        for (var a = arguments.length, s = Array(a > 1 ? a - 1 : 0), u = 1; u < a; u++) s[u - 1] = arguments[u];
                        // User is trying to bind() an autobound method; we effectively will
                        // ignore the value of "this" that the user is trying to use, so
                        // let's warn.
                        if (i !== e && null !== i) l(!1, "bind(): React component methods may only be bound to the component instance. See %s", r); else if (!s.length) return l(!1, "bind(): You are binding a component method to the component. React does this for you automatically in a high-performance way, so you can safely remove this call. See %s", r), 
                        n;
                        var c = o.apply(n, arguments);
                        return c.__reactBoundContext = e, c.__reactBoundMethod = t, c.__reactBoundArguments = s, 
                        c;
                    }, n;
                }
                /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
                function y(e) {
                    for (var t = e.__reactAutoBindPairs, n = 0; n < t.length; n += 2) {
                        var r = t[n], o = t[n + 1];
                        e[r] = v(e, o);
                    }
                }
                /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
                function b(e) {
                    // To keep our warnings more understandable, we'll use a little hack here to
                    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
                    // unnecessarily identify a class without displayName as 'Constructor'.
                    var t = r(function(e, r, o) {
                        l(this instanceof t, "Something is calling a React component directly. Use a factory or JSX instead. See: https://fb.me/react-legacyfactory"), 
                        // Wire up auto-binding
                        this.__reactAutoBindPairs.length && y(this), this.props = e, this.context = r, this.refs = s, 
                        this.updater = o || n, this.state = null;
                        // ReactClasses doesn't have constructors. Instead, they use the
                        // getInitialState and componentWillMount methods for initialization.
                        var i = this.getInitialState ? this.getInitialState() : null;
                        // We allow auto-mocks to proceed as if they're returning null.
                        void 0 === i && this.getInitialState._isMockFunction && (// This is probably bad practice. Consider warning here and
                        // deprecating this convenience.
                        i = null), u("object" == typeof i && !Array.isArray(i), "%s.getInitialState(): must return an object or null", t.displayName || "ReactCompositeComponent"), 
                        this.state = i;
                    });
                    t.prototype = new T(), t.prototype.constructor = t, t.prototype.__reactAutoBindPairs = [], 
                    x.forEach(d.bind(null, t)), d(t, E), d(t, e), d(t, _), // Initialize the defaultProps property after all mixins have been merged.
                    t.getDefaultProps && (t.defaultProps = t.getDefaultProps()), // This is a tag to indicate that the use of these method names is ok,
                    // since it's used with createClass. If it's not, then it's likely a
                    // mistake so we'll warn you to use the static property, property
                    // initializer or constructor respectively.
                    t.getDefaultProps && (t.getDefaultProps.isReactClassApproved = {}), t.prototype.getInitialState && (t.prototype.getInitialState.isReactClassApproved = {}), 
                    u(t.prototype.render, "createClass(...): Class specification must implement a `render` method."), 
                    l(!t.prototype.componentShouldUpdate, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", e.displayName || "A component"), 
                    l(!t.prototype.componentWillRecieveProps, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", e.displayName || "A component");
                    // Reduce time spent doing lookups by setting these on the prototype.
                    for (var o in C) t.prototype[o] || (t.prototype[o] = null);
                    return t;
                }
                /**
   * Policies that describe methods in `ReactClassInterface`.
   */
                var x = [], C = {
                    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
                    mixins: "DEFINE_MANY",
                    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
                    statics: "DEFINE_MANY",
                    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
                    propTypes: "DEFINE_MANY",
                    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
                    contextTypes: "DEFINE_MANY",
                    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
                    childContextTypes: "DEFINE_MANY",
                    // ==== Definition methods ====
                    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
                    getDefaultProps: "DEFINE_MANY_MERGED",
                    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
                    getInitialState: "DEFINE_MANY_MERGED",
                    /**
     * @return {object}
     * @optional
     */
                    getChildContext: "DEFINE_MANY_MERGED",
                    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
                    render: "DEFINE_ONCE",
                    // ==== Delegate methods ====
                    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
                    componentWillMount: "DEFINE_MANY",
                    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
                    componentDidMount: "DEFINE_MANY",
                    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
                    componentWillReceiveProps: "DEFINE_MANY",
                    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
                    shouldComponentUpdate: "DEFINE_ONCE",
                    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
                    componentWillUpdate: "DEFINE_MANY",
                    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
                    componentDidUpdate: "DEFINE_MANY",
                    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
                    componentWillUnmount: "DEFINE_MANY",
                    // ==== Advanced methods ====
                    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
                    updateComponent: "OVERRIDE_BASE"
                }, w = {
                    displayName: function(e, t) {
                        e.displayName = t;
                    },
                    mixins: function(e, t) {
                        if (t) for (var n = 0; n < t.length; n++) d(e, t[n]);
                    },
                    childContextTypes: function(e, t) {
                        o(e, t, "childContext"), e.childContextTypes = a({}, e.childContextTypes, t);
                    },
                    contextTypes: function(e, t) {
                        o(e, t, "context"), e.contextTypes = a({}, e.contextTypes, t);
                    },
                    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
                    getDefaultProps: function(e, t) {
                        e.getDefaultProps ? e.getDefaultProps = m(e.getDefaultProps, t) : e.getDefaultProps = t;
                    },
                    propTypes: function(e, t) {
                        o(e, t, "prop"), e.propTypes = a({}, e.propTypes, t);
                    },
                    statics: function(e, t) {
                        f(e, t);
                    },
                    autobind: function() {}
                }, E = {
                    componentDidMount: function() {
                        this.__isMounted = !0;
                    }
                }, _ = {
                    componentWillUnmount: function() {
                        this.__isMounted = !1;
                    }
                }, k = {
                    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
                    replaceState: function(e, t) {
                        this.updater.enqueueReplaceState(this, e, t);
                    },
                    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
                    isMounted: function() {
                        return l(this.__didWarnIsMounted, "%s: isMounted is deprecated. Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks.", this.constructor && this.constructor.displayName || this.name || "Component"), 
                        this.__didWarnIsMounted = !0, !!this.__isMounted;
                    }
                }, T = function() {};
                return a(T.prototype, e.prototype, k), b;
            }
            var i, a = e(32), s = e(29), u = e(30), l = e(31), c = "mixins";
            i = {
                prop: "prop",
                context: "context",
                childContext: "child context"
            }, t.exports = o;
        }, {
            "29": 29,
            "30": 30,
            "31": 31,
            "32": 32
        } ],
        28: [ function(e, t, n) {
            "use strict";
            /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
            function r(e) {
                return function() {
                    return e;
                };
            }
            /**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
            var o = function() {};
            o.thatReturns = r, o.thatReturnsFalse = r(!1), o.thatReturnsTrue = r(!0), o.thatReturnsNull = r(null), 
            o.thatReturnsThis = function() {
                return this;
            }, o.thatReturnsArgument = function(e) {
                return e;
            }, t.exports = o;
        }, {} ],
        29: [ function(e, t, n) {
            /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = {};
            Object.freeze(r), t.exports = r;
        }, {} ],
        30: [ function(e, t, n) {
            /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            function r(e, t, n, r, i, a, s, u) {
                if (o(t), !e) {
                    var l;
                    if (void 0 === t) l = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."); else {
                        var c = [ n, r, i, a, s, u ], p = 0;
                        l = new Error(t.replace(/%s/g, function() {
                            return c[p++];
                        })), l.name = "Invariant Violation";
                    }
                    // we don't care about invariant's own frame
                    throw l.framesToPop = 1, l;
                }
            }
            /**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */
            var o = function(e) {};
            o = function(e) {
                if (void 0 === e) throw new Error("invariant requires an error message argument");
            }, t.exports = r;
        }, {} ],
        31: [ function(e, t, n) {
            /**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
            "use strict";
            var r = e(28), o = r;
            !function() {
                var e = function(e) {
                    for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                    var o = 0, i = "Warning: " + e.replace(/%s/g, function() {
                        return n[o++];
                    });
                    "undefined" != typeof console && console.error(i);
                    try {
                        // --- Welcome to debugging React ---
                        // This error was thrown as a convenience so that you can use this stack
                        // to find the callsite that caused this warning to fire.
                        throw new Error(i);
                    } catch (e) {}
                };
                o = function(t, n) {
                    if (void 0 === n) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
                    if (0 !== n.indexOf("Failed Composite propType: ") && !t) {
                        for (var r = arguments.length, o = Array(r > 2 ? r - 2 : 0), i = 2; i < r; i++) o[i - 2] = arguments[i];
                        e.apply(void 0, [ n ].concat(o));
                    }
                };
            }(), t.exports = o;
        }, {
            "28": 28
        } ],
        32: [ function(e, t, n) {
            /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
            "use strict";
            function r(e) {
                if (null === e || void 0 === e) throw new TypeError("Object.assign cannot be called with null or undefined");
                return Object(e);
            }
            /* eslint-disable no-unused-vars */
            var o = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, a = Object.prototype.propertyIsEnumerable;
            t.exports = function() {
                try {
                    if (!Object.assign) return !1;
                    // Detect buggy property enumeration order in older V8 versions.
                    // https://bugs.chromium.org/p/v8/issues/detail?id=4118
                    var e = new String("abc");
                    if (// eslint-disable-line no-new-wrappers
                    e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;
                    for (var t = {}, n = 0; n < 10; n++) t["_" + String.fromCharCode(n)] = n;
                    if ("0123456789" !== Object.getOwnPropertyNames(t).map(function(e) {
                        return t[e];
                    }).join("")) return !1;
                    // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                    var r = {};
                    return "abcdefghijklmnopqrst".split("").forEach(function(e) {
                        r[e] = e;
                    }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("");
                } catch (e) {
                    // We don't expect any of the above to throw, but better to be safe.
                    return !1;
                }
            }() ? Object.assign : function(e, t) {
                for (var n, s, u = r(e), l = 1; l < arguments.length; l++) {
                    n = Object(arguments[l]);
                    for (var c in n) i.call(n, c) && (u[c] = n[c]);
                    if (o) {
                        s = o(n);
                        for (var p = 0; p < s.length; p++) a.call(n, s[p]) && (u[s[p]] = n[s[p]]);
                    }
                }
                return u;
            };
        }, {} ],
        33: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
            "use strict";
            /**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
            function r(e, t, n, r, u) {
                for (var l in e) if (e.hasOwnProperty(l)) {
                    var c;
                    // Prop type validation may throw. In case they do, we don't want to
                    // fail the render phase where it didn't fail before. So we log it.
                    // After these have been cleaned up, we'll let them throw.
                    try {
                        // This is intentionally an invariant that gets caught. It's the same
                        // behavior as without this statement except with a better message.
                        o("function" == typeof e[l], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", r || "React class", n, l), 
                        c = e[l](t, l, r, n, null, a);
                    } catch (e) {
                        c = e;
                    }
                    if (i(!c || c instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", r || "React class", n, l, typeof c), 
                    c instanceof Error && !(c.message in s)) {
                        // Only monitor this failure once because there tends to be a lot of the
                        // same error.
                        s[c.message] = !0;
                        var p = u ? u() : "";
                        i(!1, "Failed %s type: %s%s", n, c.message, null != p ? p : "");
                    }
                }
            }
            var o = e(30), i = e(31), a = e(36), s = {};
            t.exports = r;
        }, {
            "30": 30,
            "31": 31,
            "36": 36
        } ],
        34: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
            "use strict";
            // React 15.5 references this module, and assumes PropTypes are still callable in production.
            // Therefore we re-export development-only version with all the PropTypes checks here.
            // However if one is migrating to the `prop-types` npm library, they will go through the
            // `index.js` entry point, and it will branch depending on the environment.
            var r = e(35);
            t.exports = function(e) {
                return r(e, !1);
            };
        }, {
            "35": 35
        } ],
        35: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
            "use strict";
            var r = e(28), o = e(30), i = e(31), a = e(36), s = e(33);
            t.exports = function(e, t) {
                // Before Symbol spec.
                /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
                function n(e) {
                    var t = e && (_ && e[_] || e[k]);
                    if ("function" == typeof t) return t;
                }
                /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
                /*eslint-disable no-self-compare*/
                function u(e, t) {
                    // SameValue algorithm
                    // SameValue algorithm
                    return e === t ? 0 !== e || 1 / e == 1 / t : e !== e && t !== t;
                }
                /*eslint-enable no-self-compare*/
                /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
                function l(e) {
                    this.message = e, this.stack = "";
                }
                function c(e) {
                    function n(n, u, c, p, d, f, h) {
                        if (p = p || T, f = f || c, h !== a) if (t) // New behavior only for users of `prop-types` package
                        o(!1, "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"); else if ("undefined" != typeof console) {
                            // Old behavior for people using React.PropTypes
                            var m = p + ":" + c;
                            !r[m] && // Avoid spamming the console because they are often not actionable except for lib authors
                            s < 3 && (i(!1, "You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.", f, p), 
                            r[m] = !0, s++);
                        }
                        return null == u[c] ? n ? new l(null === u[c] ? "The " + d + " `" + f + "` is marked as required in `" + p + "`, but its value is `null`." : "The " + d + " `" + f + "` is marked as required in `" + p + "`, but its value is `undefined`.") : null : e(u, c, p, d, f);
                    }
                    var r = {}, s = 0, u = n.bind(null, !1);
                    return u.isRequired = n.bind(null, !0), u;
                }
                function p(e) {
                    function t(t, n, r, o, i, a) {
                        var s = t[n];
                        if (x(s) !== e) return new l("Invalid " + o + " `" + i + "` of type `" + C(s) + "` supplied to `" + r + "`, expected `" + e + "`.");
                        return null;
                    }
                    return c(t);
                }
                function d(e) {
                    function t(t, n, r, o, i) {
                        if ("function" != typeof e) return new l("Property `" + i + "` of component `" + r + "` has invalid PropType notation inside arrayOf.");
                        var s = t[n];
                        if (!Array.isArray(s)) {
                            return new l("Invalid " + o + " `" + i + "` of type `" + x(s) + "` supplied to `" + r + "`, expected an array.");
                        }
                        for (var u = 0; u < s.length; u++) {
                            var c = e(s, u, r, o, i + "[" + u + "]", a);
                            if (c instanceof Error) return c;
                        }
                        return null;
                    }
                    return c(t);
                }
                function f(e) {
                    function t(t, n, r, o, i) {
                        if (!(t[n] instanceof e)) {
                            var a = e.name || T;
                            return new l("Invalid " + o + " `" + i + "` of type `" + E(t[n]) + "` supplied to `" + r + "`, expected instance of `" + a + "`.");
                        }
                        return null;
                    }
                    return c(t);
                }
                function h(e) {
                    function t(t, n, r, o, i) {
                        for (var a = t[n], s = 0; s < e.length; s++) if (u(a, e[s])) return null;
                        return new l("Invalid " + o + " `" + i + "` of value `" + a + "` supplied to `" + r + "`, expected one of " + JSON.stringify(e) + ".");
                    }
                    return Array.isArray(e) ? c(t) : (i(!1, "Invalid argument supplied to oneOf, expected an instance of array."), 
                    r.thatReturnsNull);
                }
                function m(e) {
                    function t(t, n, r, o, i) {
                        if ("function" != typeof e) return new l("Property `" + i + "` of component `" + r + "` has invalid PropType notation inside objectOf.");
                        var s = t[n], u = x(s);
                        if ("object" !== u) return new l("Invalid " + o + " `" + i + "` of type `" + u + "` supplied to `" + r + "`, expected an object.");
                        for (var c in s) if (s.hasOwnProperty(c)) {
                            var p = e(s, c, r, o, i + "." + c, a);
                            if (p instanceof Error) return p;
                        }
                        return null;
                    }
                    return c(t);
                }
                function g(e) {
                    function t(t, n, r, o, i) {
                        for (var s = 0; s < e.length; s++) {
                            if (null == (0, e[s])(t, n, r, o, i, a)) return null;
                        }
                        return new l("Invalid " + o + " `" + i + "` supplied to `" + r + "`.");
                    }
                    if (!Array.isArray(e)) return i(!1, "Invalid argument supplied to oneOfType, expected an instance of array."), 
                    r.thatReturnsNull;
                    for (var n = 0; n < e.length; n++) {
                        var o = e[n];
                        if ("function" != typeof o) return i(!1, "Invalid argument supplid to oneOfType. Expected an array of check functions, but received %s at index %s.", w(o), n), 
                        r.thatReturnsNull;
                    }
                    return c(t);
                }
                function v(e) {
                    function t(t, n, r, o, i) {
                        var s = t[n], u = x(s);
                        if ("object" !== u) return new l("Invalid " + o + " `" + i + "` of type `" + u + "` supplied to `" + r + "`, expected `object`.");
                        for (var c in e) {
                            var p = e[c];
                            if (p) {
                                var d = p(s, c, r, o, i + "." + c, a);
                                if (d) return d;
                            }
                        }
                        return null;
                    }
                    return c(t);
                }
                function y(t) {
                    switch (typeof t) {
                      case "number":
                      case "string":
                      case "undefined":
                        return !0;

                      case "boolean":
                        return !t;

                      case "object":
                        if (Array.isArray(t)) return t.every(y);
                        if (null === t || e(t)) return !0;
                        var r = n(t);
                        if (!r) return !1;
                        var o, i = r.call(t);
                        if (r !== t.entries) {
                            for (;!(o = i.next()).done; ) if (!y(o.value)) return !1;
                        } else // Iterator will provide entry [k,v] tuples rather than values.
                        for (;!(o = i.next()).done; ) {
                            var a = o.value;
                            if (a && !y(a[1])) return !1;
                        }
                        return !0;

                      default:
                        return !1;
                    }
                }
                function b(e, t) {
                    // Native Symbol.
                    // Native Symbol.
                    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
                    return "symbol" === e || ("Symbol" === t["@@toStringTag"] || "function" == typeof Symbol && t instanceof Symbol);
                }
                // Equivalent of `typeof` but with special handling for array and regexp.
                function x(e) {
                    var t = typeof e;
                    return Array.isArray(e) ? "array" : e instanceof RegExp ? "object" : b(t, e) ? "symbol" : t;
                }
                // This handles more types than `getPropType`. Only used for error messages.
                // See `createPrimitiveTypeChecker`.
                function C(e) {
                    if (void 0 === e || null === e) return "" + e;
                    var t = x(e);
                    if ("object" === t) {
                        if (e instanceof Date) return "date";
                        if (e instanceof RegExp) return "regexp";
                    }
                    return t;
                }
                // Returns a string that is postfixed to a warning about an invalid type.
                // For example, "undefined" or "of type array"
                function w(e) {
                    var t = C(e);
                    switch (t) {
                      case "array":
                      case "object":
                        return "an " + t;

                      case "boolean":
                      case "date":
                      case "regexp":
                        return "a " + t;

                      default:
                        return t;
                    }
                }
                // Returns class name of the object, if any.
                function E(e) {
                    return e.constructor && e.constructor.name ? e.constructor.name : T;
                }
                /* global Symbol */
                var _ = "function" == typeof Symbol && Symbol.iterator, k = "@@iterator", T = "<<anonymous>>", S = {
                    array: p("array"),
                    bool: p("boolean"),
                    func: p("function"),
                    number: p("number"),
                    object: p("object"),
                    string: p("string"),
                    symbol: p("symbol"),
                    any: function() {
                        return c(r.thatReturnsNull);
                    }(),
                    arrayOf: d,
                    element: function() {
                        function t(t, n, r, o, i) {
                            var a = t[n];
                            if (!e(a)) {
                                return new l("Invalid " + o + " `" + i + "` of type `" + x(a) + "` supplied to `" + r + "`, expected a single ReactElement.");
                            }
                            return null;
                        }
                        return c(t);
                    }(),
                    instanceOf: f,
                    node: function() {
                        function e(e, t, n, r, o) {
                            return y(e[t]) ? null : new l("Invalid " + r + " `" + o + "` supplied to `" + n + "`, expected a ReactNode.");
                        }
                        return c(e);
                    }(),
                    objectOf: m,
                    oneOf: h,
                    oneOfType: g,
                    shape: v
                };
                // Make `instanceof Error` still work for returned errors.
                return l.prototype = Error.prototype, S.checkPropTypes = s, S.PropTypes = S, S;
            };
        }, {
            "28": 28,
            "30": 30,
            "31": 31,
            "33": 33,
            "36": 36
        } ],
        36: [ function(e, t, n) {
            /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
            "use strict";
            t.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
        }, {} ]
    }, {}, [ 16 ])(16);
}), function(e) {
    // CommonJS
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(require("react")); else if ("function" == typeof define && define.amd) define([ "react" ], e); else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, 
        t.ReactDOM = e(t.React);
    }
}(function(e) {
    return function(t) {
        return function() {
            return function e(t, n, r) {
                function o(a, s) {
                    if (!n[a]) {
                        if (!t[a]) {
                            var u = "function" == typeof require && require;
                            if (!s && u) return u(a, !0);
                            if (i) return i(a, !0);
                            var l = new Error("Cannot find module '" + a + "'");
                            throw l.code = "MODULE_NOT_FOUND", l;
                        }
                        var c = n[a] = {
                            exports: {}
                        };
                        t[a][0].call(c.exports, function(e) {
                            var n = t[a][1][e];
                            return o(n || e);
                        }, c, c.exports, e, t, n, r);
                    }
                    return n[a].exports;
                }
                for (var i = "function" == typeof require && require, a = 0; a < r.length; a++) o(r[a]);
                return o;
            }({
                1: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        Properties: {
                            // Global States and Properties
                            "aria-current": 0,
                            // state
                            "aria-details": 0,
                            "aria-disabled": 0,
                            // state
                            "aria-hidden": 0,
                            // state
                            "aria-invalid": 0,
                            // state
                            "aria-keyshortcuts": 0,
                            "aria-label": 0,
                            "aria-roledescription": 0,
                            // Widget Attributes
                            "aria-autocomplete": 0,
                            "aria-checked": 0,
                            "aria-expanded": 0,
                            "aria-haspopup": 0,
                            "aria-level": 0,
                            "aria-modal": 0,
                            "aria-multiline": 0,
                            "aria-multiselectable": 0,
                            "aria-orientation": 0,
                            "aria-placeholder": 0,
                            "aria-pressed": 0,
                            "aria-readonly": 0,
                            "aria-required": 0,
                            "aria-selected": 0,
                            "aria-sort": 0,
                            "aria-valuemax": 0,
                            "aria-valuemin": 0,
                            "aria-valuenow": 0,
                            "aria-valuetext": 0,
                            // Live Region Attributes
                            "aria-atomic": 0,
                            "aria-busy": 0,
                            "aria-live": 0,
                            "aria-relevant": 0,
                            // Drag-and-Drop Attributes
                            "aria-dropeffect": 0,
                            "aria-grabbed": 0,
                            // Relationship Attributes
                            "aria-activedescendant": 0,
                            "aria-colcount": 0,
                            "aria-colindex": 0,
                            "aria-colspan": 0,
                            "aria-controls": 0,
                            "aria-describedby": 0,
                            "aria-errormessage": 0,
                            "aria-flowto": 0,
                            "aria-labelledby": 0,
                            "aria-owns": 0,
                            "aria-posinset": 0,
                            "aria-rowcount": 0,
                            "aria-rowindex": 0,
                            "aria-rowspan": 0,
                            "aria-setsize": 0
                        },
                        DOMAttributeNames: {},
                        DOMPropertyNames: {}
                    };
                    t.exports = r;
                }, {} ],
                2: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(34), o = e(146), i = {
                        focusDOMComponent: function() {
                            o(r.getNodeFromInstance(this));
                        }
                    };
                    t.exports = i;
                }, {
                    "146": 146,
                    "34": 34
                } ],
                3: [ function(e, t, n) {
                    /**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
                    function r(e) {
                        // ctrlKey && altKey is equivalent to AltGr, and is not a command.
                        return (e.ctrlKey || e.altKey || e.metaKey) && !(e.ctrlKey && e.altKey);
                    }
                    /**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
                    function o(e) {
                        switch (e) {
                          case "topCompositionStart":
                            return k.compositionStart;

                          case "topCompositionEnd":
                            return k.compositionEnd;

                          case "topCompositionUpdate":
                            return k.compositionUpdate;
                        }
                    }
                    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
                    function i(e, t) {
                        return "topKeyDown" === e && t.keyCode === y;
                    }
                    /**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
                    function a(e, t) {
                        switch (e) {
                          case "topKeyUp":
                            // Command keys insert or clear IME input.
                            return -1 !== v.indexOf(t.keyCode);

                          case "topKeyDown":
                            // Expect IME keyCode on each keydown. If we get any other
                            // code we must have exited earlier.
                            return t.keyCode !== y;

                          case "topKeyPress":
                          case "topMouseDown":
                          case "topBlur":
                            // Events are not possible without cancelling IME.
                            return !0;

                          default:
                            return !1;
                        }
                    }
                    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
                    function s(e) {
                        var t = e.detail;
                        return "object" == typeof t && "data" in t ? t.data : null;
                    }
                    /**
 * @return {?object} A SyntheticCompositionEvent.
 */
                    function u(e, t, n, r) {
                        var u, l;
                        if (b ? u = o(e) : S ? a(e, n) && (u = k.compositionEnd) : i(e, n) && (u = k.compositionStart), 
                        !u) return null;
                        w && (// The current composition is stored statically and must not be
                        // overwritten while composition continues.
                        S || u !== k.compositionStart ? u === k.compositionEnd && S && (l = S.getData()) : S = h.getPooled(r));
                        var c = m.getPooled(u, t, n, r);
                        if (l) // Inject data generated from fallback path into the synthetic event.
                        // This matches the property of native CompositionEventInterface.
                        c.data = l; else {
                            var p = s(n);
                            null !== p && (c.data = p);
                        }
                        return d.accumulateTwoPhaseDispatches(c), c;
                    }
                    /**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
                    function l(e, t) {
                        switch (e) {
                          case "topCompositionEnd":
                            return s(t);

                          case "topKeyPress":
                            return t.which !== E ? null : (T = !0, _);

                          case "topTextInput":
                            // Record the characters to be added to the DOM.
                            var n = t.data;
                            // If it's a spacebar character, assume that we have already handled
                            // it at the keypress level and bail immediately. Android Chrome
                            // doesn't give us keycodes, so we need to blacklist it.
                            // If it's a spacebar character, assume that we have already handled
                            // it at the keypress level and bail immediately. Android Chrome
                            // doesn't give us keycodes, so we need to blacklist it.
                            return n === _ && T ? null : n;

                          default:
                            // For other native event types, do nothing.
                            return null;
                        }
                    }
                    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
                    function c(e, t) {
                        // If we are currently composing (IME) and using a fallback to do so,
                        // try to extract the composed characters from the fallback object.
                        // If composition event is available, we extract a string only at
                        // compositionevent, otherwise extract it at fallback events.
                        if (S) {
                            if ("topCompositionEnd" === e || !b && a(e, t)) {
                                var n = S.getData();
                                return h.release(S), S = null, n;
                            }
                            return null;
                        }
                        switch (e) {
                          case "topPaste":
                            // If a paste event occurs after a keypress, throw out the input
                            // chars. Paste events should not lead to BeforeInput events.
                            return null;

                          case "topKeyPress":
                            /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
                            /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
                            return t.which && !r(t) ? String.fromCharCode(t.which) : null;

                          case "topCompositionEnd":
                            return w ? null : t.data;

                          default:
                            return null;
                        }
                    }
                    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
                    function p(e, t, n, r) {
                        var o;
                        // If no characters are being inserted, no BeforeInput event should
                        // be fired.
                        if (!(o = C ? l(e, n) : c(e, n))) return null;
                        var i = g.getPooled(k.beforeInput, t, n, r);
                        return i.data = o, d.accumulateTwoPhaseDispatches(i), i;
                    }
                    var d = e(20), f = e(138), h = e(21), m = e(89), g = e(93), v = [ 9, 13, 27, 32 ], y = 229, b = f.canUseDOM && "CompositionEvent" in window, x = null;
                    f.canUseDOM && "documentMode" in document && (x = document.documentMode);
                    // Webkit offers a very useful `textInput` event that can be used to
                    // directly represent `beforeInput`. The IE `textinput` event is not as
                    // useful, so we don't use it.
                    var C = f.canUseDOM && "TextEvent" in window && !x && !/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
                    function() {
                        var e = window.opera;
                        return "object" == typeof e && "function" == typeof e.version && parseInt(e.version(), 10) <= 12;
                    }(), w = f.canUseDOM && (!b || x && x > 8 && x <= 11), E = 32, _ = String.fromCharCode(E), k = {
                        beforeInput: {
                            phasedRegistrationNames: {
                                bubbled: "onBeforeInput",
                                captured: "onBeforeInputCapture"
                            },
                            dependencies: [ "topCompositionEnd", "topKeyPress", "topTextInput", "topPaste" ]
                        },
                        compositionEnd: {
                            phasedRegistrationNames: {
                                bubbled: "onCompositionEnd",
                                captured: "onCompositionEndCapture"
                            },
                            dependencies: [ "topBlur", "topCompositionEnd", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown" ]
                        },
                        compositionStart: {
                            phasedRegistrationNames: {
                                bubbled: "onCompositionStart",
                                captured: "onCompositionStartCapture"
                            },
                            dependencies: [ "topBlur", "topCompositionStart", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown" ]
                        },
                        compositionUpdate: {
                            phasedRegistrationNames: {
                                bubbled: "onCompositionUpdate",
                                captured: "onCompositionUpdateCapture"
                            },
                            dependencies: [ "topBlur", "topCompositionUpdate", "topKeyDown", "topKeyPress", "topKeyUp", "topMouseDown" ]
                        }
                    }, T = !1, S = null, N = {
                        eventTypes: k,
                        extractEvents: function(e, t, n, r) {
                            return [ u(e, t, n, r), p(e, t, n, r) ];
                        }
                    };
                    t.exports = N;
                }, {
                    "138": 138,
                    "20": 20,
                    "21": 21,
                    "89": 89,
                    "93": 93
                } ],
                4: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
                    function r(e, t) {
                        return e + t.charAt(0).toUpperCase() + t.substring(1);
                    }
                    /**
 * CSS properties which accept numbers but are not in units of "px".
 */
                    var o = {
                        animationIterationCount: !0,
                        borderImageOutset: !0,
                        borderImageSlice: !0,
                        borderImageWidth: !0,
                        boxFlex: !0,
                        boxFlexGroup: !0,
                        boxOrdinalGroup: !0,
                        columnCount: !0,
                        flex: !0,
                        flexGrow: !0,
                        flexPositive: !0,
                        flexShrink: !0,
                        flexNegative: !0,
                        flexOrder: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowSpan: !0,
                        gridRowStart: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnSpan: !0,
                        gridColumnStart: !0,
                        fontWeight: !0,
                        lineClamp: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        tabSize: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0,
                        // SVG-related properties
                        fillOpacity: !0,
                        floodOpacity: !0,
                        stopOpacity: !0,
                        strokeDasharray: !0,
                        strokeDashoffset: !0,
                        strokeMiterlimit: !0,
                        strokeOpacity: !0,
                        strokeWidth: !0
                    }, i = [ "Webkit", "ms", "Moz", "O" ];
                    // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
                    // infinite loop, because it iterates over the newly added props too.
                    Object.keys(o).forEach(function(e) {
                        i.forEach(function(t) {
                            o[r(t, e)] = o[e];
                        });
                    });
                    /**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
                    var a = {
                        background: {
                            backgroundAttachment: !0,
                            backgroundColor: !0,
                            backgroundImage: !0,
                            backgroundPositionX: !0,
                            backgroundPositionY: !0,
                            backgroundRepeat: !0
                        },
                        backgroundPosition: {
                            backgroundPositionX: !0,
                            backgroundPositionY: !0
                        },
                        border: {
                            borderWidth: !0,
                            borderStyle: !0,
                            borderColor: !0
                        },
                        borderBottom: {
                            borderBottomWidth: !0,
                            borderBottomStyle: !0,
                            borderBottomColor: !0
                        },
                        borderLeft: {
                            borderLeftWidth: !0,
                            borderLeftStyle: !0,
                            borderLeftColor: !0
                        },
                        borderRight: {
                            borderRightWidth: !0,
                            borderRightStyle: !0,
                            borderRightColor: !0
                        },
                        borderTop: {
                            borderTopWidth: !0,
                            borderTopStyle: !0,
                            borderTopColor: !0
                        },
                        font: {
                            fontStyle: !0,
                            fontVariant: !0,
                            fontWeight: !0,
                            fontSize: !0,
                            lineHeight: !0,
                            fontFamily: !0
                        },
                        outline: {
                            outlineWidth: !0,
                            outlineStyle: !0,
                            outlineColor: !0
                        }
                    }, s = {
                        isUnitlessNumber: o,
                        shorthandPropertyExpansions: a
                    };
                    t.exports = s;
                }, {} ],
                5: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(4), o = e(138), i = e(64), a = e(140), s = e(106), u = e(151), l = e(155), c = e(159), p = l(function(e) {
                        return u(e);
                    }), d = !1, f = "cssFloat";
                    if (o.canUseDOM) {
                        var h = document.createElement("div").style;
                        try {
                            // IE8 throws "Invalid argument." if resetting shorthand style properties.
                            h.font = "";
                        } catch (e) {
                            d = !0;
                        }
                        // IE8 only supports accessing cssFloat (standard) as styleFloat
                        void 0 === document.documentElement.style.cssFloat && (f = "styleFloat");
                    }
                    // 'msTransform' is correct, but the other prefixes should be capitalized
                    var m = /^(?:webkit|moz|o)[A-Z]/, g = /;\s*$/, v = {}, y = {}, b = !1, x = function(e, t) {
                        v.hasOwnProperty(e) && v[e] || (v[e] = !0, c(!1, "Unsupported style property %s. Did you mean %s?%s", e, a(e), _(t)));
                    }, C = function(e, t) {
                        v.hasOwnProperty(e) && v[e] || (v[e] = !0, c(!1, "Unsupported vendor-prefixed style property %s. Did you mean %s?%s", e, e.charAt(0).toUpperCase() + e.slice(1), _(t)));
                    }, w = function(e, t, n) {
                        y.hasOwnProperty(t) && y[t] || (y[t] = !0, c(!1, 'Style property values shouldn\'t contain a semicolon.%s Try "%s: %s" instead.', _(n), e, t.replace(g, "")));
                    }, E = function(e, t, n) {
                        b || (b = !0, c(!1, "`NaN` is an invalid value for the `%s` css style property.%s", e, _(n)));
                    }, _ = function(e) {
                        if (e) {
                            var t = e.getName();
                            if (t) return " Check the render method of `" + t + "`.";
                        }
                        return "";
                    }, k = function(e, t, n) {
                        var r;
                        n && (r = n._currentElement._owner), e.indexOf("-") > -1 ? x(e, r) : m.test(e) ? C(e, r) : g.test(t) && w(e, t, r), 
                        "number" == typeof t && isNaN(t) && E(e, 0, r);
                    }, T = {
                        /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
                        createMarkupForStyles: function(e, t) {
                            var n = "";
                            for (var r in e) if (e.hasOwnProperty(r)) {
                                var o = 0 === r.indexOf("--"), i = e[r];
                                o || k(r, i, t), null != i && (n += p(r) + ":", n += s(r, i, t, o) + ";");
                            }
                            return n || null;
                        },
                        /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
                        setValueForStyles: function(e, t, n) {
                            i.debugTool.onHostOperation({
                                instanceID: n._debugID,
                                type: "update styles",
                                payload: t
                            });
                            var o = e.style;
                            for (var a in t) if (t.hasOwnProperty(a)) {
                                var u = 0 === a.indexOf("--");
                                u || k(a, t[a], n);
                                var l = s(a, t[a], n, u);
                                if ("float" !== a && "cssFloat" !== a || (a = f), u) o.setProperty(a, l); else if (l) o[a] = l; else {
                                    var c = d && r.shorthandPropertyExpansions[a];
                                    if (c) // Shorthand property that IE8 won't like unsetting, so unset each
                                    // component to placate it
                                    for (var p in c) o[p] = ""; else o[a] = "";
                                }
                            }
                        }
                    };
                    t.exports = T;
                }, {
                    "106": 106,
                    "138": 138,
                    "140": 140,
                    "151": 151,
                    "155": 155,
                    "159": 159,
                    "4": 4,
                    "64": 64
                } ],
                6: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }
                    var o = (e(126), e(25)), i = e(152), a = function() {
                        function e(t) {
                            r(this, e), this._callbacks = null, this._contexts = null, this._arg = t;
                        }
                        /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
                        /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
                        /**
   * Resets the internal queue.
   *
   * @internal
   */
                        /**
   * `PooledClass` looks for this.
   */
                        return e.prototype.enqueue = function(e, t) {
                            this._callbacks = this._callbacks || [], this._callbacks.push(e), this._contexts = this._contexts || [], 
                            this._contexts.push(t);
                        }, e.prototype.notifyAll = function() {
                            var e = this._callbacks, t = this._contexts, n = this._arg;
                            if (e && t) {
                                e.length !== t.length && i(!1, "Mismatched list of contexts in callback queue"), 
                                this._callbacks = null, this._contexts = null;
                                for (var r = 0; r < e.length; r++) e[r].call(t[r], n);
                                e.length = 0, t.length = 0;
                            }
                        }, e.prototype.checkpoint = function() {
                            return this._callbacks ? this._callbacks.length : 0;
                        }, e.prototype.rollback = function(e) {
                            this._callbacks && this._contexts && (this._callbacks.length = e, this._contexts.length = e);
                        }, e.prototype.reset = function() {
                            this._callbacks = null, this._contexts = null;
                        }, e.prototype.destructor = function() {
                            this.reset();
                        }, e;
                    }();
                    t.exports = o.addPoolingTo(a);
                }, {
                    "126": 126,
                    "152": 152,
                    "25": 25
                } ],
                7: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t, n) {
                        var r = T.getPooled(R.change, e, t, n);
                        return r.type = "change", w.accumulateTwoPhaseDispatches(r), r;
                    }
                    /**
 * SECTION: handle `change` event
 */
                    function o(e) {
                        var t = e.nodeName && e.nodeName.toLowerCase();
                        return "select" === t || "input" === t && "file" === e.type;
                    }
                    function i(e) {
                        var t = r(P, e, N(e));
                        // If change and propertychange bubbled, we'd just bind to it like all the
                        // other events and have it go through ReactBrowserEventEmitter. Since it
                        // doesn't, we manually listen for the events and so we have to enqueue and
                        // process the abstract event manually.
                        //
                        // Batching is necessary here in order to ensure that all event handlers run
                        // before the next rerender (including event handlers attached to ancestor
                        // elements instead of directly on the input). Without this, controlled
                        // components don't work properly in conjunction with event bubbling because
                        // the component is rerendered and the value reverted before all the event
                        // handlers can run. See https://github.com/facebook/react/issues/708.
                        k.batchedUpdates(a, t);
                    }
                    function a(e) {
                        C.enqueueEvents(e), C.processEventQueue(!1);
                    }
                    function s(e, t) {
                        A = e, P = t, A.attachEvent("onchange", i);
                    }
                    function u() {
                        A && (A.detachEvent("onchange", i), A = null, P = null);
                    }
                    function l(e, t) {
                        var n = S.updateValueIfChanged(e), r = !0 === t.simulated && M._allowSimulatedPassThrough;
                        if (n || r) return e;
                    }
                    function c(e, t) {
                        if ("topChange" === e) return t;
                    }
                    function p(e, t, n) {
                        "topFocus" === e ? (// stopWatching() should be a noop here but we call it just in case we
                        // missed a blur event somehow.
                        u(), s(t, n)) : "topBlur" === e && u();
                    }
                    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
                    function d(e, t) {
                        A = e, P = t, A.attachEvent("onpropertychange", h);
                    }
                    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
                    function f() {
                        A && (A.detachEvent("onpropertychange", h), A = null, P = null);
                    }
                    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
                    function h(e) {
                        "value" === e.propertyName && l(P, e) && i(e);
                    }
                    function m(e, t, n) {
                        "topFocus" === e ? (// In IE8, we can capture almost all .value changes by adding a
                        // propertychange handler and looking for events with propertyName
                        // equal to 'value'
                        // In IE9, propertychange fires for most input events but is buggy and
                        // doesn't fire when text is deleted, but conveniently, selectionchange
                        // appears to fire in all of the remaining cases so we catch those and
                        // forward the event if the value has changed
                        // In either case, we don't want to call the event handler if the value
                        // is changed from JS so we redefine a setter for `.value` that updates
                        // our activeElementValue variable, allowing us to ignore those changes
                        //
                        // stopWatching() should be a noop here but we call it just in case we
                        // missed a blur event somehow.
                        f(), d(t, n)) : "topBlur" === e && f();
                    }
                    // For IE8 and IE9.
                    function g(e, t, n) {
                        if ("topSelectionChange" === e || "topKeyUp" === e || "topKeyDown" === e) // On the selectionchange event, the target is just document which isn't
                        // helpful for us so just check activeElement instead.
                        //
                        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
                        // propertychange on the first input event after setting `value` from a
                        // script and fires only keydown, keypress, keyup. Catching keyup usually
                        // gets it and catching keydown lets us fire an event for the first
                        // keystroke if user does a key repeat (it'll be a little delayed: right
                        // before the second keystroke). Other input methods (e.g., paste) seem to
                        // fire selectionchange normally.
                        return l(P, n);
                    }
                    /**
 * SECTION: handle `click` event
 */
                    function v(e) {
                        // Use the `click` event to detect changes to checkbox and radio inputs.
                        // This approach works across all browsers, whereas `change` does not fire
                        // until `blur` in IE8.
                        var t = e.nodeName;
                        return t && "input" === t.toLowerCase() && ("checkbox" === e.type || "radio" === e.type);
                    }
                    function y(e, t, n) {
                        if ("topClick" === e) return l(t, n);
                    }
                    function b(e, t, n) {
                        if ("topInput" === e || "topChange" === e) return l(t, n);
                    }
                    function x(e, t) {
                        // TODO: In IE, inst is occasionally null. Why?
                        if (null != e) {
                            // Fiber and ReactDOM keep wrapper state in separate places
                            var n = e._wrapperState || t._wrapperState;
                            if (n && n.controlled && "number" === t.type) {
                                // If controlled, assign the value attribute to the current value on blur
                                var r = "" + t.value;
                                t.getAttribute("value") !== r && t.setAttribute("value", r);
                            }
                        }
                    }
                    var C = e(17), w = e(20), E = e(138), _ = e(34), k = e(82), T = e(91), S = e(120), N = e(114), D = e(122), I = e(123), R = {
                        change: {
                            phasedRegistrationNames: {
                                bubbled: "onChange",
                                captured: "onChangeCapture"
                            },
                            dependencies: [ "topBlur", "topChange", "topClick", "topFocus", "topInput", "topKeyDown", "topKeyUp", "topSelectionChange" ]
                        }
                    }, A = null, P = null, O = !1;
                    E.canUseDOM && (// See `handleChange` comment below
                    O = D("change") && (!document.documentMode || document.documentMode > 8));
                    /**
 * SECTION: handle `input` event
 */
                    var F = !1;
                    E.canUseDOM && (// IE9 claims to support the input event but fails to trigger it when
                    // deleting text, so we ignore its input events.
                    F = D("input") && (!("documentMode" in document) || document.documentMode > 9));
                    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
                    var M = {
                        eventTypes: R,
                        _allowSimulatedPassThrough: !0,
                        _isInputEventSupported: F,
                        extractEvents: function(e, t, n, i) {
                            var a, s, u = t ? _.getNodeFromInstance(t) : window;
                            if (o(u) ? O ? a = c : s = p : I(u) ? F ? a = b : (a = g, s = m) : v(u) && (a = y), 
                            a) {
                                var l = a(e, t, n);
                                if (l) {
                                    return r(l, n, i);
                                }
                            }
                            s && s(e, u, t), // When blurring, set the value attribute for number inputs
                            "topBlur" === e && x(t, u);
                        }
                    };
                    t.exports = M;
                }, {
                    "114": 114,
                    "120": 120,
                    "122": 122,
                    "123": 123,
                    "138": 138,
                    "17": 17,
                    "20": 20,
                    "34": 34,
                    "82": 82,
                    "91": 91
                } ],
                8: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        // Special case for text components, which return [open, close] comments
                        // from getHostNode.
                        return Array.isArray(t) && (t = t[1]), t ? t.nextSibling : e.firstChild;
                    }
                    function o(e, t, n) {
                        c.insertTreeBefore(e, t, n);
                    }
                    function i(e, t, n) {
                        Array.isArray(t) ? s(e, t[0], t[1], n) : v(e, t, n);
                    }
                    function a(e, t) {
                        if (Array.isArray(t)) {
                            var n = t[1];
                            t = t[0], u(e, t, n), e.removeChild(n);
                        }
                        e.removeChild(t);
                    }
                    function s(e, t, n, r) {
                        for (var o = t; ;) {
                            var i = o.nextSibling;
                            if (v(e, o, r), o === n) break;
                            o = i;
                        }
                    }
                    function u(e, t, n) {
                        for (;;) {
                            var r = t.nextSibling;
                            if (r === n) // The closing comment is removed by ReactMultiChild.
                            break;
                            e.removeChild(r);
                        }
                    }
                    function l(e, t, n) {
                        var r = e.parentNode, o = e.nextSibling;
                        o === t ? // There are no text nodes between the opening and closing comments; insert
                        // a new one if stringText isn't empty.
                        n && v(r, document.createTextNode(n), o) : n ? (// Set the text content of the first node after the opening comment, and
                        // remove all following nodes up until the closing comment.
                        g(o, n), u(r, o, t)) : u(r, e, t), f.debugTool.onHostOperation({
                            instanceID: d.getInstanceFromNode(e)._debugID,
                            type: "replace text",
                            payload: n
                        });
                    }
                    var c = e(9), p = e(13), d = e(34), f = e(64), h = e(105), m = e(128), g = e(129), v = h(function(e, t, n) {
                        // We rely exclusively on `insertBefore(node, null)` instead of also using
                        // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
                        // we are careful to use `null`.)
                        e.insertBefore(t, n);
                    }), y = p.dangerouslyReplaceNodeWithMarkup;
                    y = function(e, t, n) {
                        if (p.dangerouslyReplaceNodeWithMarkup(e, t), 0 !== n._debugID) f.debugTool.onHostOperation({
                            instanceID: n._debugID,
                            type: "replace with",
                            payload: t.toString()
                        }); else {
                            var r = d.getInstanceFromNode(t.node);
                            0 !== r._debugID && f.debugTool.onHostOperation({
                                instanceID: r._debugID,
                                type: "mount",
                                payload: t.toString()
                            });
                        }
                    };
                    /**
 * Operations for updating with DOM children.
 */
                    var b = {
                        dangerouslyReplaceNodeWithMarkup: y,
                        replaceDelimitedText: l,
                        /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
                        processUpdates: function(e, t) {
                            for (var n = d.getInstanceFromNode(e)._debugID, s = 0; s < t.length; s++) {
                                var u = t[s];
                                switch (u.type) {
                                  case "INSERT_MARKUP":
                                    o(e, u.content, r(e, u.afterNode)), f.debugTool.onHostOperation({
                                        instanceID: n,
                                        type: "insert child",
                                        payload: {
                                            toIndex: u.toIndex,
                                            content: u.content.toString()
                                        }
                                    });
                                    break;

                                  case "MOVE_EXISTING":
                                    i(e, u.fromNode, r(e, u.afterNode)), f.debugTool.onHostOperation({
                                        instanceID: n,
                                        type: "move child",
                                        payload: {
                                            fromIndex: u.fromIndex,
                                            toIndex: u.toIndex
                                        }
                                    });
                                    break;

                                  case "SET_MARKUP":
                                    m(e, u.content), f.debugTool.onHostOperation({
                                        instanceID: n,
                                        type: "replace children",
                                        payload: u.content.toString()
                                    });
                                    break;

                                  case "TEXT_CONTENT":
                                    g(e, u.content), f.debugTool.onHostOperation({
                                        instanceID: n,
                                        type: "replace text",
                                        payload: u.content.toString()
                                    });
                                    break;

                                  case "REMOVE_NODE":
                                    a(e, u.fromNode), f.debugTool.onHostOperation({
                                        instanceID: n,
                                        type: "remove child",
                                        payload: {
                                            fromIndex: u.fromIndex
                                        }
                                    });
                                }
                            }
                        }
                    };
                    t.exports = b;
                }, {
                    "105": 105,
                    "128": 128,
                    "129": 129,
                    "13": 13,
                    "34": 34,
                    "64": 64,
                    "9": 9
                } ],
                9: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        if (h) {
                            var t = e.node, n = e.children;
                            if (n.length) for (var r = 0; r < n.length; r++) m(t, n[r], null); else null != e.html ? p(t, e.html) : null != e.text && f(t, e.text);
                        }
                    }
                    function o(e, t) {
                        e.parentNode.replaceChild(t.node, e), r(t);
                    }
                    function i(e, t) {
                        h ? e.children.push(t) : e.node.appendChild(t.node);
                    }
                    function a(e, t) {
                        h ? e.html = t : p(e.node, t);
                    }
                    function s(e, t) {
                        h ? e.text = t : f(e.node, t);
                    }
                    function u() {
                        return this.node.nodeName;
                    }
                    function l(e) {
                        return {
                            node: e,
                            children: [],
                            html: null,
                            text: null,
                            toString: u
                        };
                    }
                    var c = e(10), p = e(128), d = e(105), f = e(129), h = "undefined" != typeof document && "number" == typeof document.documentMode || "undefined" != typeof navigator && "string" == typeof navigator.userAgent && /\bEdge\/\d/.test(navigator.userAgent), m = d(function(e, t, n) {
                        // DocumentFragments aren't actually part of the DOM after insertion so
                        // appending children won't update the DOM. We need to ensure the fragment
                        // is properly populated first, breaking out of our lazy approach for just
                        // this level. Also, some <object> plugins (like Flash Player) will read
                        // <param> nodes immediately upon insertion into the DOM, so <object>
                        // must also be populated prior to insertion into the DOM.
                        11 === t.node.nodeType || 1 === t.node.nodeType && "object" === t.node.nodeName.toLowerCase() && (null == t.node.namespaceURI || t.node.namespaceURI === c.html) ? (r(t), 
                        e.insertBefore(t.node, n)) : (e.insertBefore(t.node, n), r(t));
                    });
                    l.insertTreeBefore = m, l.replaceChildWithTree = o, l.queueChild = i, l.queueHTML = a, 
                    l.queueText = s, t.exports = l;
                }, {
                    "10": 10,
                    "105": 105,
                    "128": 128,
                    "129": 129
                } ],
                10: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        html: "http://www.w3.org/1999/xhtml",
                        mathml: "http://www.w3.org/1998/Math/MathML",
                        svg: "http://www.w3.org/2000/svg"
                    };
                    t.exports = r;
                }, {} ],
                11: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        return (e & t) === t;
                    }
                    var o = (e(126), e(152)), i = {
                        /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
                        MUST_USE_PROPERTY: 1,
                        HAS_BOOLEAN_VALUE: 4,
                        HAS_NUMERIC_VALUE: 8,
                        HAS_POSITIVE_NUMERIC_VALUE: 24,
                        HAS_OVERLOADED_BOOLEAN_VALUE: 32,
                        /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
                        injectDOMPropertyConfig: function(e) {
                            var t = i, n = e.Properties || {}, a = e.DOMAttributeNamespaces || {}, u = e.DOMAttributeNames || {}, l = e.DOMPropertyNames || {}, c = e.DOMMutationMethods || {};
                            e.isCustomAttribute && s._isCustomAttributeFunctions.push(e.isCustomAttribute);
                            for (var p in n) {
                                s.properties.hasOwnProperty(p) && o(!1, "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.", p);
                                var d = p.toLowerCase(), f = n[p], h = {
                                    attributeName: d,
                                    attributeNamespace: null,
                                    propertyName: p,
                                    mutationMethod: null,
                                    mustUseProperty: r(f, t.MUST_USE_PROPERTY),
                                    hasBooleanValue: r(f, t.HAS_BOOLEAN_VALUE),
                                    hasNumericValue: r(f, t.HAS_NUMERIC_VALUE),
                                    hasPositiveNumericValue: r(f, t.HAS_POSITIVE_NUMERIC_VALUE),
                                    hasOverloadedBooleanValue: r(f, t.HAS_OVERLOADED_BOOLEAN_VALUE)
                                };
                                if (h.hasBooleanValue + h.hasNumericValue + h.hasOverloadedBooleanValue <= 1 || o(!1, "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s", p), 
                                s.getPossibleStandardName[d] = p, u.hasOwnProperty(p)) {
                                    var m = u[p];
                                    h.attributeName = m, s.getPossibleStandardName[m] = p;
                                }
                                a.hasOwnProperty(p) && (h.attributeNamespace = a[p]), l.hasOwnProperty(p) && (h.propertyName = l[p]), 
                                c.hasOwnProperty(p) && (h.mutationMethod = c[p]), s.properties[p] = h;
                            }
                        }
                    }, a = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", s = {
                        ID_ATTRIBUTE_NAME: "data-reactid",
                        ROOT_ATTRIBUTE_NAME: "data-reactroot",
                        ATTRIBUTE_NAME_START_CHAR: a,
                        ATTRIBUTE_NAME_CHAR: a + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",
                        /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
                        properties: {},
                        /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
                        getPossibleStandardName: {
                            autofocus: "autoFocus"
                        },
                        /**
   * All of the isCustomAttribute() functions that have been injected.
   */
                        _isCustomAttributeFunctions: [],
                        /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
                        isCustomAttribute: function(e) {
                            for (var t = 0; t < s._isCustomAttributeFunctions.length; t++) {
                                if ((0, s._isCustomAttributeFunctions[t])(e)) return !0;
                            }
                            return !1;
                        },
                        injection: i
                    };
                    t.exports = s;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                12: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        return !!d.hasOwnProperty(e) || !p.hasOwnProperty(e) && (c.test(e) ? (d[e] = !0, 
                        !0) : (p[e] = !0, l(!1, "Invalid attribute name: `%s`", e), !1));
                    }
                    function o(e, t) {
                        return null == t || e.hasBooleanValue && !t || e.hasNumericValue && isNaN(t) || e.hasPositiveNumericValue && t < 1 || e.hasOverloadedBooleanValue && !1 === t;
                    }
                    var i = e(11), a = e(34), s = e(64), u = e(125), l = e(159), c = new RegExp("^[" + i.ATTRIBUTE_NAME_START_CHAR + "][" + i.ATTRIBUTE_NAME_CHAR + "]*$"), p = {}, d = {}, f = {
                        /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
                        createMarkupForID: function(e) {
                            return i.ID_ATTRIBUTE_NAME + "=" + u(e);
                        },
                        setAttributeForID: function(e, t) {
                            e.setAttribute(i.ID_ATTRIBUTE_NAME, t);
                        },
                        createMarkupForRoot: function() {
                            return i.ROOT_ATTRIBUTE_NAME + '=""';
                        },
                        setAttributeForRoot: function(e) {
                            e.setAttribute(i.ROOT_ATTRIBUTE_NAME, "");
                        },
                        /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
                        createMarkupForProperty: function(e, t) {
                            var n = i.properties.hasOwnProperty(e) ? i.properties[e] : null;
                            if (n) {
                                if (o(n, t)) return "";
                                var r = n.attributeName;
                                return n.hasBooleanValue || n.hasOverloadedBooleanValue && !0 === t ? r + '=""' : r + "=" + u(t);
                            }
                            return i.isCustomAttribute(e) ? null == t ? "" : e + "=" + u(t) : null;
                        },
                        /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
                        createMarkupForCustomAttribute: function(e, t) {
                            return r(e) && null != t ? e + "=" + u(t) : "";
                        },
                        /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
                        setValueForProperty: function(e, t, n) {
                            var r = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
                            if (r) {
                                var u = r.mutationMethod;
                                if (u) u(e, n); else {
                                    if (o(r, n)) return void this.deleteValueForProperty(e, t);
                                    if (r.mustUseProperty) // Contrary to `setAttribute`, object properties are properly
                                    // `toString`ed by IE8/9.
                                    e[r.propertyName] = n; else {
                                        var l = r.attributeName, c = r.attributeNamespace;
                                        // `setAttribute` with objects becomes only `[object]` in IE8/9,
                                        // ('' + value) makes it output the correct toString()-value.
                                        c ? e.setAttributeNS(c, l, "" + n) : r.hasBooleanValue || r.hasOverloadedBooleanValue && !0 === n ? e.setAttribute(l, "") : e.setAttribute(l, "" + n);
                                    }
                                }
                            } else if (i.isCustomAttribute(t)) return void f.setValueForAttribute(e, t, n);
                            var p = {};
                            p[t] = n, s.debugTool.onHostOperation({
                                instanceID: a.getInstanceFromNode(e)._debugID,
                                type: "update attribute",
                                payload: p
                            });
                        },
                        setValueForAttribute: function(e, t, n) {
                            if (r(t)) {
                                null == n ? e.removeAttribute(t) : e.setAttribute(t, "" + n);
                                var o = {};
                                o[t] = n, s.debugTool.onHostOperation({
                                    instanceID: a.getInstanceFromNode(e)._debugID,
                                    type: "update attribute",
                                    payload: o
                                });
                            }
                        },
                        /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
                        deleteValueForAttribute: function(e, t) {
                            e.removeAttribute(t), s.debugTool.onHostOperation({
                                instanceID: a.getInstanceFromNode(e)._debugID,
                                type: "remove attribute",
                                payload: t
                            });
                        },
                        /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
                        deleteValueForProperty: function(e, t) {
                            var n = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
                            if (n) {
                                var r = n.mutationMethod;
                                if (r) r(e, void 0); else if (n.mustUseProperty) {
                                    var o = n.propertyName;
                                    n.hasBooleanValue ? e[o] = !1 : e[o] = "";
                                } else e.removeAttribute(n.attributeName);
                            } else i.isCustomAttribute(t) && e.removeAttribute(t);
                            s.debugTool.onHostOperation({
                                instanceID: a.getInstanceFromNode(e)._debugID,
                                type: "remove attribute",
                                payload: t
                            });
                        }
                    };
                    t.exports = f;
                }, {
                    "11": 11,
                    "125": 125,
                    "159": 159,
                    "34": 34,
                    "64": 64
                } ],
                13: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = (e(126), e(9)), o = e(138), i = e(143), a = e(144), s = e(152), u = {
                        /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
                        dangerouslyReplaceNodeWithMarkup: function(e, t) {
                            if (o.canUseDOM || s(!1, "dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering."), 
                            t || s(!1, "dangerouslyReplaceNodeWithMarkup(...): Missing markup."), "HTML" === e.nodeName && s(!1, "dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString()."), 
                            "string" == typeof t) {
                                var n = i(t, a)[0];
                                e.parentNode.replaceChild(n, e);
                            } else r.replaceChildWithTree(e, t);
                        }
                    };
                    t.exports = u;
                }, {
                    "126": 126,
                    "138": 138,
                    "143": 143,
                    "144": 144,
                    "152": 152,
                    "9": 9
                } ],
                14: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
                    var r = [ "ResponderEventPlugin", "SimpleEventPlugin", "TapEventPlugin", "EnterLeaveEventPlugin", "ChangeEventPlugin", "SelectEventPlugin", "BeforeInputEventPlugin" ];
                    t.exports = r;
                }, {} ],
                15: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(20), o = e(34), i = e(95), a = {
                        mouseEnter: {
                            registrationName: "onMouseEnter",
                            dependencies: [ "topMouseOut", "topMouseOver" ]
                        },
                        mouseLeave: {
                            registrationName: "onMouseLeave",
                            dependencies: [ "topMouseOut", "topMouseOver" ]
                        }
                    }, s = {
                        eventTypes: a,
                        /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
                        extractEvents: function(e, t, n, s) {
                            if ("topMouseOver" === e && (n.relatedTarget || n.fromElement)) return null;
                            if ("topMouseOut" !== e && "topMouseOver" !== e) // Must not be a mouse in or mouse out - ignoring.
                            return null;
                            var u;
                            if (s.window === s) // `nativeEventTarget` is probably a window object.
                            u = s; else {
                                // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                                var l = s.ownerDocument;
                                u = l ? l.defaultView || l.parentWindow : window;
                            }
                            var c, p;
                            if ("topMouseOut" === e) {
                                c = t;
                                var d = n.relatedTarget || n.toElement;
                                p = d ? o.getClosestInstanceFromNode(d) : null;
                            } else // Moving to a node from outside the window.
                            c = null, p = t;
                            if (c === p) // Nothing pertains to our managed components.
                            return null;
                            var f = null == c ? u : o.getNodeFromInstance(c), h = null == p ? u : o.getNodeFromInstance(p), m = i.getPooled(a.mouseLeave, c, n, s);
                            m.type = "mouseleave", m.target = f, m.relatedTarget = h;
                            var g = i.getPooled(a.mouseEnter, p, n, s);
                            return g.type = "mouseenter", g.target = h, g.relatedTarget = f, r.accumulateEnterLeaveDispatches(m, g, c, p), 
                            [ m, g ];
                        }
                    };
                    t.exports = s;
                }, {
                    "20": 20,
                    "34": 34,
                    "95": 95
                } ],
                16: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Types of raw signals from the browser caught at the top level.
 */
                    var r = {
                        topAbort: null,
                        topAnimationEnd: null,
                        topAnimationIteration: null,
                        topAnimationStart: null,
                        topBlur: null,
                        topCanPlay: null,
                        topCanPlayThrough: null,
                        topChange: null,
                        topClick: null,
                        topCompositionEnd: null,
                        topCompositionStart: null,
                        topCompositionUpdate: null,
                        topContextMenu: null,
                        topCopy: null,
                        topCut: null,
                        topDoubleClick: null,
                        topDrag: null,
                        topDragEnd: null,
                        topDragEnter: null,
                        topDragExit: null,
                        topDragLeave: null,
                        topDragOver: null,
                        topDragStart: null,
                        topDrop: null,
                        topDurationChange: null,
                        topEmptied: null,
                        topEncrypted: null,
                        topEnded: null,
                        topError: null,
                        topFocus: null,
                        topInput: null,
                        topInvalid: null,
                        topKeyDown: null,
                        topKeyPress: null,
                        topKeyUp: null,
                        topLoad: null,
                        topLoadedData: null,
                        topLoadedMetadata: null,
                        topLoadStart: null,
                        topMouseDown: null,
                        topMouseMove: null,
                        topMouseOut: null,
                        topMouseOver: null,
                        topMouseUp: null,
                        topPaste: null,
                        topPause: null,
                        topPlay: null,
                        topPlaying: null,
                        topProgress: null,
                        topRateChange: null,
                        topReset: null,
                        topScroll: null,
                        topSeeked: null,
                        topSeeking: null,
                        topSelectionChange: null,
                        topStalled: null,
                        topSubmit: null,
                        topSuspend: null,
                        topTextInput: null,
                        topTimeUpdate: null,
                        topTouchCancel: null,
                        topTouchEnd: null,
                        topTouchMove: null,
                        topTouchStart: null,
                        topTransitionEnd: null,
                        topVolumeChange: null,
                        topWaiting: null,
                        topWheel: null
                    }, o = {
                        topLevelTypes: r
                    };
                    t.exports = o;
                }, {} ],
                17: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        return "button" === e || "input" === e || "select" === e || "textarea" === e;
                    }
                    function o(e, t, n) {
                        switch (e) {
                          case "onClick":
                          case "onClickCapture":
                          case "onDoubleClick":
                          case "onDoubleClickCapture":
                          case "onMouseDown":
                          case "onMouseDownCapture":
                          case "onMouseMove":
                          case "onMouseMoveCapture":
                          case "onMouseUp":
                          case "onMouseUpCapture":
                            return !(!n.disabled || !r(t));

                          default:
                            return !1;
                        }
                    }
                    var i = (e(126), e(18)), a = e(19), s = e(55), u = e(102), l = e(110), c = e(152), p = {}, d = null, f = function(e, t) {
                        e && (a.executeDispatchesInOrder(e, t), e.isPersistent() || e.constructor.release(e));
                    }, h = function(e) {
                        return f(e, !0);
                    }, m = function(e) {
                        return f(e, !1);
                    }, g = function(e) {
                        // Prevents V8 performance issue:
                        // https://github.com/facebook/react/pull/7232
                        return "." + e._rootNodeID;
                    }, v = {
                        /**
   * Methods for injecting dependencies.
   */
                        injection: {
                            /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
                            injectEventPluginOrder: i.injectEventPluginOrder,
                            /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
                            injectEventPluginsByName: i.injectEventPluginsByName
                        },
                        /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
                        putListener: function(e, t, n) {
                            "function" != typeof n && c(!1, "Expected %s listener to be a function, instead got type %s", t, typeof n);
                            var r = g(e);
                            (p[t] || (p[t] = {}))[r] = n;
                            var o = i.registrationNameModules[t];
                            o && o.didPutListener && o.didPutListener(e, t, n);
                        },
                        /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
                        getListener: function(e, t) {
                            // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
                            // live here; needs to be moved to a better place soon
                            var n = p[t];
                            if (o(t, e._currentElement.type, e._currentElement.props)) return null;
                            var r = g(e);
                            return n && n[r];
                        },
                        /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
                        deleteListener: function(e, t) {
                            var n = i.registrationNameModules[t];
                            n && n.willDeleteListener && n.willDeleteListener(e, t);
                            var r = p[t];
                            // TODO: This should never be null -- when is it?
                            if (r) {
                                delete r[g(e)];
                            }
                        },
                        /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
                        deleteAllListeners: function(e) {
                            var t = g(e);
                            for (var n in p) if (p.hasOwnProperty(n) && p[n][t]) {
                                var r = i.registrationNameModules[n];
                                r && r.willDeleteListener && r.willDeleteListener(e, n), delete p[n][t];
                            }
                        },
                        /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
                        extractEvents: function(e, t, n, r) {
                            for (var o, a = i.plugins, s = 0; s < a.length; s++) {
                                // Not every plugin in the ordering may be loaded at runtime.
                                var l = a[s];
                                if (l) {
                                    var c = l.extractEvents(e, t, n, r);
                                    c && (o = u(o, c));
                                }
                            }
                            return o;
                        },
                        /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
                        enqueueEvents: function(e) {
                            e && (d = u(d, e));
                        },
                        /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
                        processEventQueue: function(e) {
                            // Set `eventQueue` to null before processing it so that we can tell if more
                            // events get enqueued while processing.
                            var t = d;
                            d = null, e ? l(t, h) : l(t, m), d && c(!1, "processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."), 
                            // This would be a good time to rethrow if any of the event handlers threw.
                            s.rethrowCaughtError();
                        },
                        /**
   * These are needed for tests only. Do not use!
   */
                        __purge: function() {
                            p = {};
                        },
                        __getListenerBank: function() {
                            return p;
                        }
                    };
                    t.exports = v;
                }, {
                    "102": 102,
                    "110": 110,
                    "126": 126,
                    "152": 152,
                    "18": 18,
                    "19": 19,
                    "55": 55
                } ],
                18: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
                    function r() {
                        if (s) for (var e in u) {
                            var t = u[e], n = s.indexOf(e);
                            if (n > -1 || a(!1, "EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.", e), 
                            !l.plugins[n]) {
                                t.extractEvents || a(!1, "EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.", e), 
                                l.plugins[n] = t;
                                var r = t.eventTypes;
                                for (var i in r) o(r[i], t, i) || a(!1, "EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.", i, e);
                            }
                        }
                    }
                    /**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
                    function o(e, t, n) {
                        l.eventNameDispatchConfigs.hasOwnProperty(n) && a(!1, "EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.", n), 
                        l.eventNameDispatchConfigs[n] = e;
                        var r = e.phasedRegistrationNames;
                        if (r) {
                            for (var o in r) if (r.hasOwnProperty(o)) {
                                var s = r[o];
                                i(s, t, n);
                            }
                            return !0;
                        }
                        return !!e.registrationName && (i(e.registrationName, t, n), !0);
                    }
                    /**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
                    function i(e, t, n) {
                        l.registrationNameModules[e] && a(!1, "EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.", e), 
                        l.registrationNameModules[e] = t, l.registrationNameDependencies[e] = t.eventTypes[n].dependencies;
                        var r = e.toLowerCase();
                        l.possibleRegistrationNames[r] = e, "onDoubleClick" === e && (l.possibleRegistrationNames.ondblclick = e);
                    }
                    var a = (e(126), e(152)), s = null, u = {}, l = {
                        /**
   * Ordered list of injected plugins.
   */
                        plugins: [],
                        /**
   * Mapping from event name to dispatch config
   */
                        eventNameDispatchConfigs: {},
                        /**
   * Mapping from registration name to plugin module
   */
                        registrationNameModules: {},
                        /**
   * Mapping from registration name to event name
   */
                        registrationNameDependencies: {},
                        /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
                        possibleRegistrationNames: {},
                        // Trust the developer to only use possibleRegistrationNames in __DEV__
                        /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
                        injectEventPluginOrder: function(e) {
                            s && a(!1, "EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."), 
                            // Clone the ordering so it cannot be dynamically mutated.
                            s = Array.prototype.slice.call(e), r();
                        },
                        /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
                        injectEventPluginsByName: function(e) {
                            var t = !1;
                            for (var n in e) if (e.hasOwnProperty(n)) {
                                var o = e[n];
                                u.hasOwnProperty(n) && u[n] === o || (u[n] && a(!1, "EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.", n), 
                                u[n] = o, t = !0);
                            }
                            t && r();
                        },
                        /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
                        getPluginModuleForEvent: function(e) {
                            var t = e.dispatchConfig;
                            if (t.registrationName) return l.registrationNameModules[t.registrationName] || null;
                            if (void 0 !== t.phasedRegistrationNames) {
                                // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
                                // that it is not undefined.
                                var n = t.phasedRegistrationNames;
                                for (var r in n) if (n.hasOwnProperty(r)) {
                                    var o = l.registrationNameModules[n[r]];
                                    if (o) return o;
                                }
                            }
                            return null;
                        },
                        /**
   * Exposed for unit testing.
   * @private
   */
                        _resetEventPlugins: function() {
                            s = null;
                            for (var e in u) u.hasOwnProperty(e) && delete u[e];
                            l.plugins.length = 0;
                            var t = l.eventNameDispatchConfigs;
                            for (var n in t) t.hasOwnProperty(n) && delete t[n];
                            var r = l.registrationNameModules;
                            for (var o in r) r.hasOwnProperty(o) && delete r[o];
                            var i = l.possibleRegistrationNames;
                            for (var a in i) i.hasOwnProperty(a) && delete i[a];
                        }
                    };
                    t.exports = l;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                19: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        return "topMouseUp" === e || "topTouchEnd" === e || "topTouchCancel" === e;
                    }
                    function o(e) {
                        return "topMouseMove" === e || "topTouchMove" === e;
                    }
                    function i(e) {
                        return "topMouseDown" === e || "topTouchStart" === e;
                    }
                    /**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
                    function a(e, t, n, r) {
                        var o = e.type || "unknown-event";
                        e.currentTarget = b.getNodeFromInstance(r), t ? m.invokeGuardedCallbackWithCatch(o, n, e) : m.invokeGuardedCallback(o, n, e), 
                        e.currentTarget = null;
                    }
                    /**
 * Standard/simple iteration through an event's collected dispatches.
 */
                    function s(e, t) {
                        var n = e._dispatchListeners, r = e._dispatchInstances;
                        if (h(e), Array.isArray(n)) for (var o = 0; o < n.length && !e.isPropagationStopped(); o++) // Listeners and Instances are two parallel arrays that are always in sync.
                        a(e, t, n[o], r[o]); else n && a(e, t, n, r);
                        e._dispatchListeners = null, e._dispatchInstances = null;
                    }
                    /**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
                    function u(e) {
                        var t = e._dispatchListeners, n = e._dispatchInstances;
                        if (h(e), Array.isArray(t)) {
                            for (var r = 0; r < t.length && !e.isPropagationStopped(); r++) // Listeners and Instances are two parallel arrays that are always in sync.
                            if (t[r](e, n[r])) return n[r];
                        } else if (t && t(e, n)) return n;
                        return null;
                    }
                    /**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
                    function l(e) {
                        var t = u(e);
                        return e._dispatchInstances = null, e._dispatchListeners = null, t;
                    }
                    /**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
                    function c(e) {
                        h(e);
                        var t = e._dispatchListeners, n = e._dispatchInstances;
                        Array.isArray(t) && g(!1, "executeDirectDispatch(...): Invalid `event`."), e.currentTarget = t ? b.getNodeFromInstance(n) : null;
                        var r = t ? t(e) : null;
                        return e.currentTarget = null, e._dispatchListeners = null, e._dispatchInstances = null, 
                        r;
                    }
                    /**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
                    function p(e) {
                        return !!e._dispatchListeners;
                    }
                    var d, f, h, m = (e(126), e(55)), g = e(152), v = e(159), y = {
                        injectComponentTree: function(e) {
                            d = e, v(e && e.getNodeFromInstance && e.getInstanceFromNode, "EventPluginUtils.injection.injectComponentTree(...): Injected module is missing getNodeFromInstance or getInstanceFromNode.");
                        },
                        injectTreeTraversal: function(e) {
                            f = e, v(e && e.isAncestor && e.getLowestCommonAncestor, "EventPluginUtils.injection.injectTreeTraversal(...): Injected module is missing isAncestor or getLowestCommonAncestor.");
                        }
                    };
                    h = function(e) {
                        var t = e._dispatchListeners, n = e._dispatchInstances, r = Array.isArray(t), o = r ? t.length : t ? 1 : 0, i = Array.isArray(n), a = i ? n.length : n ? 1 : 0;
                        v(i === r && a === o, "EventPluginUtils: Invalid `event`.");
                    };
                    /**
 * General utilities that are useful in creating custom Event Plugins.
 */
                    var b = {
                        isEndish: r,
                        isMoveish: o,
                        isStartish: i,
                        executeDirectDispatch: c,
                        executeDispatchesInOrder: s,
                        executeDispatchesInOrderStopAtTrue: l,
                        hasDispatches: p,
                        getInstanceFromNode: function(e) {
                            return d.getInstanceFromNode(e);
                        },
                        getNodeFromInstance: function(e) {
                            return d.getNodeFromInstance(e);
                        },
                        isAncestor: function(e, t) {
                            return f.isAncestor(e, t);
                        },
                        getLowestCommonAncestor: function(e, t) {
                            return f.getLowestCommonAncestor(e, t);
                        },
                        getParentInstance: function(e) {
                            return f.getParentInstance(e);
                        },
                        traverseTwoPhase: function(e, t, n) {
                            return f.traverseTwoPhase(e, t, n);
                        },
                        traverseEnterLeave: function(e, t, n, r, o) {
                            return f.traverseEnterLeave(e, t, n, r, o);
                        },
                        injection: y
                    };
                    t.exports = b;
                }, {
                    "126": 126,
                    "152": 152,
                    "159": 159,
                    "55": 55
                } ],
                20: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
                    function r(e, t, n) {
                        var r = t.dispatchConfig.phasedRegistrationNames[n];
                        return y(e, r);
                    }
                    /**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
                    function o(e, t, n) {
                        v(e, "Dispatching inst must not be null");
                        var o = r(e, n, t);
                        o && (n._dispatchListeners = m(n._dispatchListeners, o), n._dispatchInstances = m(n._dispatchInstances, e));
                    }
                    /**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
                    function i(e) {
                        e && e.dispatchConfig.phasedRegistrationNames && h.traverseTwoPhase(e._targetInst, o, e);
                    }
                    /**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
                    function a(e) {
                        if (e && e.dispatchConfig.phasedRegistrationNames) {
                            var t = e._targetInst, n = t ? h.getParentInstance(t) : null;
                            h.traverseTwoPhase(n, o, e);
                        }
                    }
                    /**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
                    function s(e, t, n) {
                        if (n && n.dispatchConfig.registrationName) {
                            var r = n.dispatchConfig.registrationName, o = y(e, r);
                            o && (n._dispatchListeners = m(n._dispatchListeners, o), n._dispatchInstances = m(n._dispatchInstances, e));
                        }
                    }
                    /**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
                    function u(e) {
                        e && e.dispatchConfig.registrationName && s(e._targetInst, null, e);
                    }
                    function l(e) {
                        g(e, i);
                    }
                    function c(e) {
                        g(e, a);
                    }
                    function p(e, t, n, r) {
                        h.traverseEnterLeave(n, r, s, e, t);
                    }
                    function d(e) {
                        g(e, u);
                    }
                    var f = e(17), h = e(19), m = e(102), g = e(110), v = e(159), y = f.getListener, b = {
                        accumulateTwoPhaseDispatches: l,
                        accumulateTwoPhaseDispatchesSkipTarget: c,
                        accumulateDirectDispatches: d,
                        accumulateEnterLeaveDispatches: p
                    };
                    t.exports = b;
                }, {
                    "102": 102,
                    "110": 110,
                    "159": 159,
                    "17": 17,
                    "19": 19
                } ],
                21: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
                    function r(e) {
                        this._root = e, this._startText = this.getText(), this._fallbackText = null;
                    }
                    var o = e(160), i = e(25), a = e(118);
                    o(r.prototype, {
                        destructor: function() {
                            this._root = null, this._startText = null, this._fallbackText = null;
                        },
                        /**
   * Get current text of input.
   *
   * @return {string}
   */
                        getText: function() {
                            return "value" in this._root ? this._root.value : this._root[a()];
                        },
                        /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
                        getData: function() {
                            if (this._fallbackText) return this._fallbackText;
                            var e, t, n = this._startText, r = n.length, o = this.getText(), i = o.length;
                            for (e = 0; e < r && n[e] === o[e]; e++) ;
                            var a = r - e;
                            for (t = 1; t <= a && n[r - t] === o[i - t]; t++) ;
                            var s = t > 1 ? 1 - t : void 0;
                            return this._fallbackText = o.slice(e, s), this._fallbackText;
                        }
                    }), i.addPoolingTo(r), t.exports = r;
                }, {
                    "118": 118,
                    "160": 160,
                    "25": 25
                } ],
                22: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(11), o = r.injection.MUST_USE_PROPERTY, i = r.injection.HAS_BOOLEAN_VALUE, a = r.injection.HAS_NUMERIC_VALUE, s = r.injection.HAS_POSITIVE_NUMERIC_VALUE, u = r.injection.HAS_OVERLOADED_BOOLEAN_VALUE, l = {
                        isCustomAttribute: RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + r.ATTRIBUTE_NAME_CHAR + "]*$")),
                        Properties: {
                            /**
     * Standard Properties
     */
                            accept: 0,
                            acceptCharset: 0,
                            accessKey: 0,
                            action: 0,
                            allowFullScreen: i,
                            allowTransparency: 0,
                            alt: 0,
                            // specifies target context for links with `preload` type
                            as: 0,
                            async: i,
                            autoComplete: 0,
                            // autoFocus is polyfilled/normalized by AutoFocusUtils
                            // autoFocus: HAS_BOOLEAN_VALUE,
                            autoPlay: i,
                            capture: i,
                            cellPadding: 0,
                            cellSpacing: 0,
                            charSet: 0,
                            challenge: 0,
                            checked: o | i,
                            cite: 0,
                            classID: 0,
                            className: 0,
                            cols: s,
                            colSpan: 0,
                            content: 0,
                            contentEditable: 0,
                            contextMenu: 0,
                            controls: i,
                            coords: 0,
                            crossOrigin: 0,
                            data: 0,
                            // For `<object />` acts as `src`.
                            dateTime: 0,
                            default: i,
                            defer: i,
                            dir: 0,
                            disabled: i,
                            download: u,
                            draggable: 0,
                            encType: 0,
                            form: 0,
                            formAction: 0,
                            formEncType: 0,
                            formMethod: 0,
                            formNoValidate: i,
                            formTarget: 0,
                            frameBorder: 0,
                            headers: 0,
                            height: 0,
                            hidden: i,
                            high: 0,
                            href: 0,
                            hrefLang: 0,
                            htmlFor: 0,
                            httpEquiv: 0,
                            icon: 0,
                            id: 0,
                            inputMode: 0,
                            integrity: 0,
                            is: 0,
                            keyParams: 0,
                            keyType: 0,
                            kind: 0,
                            label: 0,
                            lang: 0,
                            list: 0,
                            loop: i,
                            low: 0,
                            manifest: 0,
                            marginHeight: 0,
                            marginWidth: 0,
                            max: 0,
                            maxLength: 0,
                            media: 0,
                            mediaGroup: 0,
                            method: 0,
                            min: 0,
                            minLength: 0,
                            // Caution; `option.selected` is not updated if `select.multiple` is
                            // disabled with `removeAttribute`.
                            multiple: o | i,
                            muted: o | i,
                            name: 0,
                            nonce: 0,
                            noValidate: i,
                            open: i,
                            optimum: 0,
                            pattern: 0,
                            placeholder: 0,
                            playsInline: i,
                            poster: 0,
                            preload: 0,
                            profile: 0,
                            radioGroup: 0,
                            readOnly: i,
                            referrerPolicy: 0,
                            rel: 0,
                            required: i,
                            reversed: i,
                            role: 0,
                            rows: s,
                            rowSpan: a,
                            sandbox: 0,
                            scope: 0,
                            scoped: i,
                            scrolling: 0,
                            seamless: i,
                            selected: o | i,
                            shape: 0,
                            size: s,
                            sizes: 0,
                            span: s,
                            spellCheck: 0,
                            src: 0,
                            srcDoc: 0,
                            srcLang: 0,
                            srcSet: 0,
                            start: a,
                            step: 0,
                            style: 0,
                            summary: 0,
                            tabIndex: 0,
                            target: 0,
                            title: 0,
                            // Setting .type throws on non-<input> tags
                            type: 0,
                            useMap: 0,
                            value: 0,
                            width: 0,
                            wmode: 0,
                            wrap: 0,
                            /**
     * RDFa Properties
     */
                            about: 0,
                            datatype: 0,
                            inlist: 0,
                            prefix: 0,
                            // property is also supported for OpenGraph in meta tags.
                            property: 0,
                            resource: 0,
                            typeof: 0,
                            vocab: 0,
                            /**
     * Non-standard Properties
     */
                            // autoCapitalize and autoCorrect are supported in Mobile Safari for
                            // keyboard hints.
                            autoCapitalize: 0,
                            autoCorrect: 0,
                            // autoSave allows WebKit/Blink to persist values of input fields on page reloads
                            autoSave: 0,
                            // color is for Safari mask-icon link
                            color: 0,
                            // itemProp, itemScope, itemType are for
                            // Microdata support. See http://schema.org/docs/gs.html
                            itemProp: 0,
                            itemScope: i,
                            itemType: 0,
                            // itemID and itemRef are for Microdata support as well but
                            // only specified in the WHATWG spec document. See
                            // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
                            itemID: 0,
                            itemRef: 0,
                            // results show looking glass icon and recent searches on input
                            // search fields in WebKit/Blink
                            results: 0,
                            // IE-only attribute that specifies security restrictions on an iframe
                            // as an alternative to the sandbox attribute on IE<10
                            security: 0,
                            // IE-only attribute that controls focus behavior
                            unselectable: 0
                        },
                        DOMAttributeNames: {
                            acceptCharset: "accept-charset",
                            className: "class",
                            htmlFor: "for",
                            httpEquiv: "http-equiv"
                        },
                        DOMPropertyNames: {},
                        DOMMutationMethods: {
                            value: function(e, t) {
                                if (null == t) return e.removeAttribute("value");
                                // Number inputs get special treatment due to some edge cases in
                                // Chrome. Let everything else assign the value attribute as normal.
                                // https://github.com/facebook/react/issues/7253#issuecomment-236074326
                                "number" !== e.type || !1 === e.hasAttribute("value") ? e.setAttribute("value", "" + t) : e.validity && !e.validity.badInput && e.ownerDocument.activeElement !== e && // Don't assign an attribute if validation reports bad
                                // input. Chrome will clear the value. Additionally, don't
                                // operate on inputs that have focus, otherwise Chrome might
                                // strip off trailing decimal places and cause the user's
                                // cursor position to jump to the beginning of the input.
                                //
                                // In ReactDOMInput, we have an onBlur event that will trigger
                                // this function again when focus is lost.
                                e.setAttribute("value", "" + t);
                            }
                        }
                    };
                    t.exports = l;
                }, {
                    "11": 11
                } ],
                23: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
                    function r(e) {
                        var t = {
                            "=": "=0",
                            ":": "=2"
                        };
                        return "$" + ("" + e).replace(/[=:]/g, function(e) {
                            return t[e];
                        });
                    }
                    /**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
                    function o(e) {
                        var t = /(=0|=2)/g, n = {
                            "=0": "=",
                            "=2": ":"
                        };
                        return ("" + ("." === e[0] && "$" === e[1] ? e.substring(2) : e.substring(1))).replace(t, function(e) {
                            return n[e];
                        });
                    }
                    var i = {
                        escape: r,
                        unescape: o
                    };
                    t.exports = i;
                }, {} ],
                24: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        null != e.checkedLink && null != e.valueLink && p(!1, "Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa.");
                    }
                    function o(e) {
                        r(e), (null != e.value || null != e.onChange) && p(!1, "Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink.");
                    }
                    function i(e) {
                        r(e), (null != e.checked || null != e.onChange) && p(!1, "Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink");
                    }
                    function a(e) {
                        if (e) {
                            var t = e.getName();
                            if (t) return " Check the render method of `" + t + "`.";
                        }
                        return "";
                    }
                    var s = (e(126), e(73)), u = e(162), l = e(135), c = u(l.isValidElement), p = e(152), d = e(159), f = {
                        button: !0,
                        checkbox: !0,
                        image: !0,
                        hidden: !0,
                        radio: !0,
                        reset: !0,
                        submit: !0
                    }, h = {
                        value: function(e, t, n) {
                            return !e[t] || f[e.type] || e.onChange || e.readOnly || e.disabled ? null : new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
                        },
                        checked: function(e, t, n) {
                            return !e[t] || e.onChange || e.readOnly || e.disabled ? null : new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
                        },
                        onChange: c.func
                    }, m = {}, g = {
                        checkPropTypes: function(e, t, n) {
                            for (var r in h) {
                                if (h.hasOwnProperty(r)) var o = h[r](t, r, e, "prop", null, s);
                                if (o instanceof Error && !(o.message in m)) {
                                    // Only monitor this failure once because there tends to be a lot of the
                                    // same error.
                                    m[o.message] = !0;
                                    var i = a(n);
                                    d(!1, "Failed form propType: %s%s", o.message, i);
                                }
                            }
                        },
                        /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
                        getValue: function(e) {
                            return e.valueLink ? (o(e), e.valueLink.value) : e.value;
                        },
                        /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
                        getChecked: function(e) {
                            return e.checkedLink ? (i(e), e.checkedLink.value) : e.checked;
                        },
                        /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
                        executeOnChange: function(e, t) {
                            return e.valueLink ? (o(e), e.valueLink.requestChange(t.target.value)) : e.checkedLink ? (i(e), 
                            e.checkedLink.requestChange(t.target.checked)) : e.onChange ? e.onChange.call(void 0, t) : void 0;
                        }
                    };
                    t.exports = g;
                }, {
                    "126": 126,
                    "135": 135,
                    "152": 152,
                    "159": 159,
                    "162": 162,
                    "73": 73
                } ],
                25: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = (e(126), e(152)), o = function(e) {
                        var t = this;
                        if (t.instancePool.length) {
                            var n = t.instancePool.pop();
                            return t.call(n, e), n;
                        }
                        return new t(e);
                    }, i = function(e, t) {
                        var n = this;
                        if (n.instancePool.length) {
                            var r = n.instancePool.pop();
                            return n.call(r, e, t), r;
                        }
                        return new n(e, t);
                    }, a = function(e, t, n) {
                        var r = this;
                        if (r.instancePool.length) {
                            var o = r.instancePool.pop();
                            return r.call(o, e, t, n), o;
                        }
                        return new r(e, t, n);
                    }, s = function(e, t, n, r) {
                        var o = this;
                        if (o.instancePool.length) {
                            var i = o.instancePool.pop();
                            return o.call(i, e, t, n, r), i;
                        }
                        return new o(e, t, n, r);
                    }, u = function(e) {
                        var t = this;
                        e instanceof t || r(!1, "Trying to release an instance into a pool of a different type."), 
                        e.destructor(), t.instancePool.length < t.poolSize && t.instancePool.push(e);
                    }, l = o, c = function(e, t) {
                        // Casting as any so that flow ignores the actual implementation and trusts
                        // it to match the type we declared
                        var n = e;
                        return n.instancePool = [], n.getPooled = t || l, n.poolSize || (n.poolSize = 10), 
                        n.release = u, n;
                    }, p = {
                        addPoolingTo: c,
                        oneArgumentPooler: o,
                        twoArgumentPooler: i,
                        threeArgumentPooler: a,
                        fourArgumentPooler: s
                    };
                    t.exports = p;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                26: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
                        // directly.
                        return Object.prototype.hasOwnProperty.call(e, m) || (e[m] = f++, p[e[m]] = {}), 
                        p[e[m]];
                    }
                    var o, i = e(160), a = e(18), s = e(56), u = e(101), l = e(119), c = e(122), p = {}, d = !1, f = 0, h = {
                        topAbort: "abort",
                        topAnimationEnd: l("animationend") || "animationend",
                        topAnimationIteration: l("animationiteration") || "animationiteration",
                        topAnimationStart: l("animationstart") || "animationstart",
                        topBlur: "blur",
                        topCanPlay: "canplay",
                        topCanPlayThrough: "canplaythrough",
                        topChange: "change",
                        topClick: "click",
                        topCompositionEnd: "compositionend",
                        topCompositionStart: "compositionstart",
                        topCompositionUpdate: "compositionupdate",
                        topContextMenu: "contextmenu",
                        topCopy: "copy",
                        topCut: "cut",
                        topDoubleClick: "dblclick",
                        topDrag: "drag",
                        topDragEnd: "dragend",
                        topDragEnter: "dragenter",
                        topDragExit: "dragexit",
                        topDragLeave: "dragleave",
                        topDragOver: "dragover",
                        topDragStart: "dragstart",
                        topDrop: "drop",
                        topDurationChange: "durationchange",
                        topEmptied: "emptied",
                        topEncrypted: "encrypted",
                        topEnded: "ended",
                        topError: "error",
                        topFocus: "focus",
                        topInput: "input",
                        topKeyDown: "keydown",
                        topKeyPress: "keypress",
                        topKeyUp: "keyup",
                        topLoadedData: "loadeddata",
                        topLoadedMetadata: "loadedmetadata",
                        topLoadStart: "loadstart",
                        topMouseDown: "mousedown",
                        topMouseMove: "mousemove",
                        topMouseOut: "mouseout",
                        topMouseOver: "mouseover",
                        topMouseUp: "mouseup",
                        topPaste: "paste",
                        topPause: "pause",
                        topPlay: "play",
                        topPlaying: "playing",
                        topProgress: "progress",
                        topRateChange: "ratechange",
                        topScroll: "scroll",
                        topSeeked: "seeked",
                        topSeeking: "seeking",
                        topSelectionChange: "selectionchange",
                        topStalled: "stalled",
                        topSuspend: "suspend",
                        topTextInput: "textInput",
                        topTimeUpdate: "timeupdate",
                        topTouchCancel: "touchcancel",
                        topTouchEnd: "touchend",
                        topTouchMove: "touchmove",
                        topTouchStart: "touchstart",
                        topTransitionEnd: l("transitionend") || "transitionend",
                        topVolumeChange: "volumechange",
                        topWaiting: "waiting",
                        topWheel: "wheel"
                    }, m = "_reactListenersID" + String(Math.random()).slice(2), g = i({}, s, {
                        /**
   * Injectable event backend
   */
                        ReactEventListener: null,
                        injection: {
                            /**
     * @param {object} ReactEventListener
     */
                            injectReactEventListener: function(e) {
                                e.setHandleTopLevel(g.handleTopLevel), g.ReactEventListener = e;
                            }
                        },
                        /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
                        setEnabled: function(e) {
                            g.ReactEventListener && g.ReactEventListener.setEnabled(e);
                        },
                        /**
   * @return {boolean} True if callbacks are enabled.
   */
                        isEnabled: function() {
                            return !(!g.ReactEventListener || !g.ReactEventListener.isEnabled());
                        },
                        /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
                        listenTo: function(e, t) {
                            for (var n = t, o = r(n), i = a.registrationNameDependencies[e], s = 0; s < i.length; s++) {
                                var u = i[s];
                                o.hasOwnProperty(u) && o[u] || ("topWheel" === u ? c("wheel") ? g.ReactEventListener.trapBubbledEvent("topWheel", "wheel", n) : c("mousewheel") ? g.ReactEventListener.trapBubbledEvent("topWheel", "mousewheel", n) : // Firefox needs to capture a different mouse scroll event.
                                // @see http://www.quirksmode.org/dom/events/tests/scroll.html
                                g.ReactEventListener.trapBubbledEvent("topWheel", "DOMMouseScroll", n) : "topScroll" === u ? c("scroll", !0) ? g.ReactEventListener.trapCapturedEvent("topScroll", "scroll", n) : g.ReactEventListener.trapBubbledEvent("topScroll", "scroll", g.ReactEventListener.WINDOW_HANDLE) : "topFocus" === u || "topBlur" === u ? (c("focus", !0) ? (g.ReactEventListener.trapCapturedEvent("topFocus", "focus", n), 
                                g.ReactEventListener.trapCapturedEvent("topBlur", "blur", n)) : c("focusin") && (// IE has `focusin` and `focusout` events which bubble.
                                // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
                                g.ReactEventListener.trapBubbledEvent("topFocus", "focusin", n), g.ReactEventListener.trapBubbledEvent("topBlur", "focusout", n)), 
                                // to make sure blur and focus event listeners are only attached once
                                o.topBlur = !0, o.topFocus = !0) : h.hasOwnProperty(u) && g.ReactEventListener.trapBubbledEvent(u, h[u], n), 
                                o[u] = !0);
                            }
                        },
                        trapBubbledEvent: function(e, t, n) {
                            return g.ReactEventListener.trapBubbledEvent(e, t, n);
                        },
                        trapCapturedEvent: function(e, t, n) {
                            return g.ReactEventListener.trapCapturedEvent(e, t, n);
                        },
                        /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
                        supportsEventPageXY: function() {
                            if (!document.createEvent) return !1;
                            var e = document.createEvent("MouseEvent");
                            return null != e && "pageX" in e;
                        },
                        /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
                        ensureScrollValueMonitoring: function() {
                            if (void 0 === o && (o = g.supportsEventPageXY()), !o && !d) {
                                var e = u.refreshScrollValues;
                                g.ReactEventListener.monitorScrollValue(e), d = !0;
                            }
                        }
                    });
                    t.exports = g;
                }, {
                    "101": 101,
                    "119": 119,
                    "122": 122,
                    "160": 160,
                    "18": 18,
                    "56": 56
                } ],
                27: [ function(e, t, n) {
                    (function(n) {
                        /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                        "use strict";
                        function r(t, n, r, i) {
                            // We found a component instance.
                            var u = void 0 === t[r];
                            o || (o = e(133)), u || c(!1, "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s", s.unescape(r), o.getStackAddendumByID(i)), 
                            null != n && u && (t[r] = a(n, !0));
                        }
                        var o, i = e(75), a = e(121), s = e(23), u = e(130), l = e(131), c = e(159);
                        void 0 !== n && n.env;
                        /**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
                        var p = {
                            /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
                            instantiateChildren: function(e, t, n, o) {
                                if (null == e) return null;
                                var i = {};
                                return l(e, function(e, t, n) {
                                    return r(e, t, n, o);
                                }, i), i;
                            },
                            /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
                            updateChildren: function(e, t, n, r, o, s, l, c, p) {
                                // We currently don't have a way to track moves here but if we use iterators
                                // instead of for..in we can zip the iterators and check if an item has
                                // moved.
                                // TODO: If nothing has changed, return the prevChildren object so that we
                                // can quickly bailout if nothing has changed.
                                if (t || e) {
                                    var d, f;
                                    for (d in t) if (t.hasOwnProperty(d)) {
                                        f = e && e[d];
                                        var h = f && f._currentElement, m = t[d];
                                        if (null != f && u(h, m)) i.receiveComponent(f, m, o, c), t[d] = f; else {
                                            f && (r[d] = i.getHostNode(f), i.unmountComponent(f, !1));
                                            // The child must be instantiated before it's mounted.
                                            var g = a(m, !0);
                                            t[d] = g;
                                            // Creating mount image now ensures refs are resolved in right order
                                            // (see https://github.com/facebook/react/pull/7101 for explanation).
                                            var v = i.mountComponent(g, o, s, l, c, p);
                                            n.push(v);
                                        }
                                    }
                                    // Unmount children that are no longer present.
                                    for (d in e) !e.hasOwnProperty(d) || t && t.hasOwnProperty(d) || (f = e[d], r[d] = i.getHostNode(f), 
                                    i.unmountComponent(f, !1));
                                }
                            },
                            /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
                            unmountChildren: function(e, t) {
                                for (var n in e) if (e.hasOwnProperty(n)) {
                                    var r = e[n];
                                    i.unmountComponent(r, t);
                                }
                            }
                        };
                        t.exports = p;
                    }).call(this, void 0);
                }, {
                    "121": 121,
                    "130": 130,
                    "131": 131,
                    "133": 133,
                    "159": 159,
                    "23": 23,
                    "75": 75
                } ],
                28: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(8), o = e(38), i = {
                        processChildrenUpdates: o.dangerouslyProcessChildrenUpdates,
                        replaceNodeWithMarkup: r.dangerouslyReplaceNodeWithMarkup
                    };
                    t.exports = i;
                }, {
                    "38": 38,
                    "8": 8
                } ],
                29: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = (e(126), e(152)), o = !1, i = {
                        /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
                        replaceNodeWithMarkup: null,
                        /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
                        processChildrenUpdates: null,
                        injection: {
                            injectEnvironment: function(e) {
                                o && r(!1, "ReactCompositeComponent: injectEnvironment() can only be called once."), 
                                i.replaceNodeWithMarkup = e.replaceNodeWithMarkup, i.processChildrenUpdates = e.processChildrenUpdates, 
                                o = !0;
                            }
                        }
                    };
                    t.exports = i;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                30: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {}
                    function o(e, t) {
                        w(null === t || !1 === t || l.isValidElement(t), "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", e.displayName || e.name || "Component"), 
                        w(!e.childContextTypes, "%s(...): childContextTypes cannot be defined on a functional component.", e.displayName || e.name || "Component");
                    }
                    function i(e) {
                        return !(!e.prototype || !e.prototype.isReactComponent);
                    }
                    function a(e) {
                        return !(!e.prototype || !e.prototype.isPureReactComponent);
                    }
                    // Separated into a function to contain deoptimizations caused by try/finally.
                    function s(e, t, n) {
                        if (0 === t) // Top-level wrappers (see ReactMount) and empty components (see
                        // ReactDOMEmptyComponent) are invisible to hooks and devtools.
                        // Both are implementation details that should go away in the future.
                        return e();
                        h.debugTool.onBeginLifeCycleTimer(t, n);
                        try {
                            return e();
                        } finally {
                            h.debugTool.onEndLifeCycleTimer(t, n);
                        }
                    }
                    var u = (e(126), e(160)), l = e(135), c = e(29), p = e(134), d = e(55), f = e(63), h = e(64), m = e(69), g = e(75), v = e(104), y = e(145), b = e(152), x = e(158), C = e(130), w = e(159), E = {
                        ImpureClass: 0,
                        PureClass: 1,
                        StatelessFunctional: 2
                    };
                    r.prototype.render = function() {
                        var e = f.get(this)._currentElement.type, t = e(this.props, this.context, this.updater);
                        return o(e, t), t;
                    };
                    /**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */
                    /**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
                    var _ = 1, k = {
                        /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
                        construct: function(e) {
                            this._currentElement = e, this._rootNodeID = 0, this._compositeType = null, this._instance = null, 
                            this._hostParent = null, this._hostContainerInfo = null, // See ReactUpdateQueue
                            this._updateBatchNumber = null, this._pendingElement = null, this._pendingStateQueue = null, 
                            this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedNodeType = null, 
                            this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, 
                            // See ReactUpdates and ReactUpdateQueue.
                            this._pendingCallbacks = null, // ComponentWillUnmount shall only be called once
                            this._calledComponentWillUnmount = !1, this._warnedAboutRefsInRender = !1;
                        },
                        /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
                        mountComponent: function(e, t, n, u) {
                            var c = this;
                            this._context = u, this._mountOrder = _++, this._hostParent = t, this._hostContainerInfo = n;
                            var p, d = this._currentElement.props, h = this._processContext(u), m = this._currentElement.type, g = e.getUpdateQueue(), v = i(m), x = this._constructComponent(v, d, h, g);
                            // Support functional components
                            v || null != x && null != x.render ? a(m) ? this._compositeType = E.PureClass : this._compositeType = E.ImpureClass : (p = x, 
                            o(m, p), null === x || !1 === x || l.isValidElement(x) || b(!1, "%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", m.displayName || m.name || "Component"), 
                            x = new r(m), this._compositeType = E.StatelessFunctional), // This will throw later in _renderValidatedComponent, but add an early
                            // warning now to help debugging
                            null == x.render && w(!1, "%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", m.displayName || m.name || "Component");
                            var C = x.props !== d, k = m.displayName || m.name || "Component";
                            w(void 0 === x.props || !C, "%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", k, k), 
                            // These should be set up in the constructor, but as a convenience for
                            // simpler class abstractions, we set them up after the fact.
                            x.props = d, x.context = h, x.refs = y, x.updater = g, this._instance = x, // Store a reference from the instance back to the internal representation
                            f.set(x, this), w(!x.getInitialState || x.getInitialState.isReactClassApproved || x.state, "getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", this.getName() || "a component"), 
                            w(!x.getDefaultProps || x.getDefaultProps.isReactClassApproved, "getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", this.getName() || "a component"), 
                            w(!x.propTypes, "propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", this.getName() || "a component"), 
                            w(!x.contextTypes, "contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", this.getName() || "a component"), 
                            w("function" != typeof x.componentShouldUpdate, "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", this.getName() || "A component"), 
                            w("function" != typeof x.componentDidUnmount, "%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", this.getName() || "A component"), 
                            w("function" != typeof x.componentWillRecieveProps, "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", this.getName() || "A component");
                            var T = x.state;
                            void 0 === T && (x.state = T = null), ("object" != typeof T || Array.isArray(T)) && b(!1, "%s.state: must be set to an object or null", this.getName() || "ReactCompositeComponent"), 
                            this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1;
                            var S;
                            return S = x.unstable_handleError ? this.performInitialMountWithErrorHandling(p, t, n, e, u) : this.performInitialMount(p, t, n, e, u), 
                            x.componentDidMount && e.getReactMountReady().enqueue(function() {
                                s(function() {
                                    return x.componentDidMount();
                                }, c._debugID, "componentDidMount");
                            }), S;
                        },
                        _constructComponent: function(e, t, n, r) {
                            p.current = this;
                            try {
                                return this._constructComponentWithoutOwner(e, t, n, r);
                            } finally {
                                p.current = null;
                            }
                        },
                        _constructComponentWithoutOwner: function(e, t, n, r) {
                            var o = this._currentElement.type;
                            return e ? s(function() {
                                return new o(t, n, r);
                            }, this._debugID, "ctor") : s(function() {
                                return o(t, n, r);
                            }, this._debugID, "render");
                        },
                        performInitialMountWithErrorHandling: function(e, t, n, r, o) {
                            var i, a = r.checkpoint();
                            try {
                                i = this.performInitialMount(e, t, n, r, o);
                            } catch (s) {
                                // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
                                r.rollback(a), this._instance.unstable_handleError(s), this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)), 
                                a = r.checkpoint(), this._renderedComponent.unmountComponent(!0), r.rollback(a), 
                                // Try again - we've informed the component about the error, so they can render an error message this time.
                                // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
                                i = this.performInitialMount(e, t, n, r, o);
                            }
                            return i;
                        },
                        performInitialMount: function(e, t, n, r, o) {
                            var i = this._instance, a = 0;
                            a = this._debugID, i.componentWillMount && (s(function() {
                                return i.componentWillMount();
                            }, a, "componentWillMount"), // When mounting, calls to `setState` by `componentWillMount` will set
                            // `this._pendingStateQueue` without triggering a re-render.
                            this._pendingStateQueue && (i.state = this._processPendingState(i.props, i.context))), 
                            // If not a stateless component, we now render
                            void 0 === e && (e = this._renderValidatedComponent());
                            var u = m.getType(e);
                            this._renderedNodeType = u;
                            var l = this._instantiateReactComponent(e, u !== m.EMPTY);
                            this._renderedComponent = l;
                            var c = g.mountComponent(l, r, t, n, this._processChildContext(o), a);
                            if (0 !== a) {
                                var p = 0 !== l._debugID ? [ l._debugID ] : [];
                                h.debugTool.onSetChildren(a, p);
                            }
                            return c;
                        },
                        getHostNode: function() {
                            return g.getHostNode(this._renderedComponent);
                        },
                        /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
                        unmountComponent: function(e) {
                            if (this._renderedComponent) {
                                var t = this._instance;
                                if (t.componentWillUnmount && !t._calledComponentWillUnmount) if (t._calledComponentWillUnmount = !0, 
                                e) {
                                    var n = this.getName() + ".componentWillUnmount()";
                                    d.invokeGuardedCallback(n, t.componentWillUnmount.bind(t));
                                } else s(function() {
                                    return t.componentWillUnmount();
                                }, this._debugID, "componentWillUnmount");
                                this._renderedComponent && (g.unmountComponent(this._renderedComponent, e), this._renderedNodeType = null, 
                                this._renderedComponent = null, this._instance = null), // Reset pending fields
                                // Even if this component is scheduled for another update in ReactUpdates,
                                // it would still be ignored because these fields are reset.
                                this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, 
                                this._pendingCallbacks = null, this._pendingElement = null, // These fields do not really need to be reset since this object is no
                                // longer accessible.
                                this._context = null, this._rootNodeID = 0, this._topLevelWrapper = null, // Delete the reference from the instance to this internal representation
                                // which allow the internals to be properly cleaned up even if the user
                                // leaks a reference to the public instance.
                                f.remove(t);
                            }
                        },
                        /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
                        _maskContext: function(e) {
                            var t = this._currentElement.type, n = t.contextTypes;
                            if (!n) return y;
                            var r = {};
                            for (var o in n) r[o] = e[o];
                            return r;
                        },
                        /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
                        _processContext: function(e) {
                            var t = this._maskContext(e), n = this._currentElement.type;
                            return n.contextTypes && this._checkContextTypes(n.contextTypes, t, "context"), 
                            t;
                        },
                        /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
                        _processChildContext: function(e) {
                            var t, n = this._currentElement.type, r = this._instance;
                            if (r.getChildContext) {
                                h.debugTool.onBeginProcessingChildContext();
                                try {
                                    t = r.getChildContext();
                                } finally {
                                    h.debugTool.onEndProcessingChildContext();
                                }
                            }
                            if (t) {
                                "object" != typeof n.childContextTypes && b(!1, "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", this.getName() || "ReactCompositeComponent"), 
                                this._checkContextTypes(n.childContextTypes, t, "child context");
                                for (var o in t) o in n.childContextTypes || b(!1, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || "ReactCompositeComponent", o);
                                return u({}, e, t);
                            }
                            return e;
                        },
                        /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
                        _checkContextTypes: function(e, t, n) {
                            v(e, t, n, this.getName(), null, this._debugID);
                        },
                        receiveComponent: function(e, t, n) {
                            var r = this._currentElement, o = this._context;
                            this._pendingElement = null, this.updateComponent(t, r, e, o, n);
                        },
                        /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
                        performUpdateIfNecessary: function(e) {
                            null != this._pendingElement ? g.receiveComponent(this, this._pendingElement, e, this._context) : null !== this._pendingStateQueue || this._pendingForceUpdate ? this.updateComponent(e, this._currentElement, this._currentElement, this._context, this._context) : this._updateBatchNumber = null;
                        },
                        /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
                        updateComponent: function(e, t, n, r, o) {
                            var i = this._instance;
                            null == i && b(!1, "Attempted to update component `%s` that has already been unmounted (or failed to mount).", this.getName() || "ReactCompositeComponent");
                            var a, u = !1;
                            // Determine if the context has changed or not
                            this._context === o ? a = i.context : (a = this._processContext(o), u = !0);
                            var l = t.props, c = n.props;
                            // Not a simple state update but a props update
                            t !== n && (u = !0), // An update here will schedule an update but immediately set
                            // _pendingStateQueue which will ensure that any state updates gets
                            // immediately reconciled instead of waiting for the next batch.
                            u && i.componentWillReceiveProps && s(function() {
                                return i.componentWillReceiveProps(c, a);
                            }, this._debugID, "componentWillReceiveProps");
                            var p = this._processPendingState(c, a), d = !0;
                            this._pendingForceUpdate || (i.shouldComponentUpdate ? d = s(function() {
                                return i.shouldComponentUpdate(c, p, a);
                            }, this._debugID, "shouldComponentUpdate") : this._compositeType === E.PureClass && (d = !x(l, c) || !x(i.state, p))), 
                            w(void 0 !== d, "%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", this.getName() || "ReactCompositeComponent"), 
                            this._updateBatchNumber = null, d ? (this._pendingForceUpdate = !1, // Will set `this.props`, `this.state` and `this.context`.
                            this._performComponentUpdate(n, c, p, a, e, o)) : (// If it's determined that a component should not update, we still want
                            // to set props and state but we shortcut the rest of the update.
                            this._currentElement = n, this._context = o, i.props = c, i.state = p, i.context = a);
                        },
                        _processPendingState: function(e, t) {
                            var n = this._instance, r = this._pendingStateQueue, o = this._pendingReplaceState;
                            if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !r) return n.state;
                            if (o && 1 === r.length) return r[0];
                            for (var i = u({}, o ? r[0] : n.state), a = o ? 1 : 0; a < r.length; a++) {
                                var s = r[a];
                                u(i, "function" == typeof s ? s.call(n, i, e, t) : s);
                            }
                            return i;
                        },
                        /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
                        _performComponentUpdate: function(e, t, n, r, o, i) {
                            var a, u, l, c = this, p = this._instance, d = Boolean(p.componentDidUpdate);
                            d && (a = p.props, u = p.state, l = p.context), p.componentWillUpdate && s(function() {
                                return p.componentWillUpdate(t, n, r);
                            }, this._debugID, "componentWillUpdate"), this._currentElement = e, this._context = i, 
                            p.props = t, p.state = n, p.context = r, this._updateRenderedComponent(o, i), d && o.getReactMountReady().enqueue(function() {
                                s(p.componentDidUpdate.bind(p, a, u, l), c._debugID, "componentDidUpdate");
                            });
                        },
                        /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
                        _updateRenderedComponent: function(e, t) {
                            var n = this._renderedComponent, r = n._currentElement, o = this._renderValidatedComponent(), i = 0;
                            if (i = this._debugID, C(r, o)) g.receiveComponent(n, o, e, this._processChildContext(t)); else {
                                var a = g.getHostNode(n);
                                g.unmountComponent(n, !1);
                                var s = m.getType(o);
                                this._renderedNodeType = s;
                                var u = this._instantiateReactComponent(o, s !== m.EMPTY);
                                this._renderedComponent = u;
                                var l = g.mountComponent(u, e, this._hostParent, this._hostContainerInfo, this._processChildContext(t), i);
                                if (0 !== i) {
                                    var c = 0 !== u._debugID ? [ u._debugID ] : [];
                                    h.debugTool.onSetChildren(i, c);
                                }
                                this._replaceNodeWithMarkup(a, l, n);
                            }
                        },
                        /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
                        _replaceNodeWithMarkup: function(e, t, n) {
                            c.replaceNodeWithMarkup(e, t, n);
                        },
                        /**
   * @protected
   */
                        _renderValidatedComponentWithoutOwnerOrContext: function() {
                            var e, t = this._instance;
                            // We allow auto-mocks to proceed as if they're returning null.
                            // This is probably bad practice. Consider warning here and
                            // deprecating this convenience.
                            return e = s(function() {
                                return t.render();
                            }, this._debugID, "render"), void 0 === e && t.render._isMockFunction && (e = null), 
                            e;
                        },
                        /**
   * @private
   */
                        _renderValidatedComponent: function() {
                            var e;
                            p.current = this;
                            try {
                                e = this._renderValidatedComponentWithoutOwnerOrContext();
                            } finally {
                                p.current = null;
                            }
                            // TODO: An `isValidNode` function would probably be more appropriate
                            return null === e || !1 === e || l.isValidElement(e) || b(!1, "%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.", this.getName() || "ReactCompositeComponent"), 
                            e;
                        },
                        /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
                        attachRef: function(e, t) {
                            var n = this.getPublicInstance();
                            null == n && b(!1, "Stateless function components cannot have refs.");
                            var r = t.getPublicInstance(), o = t && t.getName ? t.getName() : "a component";
                            w(null != r || t._compositeType !== E.StatelessFunctional, 'Stateless function components cannot be given refs (See ref "%s" in %s created by %s). Attempts to access this ref will fail.', e, o, this.getName()), 
                            (n.refs === y ? n.refs = {} : n.refs)[e] = r;
                        },
                        /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
                        detachRef: function(e) {
                            delete this.getPublicInstance().refs[e];
                        },
                        /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
                        getName: function() {
                            var e = this._currentElement.type, t = this._instance && this._instance.constructor;
                            return e.displayName || t && t.displayName || e.name || t && t.name || null;
                        },
                        /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
                        getPublicInstance: function() {
                            var e = this._instance;
                            return this._compositeType === E.StatelessFunctional ? null : e;
                        },
                        // Stub
                        _instantiateReactComponent: null
                    };
                    t.exports = k;
                }, {
                    "104": 104,
                    "126": 126,
                    "130": 130,
                    "134": 134,
                    "135": 135,
                    "145": 145,
                    "152": 152,
                    "158": 158,
                    "159": 159,
                    "160": 160,
                    "29": 29,
                    "55": 55,
                    "63": 63,
                    "64": 64,
                    "69": 69,
                    "75": 75
                } ],
                31: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
                    "use strict";
                    var r = e(34), o = e(52), i = e(67), a = e(75), s = e(82), u = e(83), l = e(108), c = e(115), p = e(127), d = e(159);
                    o.inject();
                    var f = {
                        findDOMNode: l,
                        render: i.render,
                        unmountComponentAtNode: i.unmountComponentAtNode,
                        version: u,
                        /* eslint-disable camelcase */
                        unstable_batchedUpdates: s.batchedUpdates,
                        unstable_renderSubtreeIntoContainer: p
                    };
                    if (// Inject the runtime into a devtools global hook regardless of browser.
                    // Allows for debugging when the hook is injected on the page.
                    "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
                        ComponentTree: {
                            getClosestInstanceFromNode: r.getClosestInstanceFromNode,
                            getNodeFromInstance: function(e) {
                                // inst is an internal instance (but could be a composite)
                                return e._renderedComponent && (e = c(e)), e ? r.getNodeFromInstance(e) : null;
                            }
                        },
                        Mount: i,
                        Reconciler: a
                    }), e(138).canUseDOM && window.top === window.self) {
                        // First check if devtools is not installed
                        if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && (navigator.userAgent.indexOf("Chrome") > -1 && -1 === navigator.userAgent.indexOf("Edge") || navigator.userAgent.indexOf("Firefox") > -1)) {
                            // Firefox does not have the issue with devtools loaded over file://
                            var h = -1 === window.location.protocol.indexOf("http") && -1 === navigator.userAgent.indexOf("Firefox");
                            console.debug("Download the React DevTools " + (h ? "and use an HTTP server (instead of a file: URL) " : "") + "for a better development experience: https://fb.me/react-devtools");
                        }
                        var m = function() {};
                        d(-1 !== (m.name || m.toString()).indexOf("testFn"), "It looks like you're using a minified copy of the development build of React. When deploying React apps to production, make sure to use the production build which skips development warnings and is faster. See https://fb.me/react-minification for more details."), 
                        d(!(document.documentMode && document.documentMode < 8), 'Internet Explorer is running in compatibility mode; please add the following tag to your HTML to prevent this from happening: <meta http-equiv="X-UA-Compatible" content="IE=edge" />');
                        for (var g = [ // shims
                        Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim ], v = 0; v < g.length; v++) if (!g[v]) {
                            d(!1, "One or more ES5 shims expected by React are not available: https://fb.me/react-warning-polyfills");
                            break;
                        }
                    }
                    var y = e(64), b = e(49), x = e(41), C = e(40);
                    y.debugTool.addHook(b), y.debugTool.addHook(x), y.debugTool.addHook(C), t.exports = f;
                }, {
                    "108": 108,
                    "115": 115,
                    "127": 127,
                    "138": 138,
                    "159": 159,
                    "34": 34,
                    "40": 40,
                    "41": 41,
                    "49": 49,
                    "52": 52,
                    "64": 64,
                    "67": 67,
                    "75": 75,
                    "82": 82,
                    "83": 83
                } ],
                32: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* global hasOwnProperty:true */
                    "use strict";
                    function r(e) {
                        if (e) {
                            var t = e._currentElement._owner || null;
                            if (t) {
                                var n = t.getName();
                                if (n) return " This DOM node was rendered by `" + n + "`.";
                            }
                        }
                        return "";
                    }
                    function o(e) {
                        if ("object" == typeof e) {
                            if (Array.isArray(e)) return "[" + e.map(o).join(", ") + "]";
                            var t = [];
                            for (var n in e) if (Object.prototype.hasOwnProperty.call(e, n)) {
                                var r = /^[a-z$_][\w$_]*$/i.test(n) ? n : JSON.stringify(n);
                                t.push(r + ": " + o(e[n]));
                            }
                            return "{" + t.join(", ") + "}";
                        }
                        return "string" == typeof e ? JSON.stringify(e) : "function" == typeof e ? "[function object]" : String(e);
                    }
                    function i(e, t, n) {
                        if (null != e && null != t && !q(e, t)) {
                            var r, i = n._tag, a = n._currentElement._owner;
                            a && (r = a.getName());
                            var s = r + "|" + i;
                            ee.hasOwnProperty(s) || (ee[s] = !0, V(!1, "`%s` was passed a style object that has previously been mutated. Mutating `style` is deprecated. Consider cloning it beforehand. Check the `render` %s. Previous style: %s. Mutated style: %s.", i, a ? "of `" + r + "`" : "using <" + i + ">", o(e), o(t)));
                        }
                    }
                    /**
 * @param {object} component
 * @param {?object} props
 */
                    function a(e, t) {
                        t && (// Note the use of `==` which checks for null or undefined.
                        ie[e._tag] && (null != t.children || null != t.dangerouslySetInnerHTML) && U(!1, "%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s", e._tag, e._currentElement._owner ? " Check the render method of " + e._currentElement._owner.getName() + "." : ""), 
                        null != t.dangerouslySetInnerHTML && (null != t.children && U(!1, "Can only set one of `children` or `props.dangerouslySetInnerHTML`."), 
                        "object" == typeof t.dangerouslySetInnerHTML && Q in t.dangerouslySetInnerHTML || U(!1, "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.")), 
                        V(null == t.innerHTML, "Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), 
                        V(t.suppressContentEditableWarning || !t.contentEditable || null == t.children, "A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), 
                        V(null == t.onFocusIn && null == t.onFocusOut, "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), 
                        null != t.style && "object" != typeof t.style && U(!1, "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.%s", r(e)));
                    }
                    function s(e, t, n, r) {
                        if (!(r instanceof M)) {
                            V("onScroll" !== t || B("scroll", !0), "This browser doesn't support the `onScroll` event");
                            var o = e._hostContainerInfo, i = o._node && o._node.nodeType === Z, a = i ? o._node : o._ownerDocument;
                            X(t, a), r.getReactMountReady().enqueue(u, {
                                inst: e,
                                registrationName: t,
                                listener: n
                            });
                        }
                    }
                    function u() {
                        var e = this;
                        k.putListener(e.inst, e.registrationName, e.listener);
                    }
                    function l() {
                        var e = this;
                        I.postMountWrapper(e);
                    }
                    function c() {
                        var e = this;
                        P.postMountWrapper(e);
                    }
                    function p() {
                        var e = this;
                        R.postMountWrapper(e);
                    }
                    function d() {
                        H.track(this);
                    }
                    function f() {
                        var e = this;
                        // If a component renders to null or if another component fatals and causes
                        // the state of the tree to be corrupted, `node` here can be null.
                        e._rootNodeID || U(!1, "Must be mounted to trap events");
                        var t = $(e);
                        switch (t || U(!1, "trapBubbledEvent(...): Requires node to be rendered."), e._tag) {
                          case "iframe":
                          case "object":
                            e._wrapperState.listeners = [ S.trapBubbledEvent("topLoad", "load", t) ];
                            break;

                          case "video":
                          case "audio":
                            e._wrapperState.listeners = [];
                            // Create listener for each media event
                            for (var n in ne) ne.hasOwnProperty(n) && e._wrapperState.listeners.push(S.trapBubbledEvent(n, ne[n], t));
                            break;

                          case "source":
                            e._wrapperState.listeners = [ S.trapBubbledEvent("topError", "error", t) ];
                            break;

                          case "img":
                            e._wrapperState.listeners = [ S.trapBubbledEvent("topError", "error", t), S.trapBubbledEvent("topLoad", "load", t) ];
                            break;

                          case "form":
                            e._wrapperState.listeners = [ S.trapBubbledEvent("topReset", "reset", t), S.trapBubbledEvent("topSubmit", "submit", t) ];
                            break;

                          case "input":
                          case "select":
                          case "textarea":
                            e._wrapperState.listeners = [ S.trapBubbledEvent("topInvalid", "invalid", t) ];
                        }
                    }
                    function h() {
                        A.postUpdateWrapper(this);
                    }
                    function m(e) {
                        ue.call(se, e) || (ae.test(e) || U(!1, "Invalid tag: %s", e), se[e] = !0);
                    }
                    function g(e, t) {
                        return e.indexOf("-") >= 0 || null != t.is;
                    }
                    /**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
                    function v(e) {
                        var t = e.type;
                        m(t), this._currentElement = e, this._tag = t.toLowerCase(), this._namespaceURI = null, 
                        this._renderedChildren = null, this._previousStyle = null, this._previousStyleCopy = null, 
                        this._hostNode = null, this._hostParent = null, this._rootNodeID = 0, this._domID = 0, 
                        this._hostContainerInfo = null, this._wrapperState = null, this._topLevelWrapper = null, 
                        this._flags = 0, this._ancestorInfo = null, te.call(this, null);
                    }
                    var y = (e(126), e(160)), b = e(2), x = e(5), C = e(9), w = e(10), E = e(11), _ = e(12), k = e(17), T = e(18), S = e(26), N = e(33), D = e(34), I = e(39), R = e(42), A = e(43), P = e(46), O = e(64), F = e(68), M = e(77), j = e(144), L = e(107), U = e(152), B = e(122), q = e(158), H = e(120), W = e(132), V = e(159), z = N, Y = k.deleteListener, $ = D.getNodeFromInstance, X = S.listenTo, K = T.registrationNameModules, G = {
                        string: !0,
                        number: !0
                    }, Q = "__html", J = {
                        children: null,
                        dangerouslySetInnerHTML: null,
                        suppressContentEditableWarning: null
                    }, Z = 11, ee = {}, te = j;
                    te = function(e) {
                        var t = null != this._contentDebugID, n = this._debugID, r = -n;
                        if (null == e) return t && O.debugTool.onUnmountComponent(this._contentDebugID), 
                        void (this._contentDebugID = null);
                        W(null, String(e), this, this._ancestorInfo), this._contentDebugID = r, t ? (O.debugTool.onBeforeUpdateComponent(r, e), 
                        O.debugTool.onUpdateComponent(r)) : (O.debugTool.onBeforeMountComponent(r, e, n), 
                        O.debugTool.onMountComponent(r), O.debugTool.onSetChildren(n, [ r ]));
                    };
                    // There are so many media events, it makes sense to just
                    // maintain a list rather than create a `trapBubbledEvent` for each
                    var ne = {
                        topAbort: "abort",
                        topCanPlay: "canplay",
                        topCanPlayThrough: "canplaythrough",
                        topDurationChange: "durationchange",
                        topEmptied: "emptied",
                        topEncrypted: "encrypted",
                        topEnded: "ended",
                        topError: "error",
                        topLoadedData: "loadeddata",
                        topLoadedMetadata: "loadedmetadata",
                        topLoadStart: "loadstart",
                        topPause: "pause",
                        topPlay: "play",
                        topPlaying: "playing",
                        topProgress: "progress",
                        topRateChange: "ratechange",
                        topSeeked: "seeked",
                        topSeeking: "seeking",
                        topStalled: "stalled",
                        topSuspend: "suspend",
                        topTimeUpdate: "timeupdate",
                        topVolumeChange: "volumechange",
                        topWaiting: "waiting"
                    }, re = {
                        area: !0,
                        base: !0,
                        br: !0,
                        col: !0,
                        embed: !0,
                        hr: !0,
                        img: !0,
                        input: !0,
                        keygen: !0,
                        link: !0,
                        meta: !0,
                        param: !0,
                        source: !0,
                        track: !0,
                        wbr: !0
                    }, oe = {
                        listing: !0,
                        pre: !0,
                        textarea: !0
                    }, ie = y({
                        menuitem: !0
                    }, re), ae = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, se = {}, ue = {}.hasOwnProperty, le = 1;
                    v.displayName = "ReactDOMComponent", v.Mixin = {
                        /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
                        mountComponent: function(e, t, n, r) {
                            this._rootNodeID = le++, this._domID = n._idCounter++, this._hostParent = t, this._hostContainerInfo = n;
                            var o = this._currentElement.props;
                            switch (this._tag) {
                              case "audio":
                              case "form":
                              case "iframe":
                              case "img":
                              case "link":
                              case "object":
                              case "source":
                              case "video":
                                this._wrapperState = {
                                    listeners: null
                                }, e.getReactMountReady().enqueue(f, this);
                                break;

                              case "input":
                                I.mountWrapper(this, o, t), o = I.getHostProps(this, o), e.getReactMountReady().enqueue(d, this), 
                                e.getReactMountReady().enqueue(f, this);
                                break;

                              case "option":
                                R.mountWrapper(this, o, t), o = R.getHostProps(this, o);
                                break;

                              case "select":
                                A.mountWrapper(this, o, t), o = A.getHostProps(this, o), e.getReactMountReady().enqueue(f, this);
                                break;

                              case "textarea":
                                P.mountWrapper(this, o, t), o = P.getHostProps(this, o), e.getReactMountReady().enqueue(d, this), 
                                e.getReactMountReady().enqueue(f, this);
                            }
                            a(this, o);
                            // We create tags in the namespace of their parent container, except HTML
                            // tags get no namespace.
                            var i, s;
                            null != t ? (i = t._namespaceURI, s = t._tag) : n._tag && (i = n._namespaceURI, 
                            s = n._tag), (null == i || i === w.svg && "foreignobject" === s) && (i = w.html), 
                            i === w.html && ("svg" === this._tag ? i = w.svg : "math" === this._tag && (i = w.mathml)), 
                            this._namespaceURI = i;
                            var u;
                            null != t ? u = t._ancestorInfo : n._tag && (u = n._ancestorInfo), u && // parentInfo should always be present except for the top-level
                            // component when server rendering
                            W(this._tag, null, this, u), this._ancestorInfo = W.updatedAncestorInfo(u, this._tag, this);
                            var h;
                            if (e.useCreateElement) {
                                var m, g = n._ownerDocument;
                                if (i === w.html) if ("script" === this._tag) {
                                    // Create the script via .innerHTML so its "parser-inserted" flag is
                                    // set to true and it does not execute
                                    var v = g.createElement("div"), y = this._currentElement.type;
                                    v.innerHTML = "<" + y + "></" + y + ">", m = v.removeChild(v.firstChild);
                                } else m = o.is ? g.createElement(this._currentElement.type, o.is) : g.createElement(this._currentElement.type); else m = g.createElementNS(i, this._currentElement.type);
                                D.precacheNode(this, m), this._flags |= z.hasCachedChildNodes, this._hostParent || _.setAttributeForRoot(m), 
                                this._updateDOMProperties(null, o, e);
                                var x = C(m);
                                this._createInitialChildren(e, o, r, x), h = x;
                            } else {
                                var E = this._createOpenTagMarkupAndPutListeners(e, o), k = this._createContentMarkup(e, o, r);
                                h = !k && re[this._tag] ? E + "/>" : E + ">" + k + "</" + this._currentElement.type + ">";
                            }
                            switch (this._tag) {
                              case "input":
                                e.getReactMountReady().enqueue(l, this), o.autoFocus && e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                                break;

                              case "textarea":
                                e.getReactMountReady().enqueue(c, this), o.autoFocus && e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                                break;

                              case "select":
                              case "button":
                                o.autoFocus && e.getReactMountReady().enqueue(b.focusDOMComponent, this);
                                break;

                              case "option":
                                e.getReactMountReady().enqueue(p, this);
                            }
                            return h;
                        },
                        /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
                        _createOpenTagMarkupAndPutListeners: function(e, t) {
                            var n = "<" + this._currentElement.type;
                            for (var r in t) if (t.hasOwnProperty(r)) {
                                var o = t[r];
                                if (null != o) if (K.hasOwnProperty(r)) o && s(this, r, o, e); else {
                                    "style" === r && (o && (// See `_updateDOMProperties`. style block
                                    this._previousStyle = o, o = this._previousStyleCopy = y({}, t.style)), o = x.createMarkupForStyles(o, this));
                                    var i = null;
                                    null != this._tag && g(this._tag, t) ? J.hasOwnProperty(r) || (i = _.createMarkupForCustomAttribute(r, o)) : i = _.createMarkupForProperty(r, o), 
                                    i && (n += " " + i);
                                }
                            }
                            // For static pages, no need to put React ID and checksum. Saves lots of
                            // bytes.
                            // For static pages, no need to put React ID and checksum. Saves lots of
                            // bytes.
                            return e.renderToStaticMarkup ? n : (this._hostParent || (n += " " + _.createMarkupForRoot()), 
                            n += " " + _.createMarkupForID(this._domID));
                        },
                        /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
                        _createContentMarkup: function(e, t, n) {
                            var r = "", o = t.dangerouslySetInnerHTML;
                            if (null != o) null != o.__html && (r = o.__html); else {
                                var i = G[typeof t.children] ? t.children : null, a = null != i ? null : t.children;
                                if (null != i) // TODO: Validate that text is allowed as a child of this node
                                r = L(i), te.call(this, i); else if (null != a) {
                                    var s = this.mountChildren(a, e, n);
                                    r = s.join("");
                                }
                            }
                            return oe[this._tag] && "\n" === r.charAt(0) ? "\n" + r : r;
                        },
                        _createInitialChildren: function(e, t, n, r) {
                            // Intentional use of != to avoid catching zero/false.
                            var o = t.dangerouslySetInnerHTML;
                            if (null != o) null != o.__html && C.queueHTML(r, o.__html); else {
                                var i = G[typeof t.children] ? t.children : null, a = null != i ? null : t.children;
                                // TODO: Validate that text is allowed as a child of this node
                                if (null != i) // Avoid setting textContent when the text is empty. In IE11 setting
                                // textContent on a text area will cause the placeholder to not
                                // show within the textarea until it has been focused and blurred again.
                                // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                                "" !== i && (te.call(this, i), C.queueText(r, i)); else if (null != a) for (var s = this.mountChildren(a, e, n), u = 0; u < s.length; u++) C.queueChild(r, s[u]);
                            }
                        },
                        /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
                        receiveComponent: function(e, t, n) {
                            var r = this._currentElement;
                            this._currentElement = e, this.updateComponent(t, r, e, n);
                        },
                        /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
                        updateComponent: function(e, t, n, r) {
                            var o = t.props, i = this._currentElement.props;
                            switch (this._tag) {
                              case "input":
                                o = I.getHostProps(this, o), i = I.getHostProps(this, i);
                                break;

                              case "option":
                                o = R.getHostProps(this, o), i = R.getHostProps(this, i);
                                break;

                              case "select":
                                o = A.getHostProps(this, o), i = A.getHostProps(this, i);
                                break;

                              case "textarea":
                                o = P.getHostProps(this, o), i = P.getHostProps(this, i);
                            }
                            switch (a(this, i), this._updateDOMProperties(o, i, e), this._updateDOMChildren(o, i, e, r), 
                            this._tag) {
                              case "input":
                                // Update the wrapper around inputs *after* updating props. This has to
                                // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
                                // raise warnings and prevent the new value from being assigned.
                                I.updateWrapper(this);
                                break;

                              case "textarea":
                                P.updateWrapper(this);
                                break;

                              case "select":
                                // <select> value update needs to occur after <option> children
                                // reconciliation
                                e.getReactMountReady().enqueue(h, this);
                            }
                        },
                        /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
                        _updateDOMProperties: function(e, t, n) {
                            var r, o, a;
                            for (r in e) if (!t.hasOwnProperty(r) && e.hasOwnProperty(r) && null != e[r]) if ("style" === r) {
                                var u = this._previousStyleCopy;
                                for (o in u) u.hasOwnProperty(o) && (a = a || {}, a[o] = "");
                                this._previousStyleCopy = null;
                            } else K.hasOwnProperty(r) ? e[r] && // Only call deleteListener if there was a listener previously or
                            // else willDeleteListener gets called when there wasn't actually a
                            // listener (e.g., onClick={null})
                            Y(this, r) : g(this._tag, e) ? J.hasOwnProperty(r) || _.deleteValueForAttribute($(this), r) : (E.properties[r] || E.isCustomAttribute(r)) && _.deleteValueForProperty($(this), r);
                            for (r in t) {
                                var l = t[r], c = "style" === r ? this._previousStyleCopy : null != e ? e[r] : void 0;
                                if (t.hasOwnProperty(r) && l !== c && (null != l || null != c)) if ("style" === r) if (l ? (i(this._previousStyleCopy, this._previousStyle, this), 
                                this._previousStyle = l, l = this._previousStyleCopy = y({}, l)) : this._previousStyleCopy = null, 
                                c) {
                                    // Unset styles on `lastProp` but not on `nextProp`.
                                    for (o in c) !c.hasOwnProperty(o) || l && l.hasOwnProperty(o) || (a = a || {}, a[o] = "");
                                    // Update styles that changed since `lastProp`.
                                    for (o in l) l.hasOwnProperty(o) && c[o] !== l[o] && (a = a || {}, a[o] = l[o]);
                                } else // Relies on `updateStylesByID` not mutating `styleUpdates`.
                                a = l; else if (K.hasOwnProperty(r)) l ? s(this, r, l, n) : c && Y(this, r); else if (g(this._tag, t)) J.hasOwnProperty(r) || _.setValueForAttribute($(this), r, l); else if (E.properties[r] || E.isCustomAttribute(r)) {
                                    var p = $(this);
                                    // If we're updating to null or undefined, we should remove the property
                                    // from the DOM node instead of inadvertently setting to a string. This
                                    // brings us in line with the same behavior we have on initial render.
                                    null != l ? _.setValueForProperty(p, r, l) : _.deleteValueForProperty(p, r);
                                }
                            }
                            a && x.setValueForStyles($(this), a, this);
                        },
                        /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
                        _updateDOMChildren: function(e, t, n, r) {
                            var o = G[typeof e.children] ? e.children : null, i = G[typeof t.children] ? t.children : null, a = e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html, s = t.dangerouslySetInnerHTML && t.dangerouslySetInnerHTML.__html, u = null != o ? null : e.children, l = null != i ? null : t.children, c = null != o || null != a, p = null != i || null != s;
                            null != u && null == l ? this.updateChildren(null, n, r) : c && !p && (this.updateTextContent(""), 
                            O.debugTool.onSetChildren(this._debugID, [])), null != i ? o !== i && (this.updateTextContent("" + i), 
                            te.call(this, i)) : null != s ? (a !== s && this.updateMarkup("" + s), O.debugTool.onSetChildren(this._debugID, [])) : null != l && (te.call(this, null), 
                            this.updateChildren(l, n, r));
                        },
                        getHostNode: function() {
                            return $(this);
                        },
                        /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
                        unmountComponent: function(e) {
                            switch (this._tag) {
                              case "audio":
                              case "form":
                              case "iframe":
                              case "img":
                              case "link":
                              case "object":
                              case "source":
                              case "video":
                                var t = this._wrapperState.listeners;
                                if (t) for (var n = 0; n < t.length; n++) t[n].remove();
                                break;

                              case "input":
                              case "textarea":
                                H.stopTracking(this);
                                break;

                              case "html":
                              case "head":
                              case "body":
                                U(!1, "<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.", this._tag);
                            }
                            this.unmountChildren(e), D.uncacheNode(this), k.deleteAllListeners(this), this._rootNodeID = 0, 
                            this._domID = 0, this._wrapperState = null, te.call(this, null);
                        },
                        getPublicInstance: function() {
                            return $(this);
                        }
                    }, y(v.prototype, v.Mixin, F.Mixin), t.exports = v;
                }, {
                    "10": 10,
                    "107": 107,
                    "11": 11,
                    "12": 12,
                    "120": 120,
                    "122": 122,
                    "126": 126,
                    "132": 132,
                    "144": 144,
                    "152": 152,
                    "158": 158,
                    "159": 159,
                    "160": 160,
                    "17": 17,
                    "18": 18,
                    "2": 2,
                    "26": 26,
                    "33": 33,
                    "34": 34,
                    "39": 39,
                    "42": 42,
                    "43": 43,
                    "46": 46,
                    "5": 5,
                    "64": 64,
                    "68": 68,
                    "77": 77,
                    "9": 9
                } ],
                33: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        hasCachedChildNodes: 1
                    };
                    t.exports = r;
                }, {} ],
                34: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Check if a given node should be cached.
 */
                    function r(e, t) {
                        return 1 === e.nodeType && e.getAttribute(h) === String(t) || 8 === e.nodeType && e.nodeValue === " react-text: " + t + " " || 8 === e.nodeType && e.nodeValue === " react-empty: " + t + " ";
                    }
                    /**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
                    function o(e) {
                        for (var t; t = e._renderedComponent; ) e = t;
                        return e;
                    }
                    /**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
                    function i(e, t) {
                        var n = o(e);
                        n._hostNode = t, t[g] = n;
                    }
                    function a(e) {
                        var t = e._hostNode;
                        t && (delete t[g], e._hostNode = null);
                    }
                    /**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
                    function s(e, t) {
                        if (!(e._flags & m.hasCachedChildNodes)) {
                            var n = e._renderedChildren, a = t.firstChild;
                            e: for (var s in n) if (n.hasOwnProperty(s)) {
                                var u = n[s], l = o(u)._domID;
                                if (0 !== l) {
                                    // We assume the child nodes are in the same order as the child instances.
                                    for (;null !== a; a = a.nextSibling) if (r(a, l)) {
                                        i(u, a);
                                        continue e;
                                    }
                                    f(!1, "Unable to find element with ID %s.", l);
                                }
                            }
                            e._flags |= m.hasCachedChildNodes;
                        }
                    }
                    /**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
                    function u(e) {
                        if (e[g]) return e[g];
                        for (// Walk up the tree until we find an ancestor whose instance we have cached.
                        var t = []; !e[g]; ) {
                            if (t.push(e), !e.parentNode) // Top of the tree. This node must not be part of a React tree (or is
                            // unmounted, potentially).
                            return null;
                            e = e.parentNode;
                        }
                        for (var n, r; e && (r = e[g]); e = t.pop()) n = r, t.length && s(r, e);
                        return n;
                    }
                    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
                    function l(e) {
                        var t = u(e);
                        return null != t && t._hostNode === e ? t : null;
                    }
                    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
                    function c(e) {
                        if (// Without this first invariant, passing a non-DOM-component triggers the next
                        // invariant for a missing parent, which is super confusing.
                        void 0 === e._hostNode && f(!1, "getNodeFromInstance: Invalid argument."), e._hostNode) return e._hostNode;
                        for (// Walk up the tree until we find an ancestor whose DOM node we have cached.
                        var t = []; !e._hostNode; ) t.push(e), e._hostParent || f(!1, "React DOM tree root should always have a node reference."), 
                        e = e._hostParent;
                        // Now parents contains each ancestor that does *not* have a cached native
                        // node, and `inst` is the deepest ancestor that does.
                        for (;t.length; e = t.pop()) s(e, e._hostNode);
                        return e._hostNode;
                    }
                    var p = (e(126), e(11)), d = e(33), f = e(152), h = p.ID_ATTRIBUTE_NAME, m = d, g = "__reactInternalInstance$" + Math.random().toString(36).slice(2), v = {
                        getClosestInstanceFromNode: u,
                        getInstanceFromNode: l,
                        getNodeFromInstance: c,
                        precacheChildNodes: s,
                        precacheNode: i,
                        uncacheNode: a
                    };
                    t.exports = v;
                }, {
                    "11": 11,
                    "126": 126,
                    "152": 152,
                    "33": 33
                } ],
                35: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        var n = {
                            _topLevelWrapper: e,
                            _idCounter: 1,
                            _ownerDocument: t ? t.nodeType === i ? t : t.ownerDocument : null,
                            _node: t,
                            _tag: t ? t.nodeName.toLowerCase() : null,
                            _namespaceURI: t ? t.namespaceURI : null
                        };
                        return n._ancestorInfo = t ? o.updatedAncestorInfo(null, n._tag, null) : null, n;
                    }
                    var o = e(132), i = 9;
                    t.exports = r;
                }, {
                    "132": 132
                } ],
                36: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(160), o = e(9), i = e(34), a = function(e) {
                        // ReactCompositeComponent uses this:
                        this._currentElement = null, // ReactDOMComponentTree uses these:
                        this._hostNode = null, this._hostParent = null, this._hostContainerInfo = null, 
                        this._domID = 0;
                    };
                    r(a.prototype, {
                        mountComponent: function(e, t, n, r) {
                            var a = n._idCounter++;
                            this._domID = a, this._hostParent = t, this._hostContainerInfo = n;
                            var s = " react-empty: " + this._domID + " ";
                            if (e.useCreateElement) {
                                var u = n._ownerDocument, l = u.createComment(s);
                                return i.precacheNode(this, l), o(l);
                            }
                            return e.renderToStaticMarkup ? "" : "\x3c!--" + s + "--\x3e";
                        },
                        receiveComponent: function() {},
                        getHostNode: function() {
                            return i.getNodeFromInstance(this);
                        },
                        unmountComponent: function() {
                            i.uncacheNode(this);
                        }
                    }), t.exports = a;
                }, {
                    "160": 160,
                    "34": 34,
                    "9": 9
                } ],
                37: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        useCreateElement: !0,
                        useFiber: !1
                    };
                    t.exports = r;
                }, {} ],
                38: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(8), o = e(34), i = {
                        /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
                        dangerouslyProcessChildrenUpdates: function(e, t) {
                            var n = o.getNodeFromInstance(e);
                            r.processUpdates(n, t);
                        }
                    };
                    t.exports = i;
                }, {
                    "34": 34,
                    "8": 8
                } ],
                39: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        this._rootNodeID && // DOM component is still mounted; update
                        b.updateWrapper(this);
                    }
                    function o(e) {
                        return "checkbox" === e.type || "radio" === e.type ? null != e.checked : null != e.value;
                    }
                    function i(e) {
                        var t = this._currentElement.props, n = u.executeOnChange(t, e);
                        // Here we use asap to wait until all updates have propagated, which
                        // is important when using controlled components within layers:
                        // https://github.com/facebook/react/issues/1698
                        c.asap(r, this);
                        var o = t.name;
                        if ("radio" === t.type && null != o) {
                            for (var i = l.getNodeFromInstance(this), a = i; a.parentNode; ) a = a.parentNode;
                            for (var s = a.querySelectorAll("input[name=" + JSON.stringify("" + o) + '][type="radio"]'), d = 0; d < s.length; d++) {
                                var f = s[d];
                                if (f !== i && f.form === i.form) {
                                    // This will throw if radio buttons rendered by different copies of React
                                    // and the same name are rendered into the same form (same as #1939).
                                    // That's probably okay; we don't support it just as we don't support
                                    // mixing React radio buttons with non-React ones.
                                    var h = l.getInstanceFromNode(f);
                                    h || p(!1, "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."), 
                                    // If this is a controlled radio button group, forcing the input that
                                    // was previously checked to update will cause it to be come re-checked
                                    // as appropriate.
                                    c.asap(r, h);
                                }
                            }
                        }
                        return n;
                    }
                    var a = (e(126), e(160)), s = e(12), u = e(24), l = e(34), c = e(82), p = e(152), d = e(159), f = !1, h = !1, m = !1, g = !1, v = !1, y = !1, b = {
                        getHostProps: function(e, t) {
                            var n = u.getValue(t), r = u.getChecked(t);
                            return a({
                                // Make sure we set .type before any other properties (setting .value
                                // before .type means .value is lost in IE11 and below)
                                type: void 0,
                                // Make sure we set .step before .value (setting .value before .step
                                // means .value is rounded on mount, based upon step precision)
                                step: void 0,
                                // Make sure we set .min & .max before .value (to ensure proper order
                                // in corner cases such as min or max deriving from value, e.g. Issue #7170)
                                min: void 0,
                                max: void 0
                            }, t, {
                                defaultChecked: void 0,
                                defaultValue: void 0,
                                value: null != n ? n : e._wrapperState.initialValue,
                                checked: null != r ? r : e._wrapperState.initialChecked,
                                onChange: e._wrapperState.onChange
                            });
                        },
                        mountWrapper: function(e, t) {
                            u.checkPropTypes("input", t, e._currentElement._owner);
                            var n = e._currentElement._owner;
                            void 0 === t.valueLink || f || (d(!1, "`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead."), 
                            f = !0), void 0 === t.checkedLink || h || (d(!1, "`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead."), 
                            h = !0), void 0 === t.checked || void 0 === t.defaultChecked || g || (d(!1, "%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components", n && n.getName() || "A component", t.type), 
                            g = !0), void 0 === t.value || void 0 === t.defaultValue || m || (d(!1, "%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://fb.me/react-controlled-components", n && n.getName() || "A component", t.type), 
                            m = !0);
                            var r = t.defaultValue;
                            e._wrapperState = {
                                initialChecked: null != t.checked ? t.checked : t.defaultChecked,
                                initialValue: null != t.value ? t.value : r,
                                listeners: null,
                                onChange: i.bind(e),
                                controlled: o(t)
                            };
                        },
                        updateWrapper: function(e) {
                            var t = e._currentElement.props, n = o(t), r = e._currentElement._owner;
                            e._wrapperState.controlled || !n || y || (d(!1, "%s is changing an uncontrolled input of type %s to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components", r && r.getName() || "A component", t.type), 
                            y = !0), !e._wrapperState.controlled || n || v || (d(!1, "%s is changing a controlled input of type %s to be uncontrolled. Input elements should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components", r && r.getName() || "A component", t.type), 
                            v = !0);
                            // TODO: Shouldn't this be getChecked(props)?
                            var i = t.checked;
                            null != i && s.setValueForProperty(l.getNodeFromInstance(e), "checked", i || !1);
                            var a = l.getNodeFromInstance(e), c = u.getValue(t);
                            if (null != c) if (0 === c && "" === a.value) a.value = "0"; else if ("number" === t.type) {
                                // Simulate `input.valueAsNumber`. IE9 does not support it
                                var p = parseFloat(a.value, 10) || 0;
                                (// eslint-disable-next-line
                                c != p || // eslint-disable-next-line
                                c == p && a.value != c) && (// Cast `value` to a string to ensure the value is set correctly. While
                                // browsers typically do this as necessary, jsdom doesn't.
                                a.value = "" + c);
                            } else a.value !== "" + c && (// Cast `value` to a string to ensure the value is set correctly. While
                            // browsers typically do this as necessary, jsdom doesn't.
                            a.value = "" + c); else null == t.value && null != t.defaultValue && a.defaultValue !== "" + t.defaultValue && (a.defaultValue = "" + t.defaultValue), 
                            null == t.checked && null != t.defaultChecked && (a.defaultChecked = !!t.defaultChecked);
                        },
                        postMountWrapper: function(e) {
                            var t = e._currentElement.props, n = l.getNodeFromInstance(e);
                            // Detach value from defaultValue. We won't do anything if we're working on
                            // submit or reset inputs as those values & defaultValues are linked. They
                            // are not resetable nodes so this operation doesn't matter and actually
                            // removes browser-default values (eg "Submit Query") when no value is
                            // provided.
                            switch (t.type) {
                              case "submit":
                              case "reset":
                                break;

                              case "color":
                              case "date":
                              case "datetime":
                              case "datetime-local":
                              case "month":
                              case "time":
                              case "week":
                                // This fixes the no-show issue on iOS Safari and Android Chrome:
                                // https://github.com/facebook/react/issues/7233
                                n.value = "", n.value = n.defaultValue;
                                break;

                              default:
                                n.value = n.value;
                            }
                            // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
                            // this is needed to work around a chrome bug where setting defaultChecked
                            // will sometimes influence the value of checked (even after detachment).
                            // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
                            // We need to temporarily unset name to avoid disrupting radio button groups.
                            var r = n.name;
                            "" !== r && (n.name = ""), n.defaultChecked = !n.defaultChecked, n.defaultChecked = !n.defaultChecked, 
                            "" !== r && (n.name = r);
                        }
                    };
                    t.exports = b;
                }, {
                    "12": 12,
                    "126": 126,
                    "152": 152,
                    "159": 159,
                    "160": 160,
                    "24": 24,
                    "34": 34,
                    "82": 82
                } ],
                40: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t, n) {
                        if (l.hasOwnProperty(t) && l[t]) return !0;
                        if (c.test(t)) {
                            var r = t.toLowerCase(), o = a.getPossibleStandardName.hasOwnProperty(r) ? a.getPossibleStandardName[r] : null;
                            // If this is an aria-* attribute, but is not listed in the known DOM
                            // DOM properties, then it is an invalid aria-* attribute.
                            if (null == o) return l[t] = !0, !1;
                            // aria-* attributes should be lowercase; suggest the lowercase version.
                            if (t !== o) return u(!1, "Unknown ARIA attribute %s. Did you mean %s?%s", t, o, s.getStackAddendumByID(n)), 
                            l[t] = !0, !0;
                        }
                        return !0;
                    }
                    function o(e, t) {
                        var n = [];
                        for (var o in t.props) {
                            r(t.type, o, e) || n.push(o);
                        }
                        var i = n.map(function(e) {
                            return "`" + e + "`";
                        }).join(", ");
                        1 === n.length ? u(!1, "Invalid aria prop %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s", i, t.type, s.getStackAddendumByID(e)) : n.length > 1 && u(!1, "Invalid aria props %s on <%s> tag. For details, see https://fb.me/invalid-aria-prop%s", i, t.type, s.getStackAddendumByID(e));
                    }
                    function i(e, t) {
                        null != t && "string" == typeof t.type && (t.type.indexOf("-") >= 0 || t.props.is || o(e, t));
                    }
                    var a = e(11), s = e(133), u = e(159), l = {}, c = new RegExp("^(aria)-[" + a.ATTRIBUTE_NAME_CHAR + "]*$"), p = {
                        onBeforeMountComponent: function(e, t) {
                            i(e, t);
                        },
                        onBeforeUpdateComponent: function(e, t) {
                            i(e, t);
                        }
                    };
                    t.exports = p;
                }, {
                    "11": 11,
                    "133": 133,
                    "159": 159
                } ],
                41: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        null != t && ("input" !== t.type && "textarea" !== t.type && "select" !== t.type || null == t.props || null !== t.props.value || a || (i(!1, "`value` prop on `%s` should not be null. Consider using the empty string to clear the component or `undefined` for uncontrolled components.%s", t.type, o.getStackAddendumByID(e)), 
                        a = !0));
                    }
                    var o = e(133), i = e(159), a = !1, s = {
                        onBeforeMountComponent: function(e, t) {
                            r(e, t);
                        },
                        onBeforeUpdateComponent: function(e, t) {
                            r(e, t);
                        }
                    };
                    t.exports = s;
                }, {
                    "133": 133,
                    "159": 159
                } ],
                42: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        var t = "";
                        // Flatten children and warn if they aren't strings or numbers;
                        // invalid types are ignored.
                        return i.Children.forEach(e, function(e) {
                            null != e && ("string" == typeof e || "number" == typeof e ? t += e : l || (l = !0, 
                            u(!1, "Only strings and numbers are supported as <option> children.")));
                        }), t;
                    }
                    var o = e(160), i = e(135), a = e(34), s = e(43), u = e(159), l = !1, c = {
                        mountWrapper: function(e, t, n) {
                            u(null == t.selected, "Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                            // Look up whether this option is 'selected'
                            var o = null;
                            if (null != n) {
                                var i = n;
                                "optgroup" === i._tag && (i = i._hostParent), null != i && "select" === i._tag && (o = s.getSelectValueContext(i));
                            }
                            // If the value is null (e.g., no specified value or after initial mount)
                            // or missing (e.g., for <datalist>), we don't change props.selected
                            var a = null;
                            if (null != o) {
                                var l;
                                if (l = null != t.value ? t.value + "" : r(t.children), a = !1, Array.isArray(o)) {
                                    // multiple
                                    for (var c = 0; c < o.length; c++) if ("" + o[c] === l) {
                                        a = !0;
                                        break;
                                    }
                                } else a = "" + o === l;
                            }
                            e._wrapperState = {
                                selected: a
                            };
                        },
                        postMountWrapper: function(e) {
                            // value="" should make a value attribute (#6219)
                            var t = e._currentElement.props;
                            if (null != t.value) {
                                a.getNodeFromInstance(e).setAttribute("value", t.value);
                            }
                        },
                        getHostProps: function(e, t) {
                            var n = o({
                                selected: void 0,
                                children: void 0
                            }, t);
                            // Read state only from initial mount because <select> updates value
                            // manually; we need the initial state only for server rendering
                            null != e._wrapperState.selected && (n.selected = e._wrapperState.selected);
                            var i = r(t.children);
                            return i && (n.children = i), n;
                        }
                    };
                    t.exports = c;
                }, {
                    "135": 135,
                    "159": 159,
                    "160": 160,
                    "34": 34,
                    "43": 43
                } ],
                43: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        if (this._rootNodeID && this._wrapperState.pendingUpdate) {
                            this._wrapperState.pendingUpdate = !1;
                            var e = this._currentElement.props, t = l.getValue(e);
                            null != t && a(this, Boolean(e.multiple), t);
                        }
                    }
                    function o(e) {
                        if (e) {
                            var t = e.getName();
                            if (t) return " Check the render method of `" + t + "`.";
                        }
                        return "";
                    }
                    /**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
                    function i(e, t) {
                        var n = e._currentElement._owner;
                        l.checkPropTypes("select", t, n), void 0 === t.valueLink || f || (d(!1, "`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead."), 
                        f = !0);
                        for (var r = 0; r < m.length; r++) {
                            var i = m[r];
                            if (null != t[i]) {
                                var a = Array.isArray(t[i]);
                                t.multiple && !a ? d(!1, "The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", i, o(n)) : !t.multiple && a && d(!1, "The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", i, o(n));
                            }
                        }
                    }
                    /**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
                    function a(e, t, n) {
                        var r, o, i = c.getNodeFromInstance(e).options;
                        if (t) {
                            for (r = {}, o = 0; o < n.length; o++) r["" + n[o]] = !0;
                            for (o = 0; o < i.length; o++) {
                                var a = r.hasOwnProperty(i[o].value);
                                i[o].selected !== a && (i[o].selected = a);
                            }
                        } else {
                            for (// Do not set `select.value` as exact behavior isn't consistent across all
                            // browsers for all cases.
                            r = "" + n, o = 0; o < i.length; o++) if (i[o].value === r) return void (i[o].selected = !0);
                            i.length && (i[0].selected = !0);
                        }
                    }
                    function s(e) {
                        var t = this._currentElement.props, n = l.executeOnChange(t, e);
                        return this._rootNodeID && (this._wrapperState.pendingUpdate = !0), p.asap(r, this), 
                        n;
                    }
                    var u = e(160), l = e(24), c = e(34), p = e(82), d = e(159), f = !1, h = !1, m = [ "value", "defaultValue" ], g = {
                        getHostProps: function(e, t) {
                            return u({}, t, {
                                onChange: e._wrapperState.onChange,
                                value: void 0
                            });
                        },
                        mountWrapper: function(e, t) {
                            i(e, t);
                            var n = l.getValue(t);
                            e._wrapperState = {
                                pendingUpdate: !1,
                                initialValue: null != n ? n : t.defaultValue,
                                listeners: null,
                                onChange: s.bind(e),
                                wasMultiple: Boolean(t.multiple)
                            }, void 0 === t.value || void 0 === t.defaultValue || h || (d(!1, "Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://fb.me/react-controlled-components"), 
                            h = !0);
                        },
                        getSelectValueContext: function(e) {
                            // ReactDOMOption looks at this initial value so the initial generated
                            // markup has correct `selected` attributes
                            return e._wrapperState.initialValue;
                        },
                        postUpdateWrapper: function(e) {
                            var t = e._currentElement.props;
                            // After the initial mount, we control selected-ness manually so don't pass
                            // this value down
                            e._wrapperState.initialValue = void 0;
                            var n = e._wrapperState.wasMultiple;
                            e._wrapperState.wasMultiple = Boolean(t.multiple);
                            var r = l.getValue(t);
                            null != r ? (e._wrapperState.pendingUpdate = !1, a(e, Boolean(t.multiple), r)) : n !== Boolean(t.multiple) && (// For simplicity, reapply `defaultValue` if `multiple` is toggled.
                            null != t.defaultValue ? a(e, Boolean(t.multiple), t.defaultValue) : // Revert the select back to its default unselected state.
                            a(e, Boolean(t.multiple), t.multiple ? [] : ""));
                        }
                    };
                    t.exports = g;
                }, {
                    "159": 159,
                    "160": 160,
                    "24": 24,
                    "34": 34,
                    "82": 82
                } ],
                44: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
                    function r(e, t, n, r) {
                        return e === n && t === r;
                    }
                    /**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
                    function o(e) {
                        var t = document.selection, n = t.createRange(), r = n.text.length, o = n.duplicate();
                        o.moveToElementText(e), o.setEndPoint("EndToStart", n);
                        var i = o.text.length;
                        return {
                            start: i,
                            end: i + r
                        };
                    }
                    /**
 * @param {DOMElement} node
 * @return {?object}
 */
                    function i(e) {
                        var t = window.getSelection && window.getSelection();
                        if (!t || 0 === t.rangeCount) return null;
                        var n = t.anchorNode, o = t.anchorOffset, i = t.focusNode, a = t.focusOffset, s = t.getRangeAt(0);
                        // In Firefox, range.startContainer and range.endContainer can be "anonymous
                        // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
                        // divs do not seem to expose properties, triggering a "Permission denied
                        // error" if any of its properties are accessed. The only seemingly possible
                        // way to avoid erroring is to access a property that typically works for
                        // non-anonymous divs and catch any error that may otherwise arise. See
                        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
                        try {
                            /* eslint-disable no-unused-expressions */
                            s.startContainer.nodeType, s.endContainer.nodeType;
                        } catch (e) {
                            return null;
                        }
                        // If the node and offset values are the same, the selection is collapsed.
                        // `Selection.isCollapsed` is available natively, but IE sometimes gets
                        // this value wrong.
                        var u = r(t.anchorNode, t.anchorOffset, t.focusNode, t.focusOffset), l = u ? 0 : s.toString().length, c = s.cloneRange();
                        c.selectNodeContents(e), c.setEnd(s.startContainer, s.startOffset);
                        var p = r(c.startContainer, c.startOffset, c.endContainer, c.endOffset), d = p ? 0 : c.toString().length, f = d + l, h = document.createRange();
                        h.setStart(n, o), h.setEnd(i, a);
                        var m = h.collapsed;
                        return {
                            start: m ? f : d,
                            end: m ? d : f
                        };
                    }
                    /**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
                    function a(e, t) {
                        var n, r, o = document.selection.createRange().duplicate();
                        void 0 === t.end ? (n = t.start, r = n) : t.start > t.end ? (n = t.end, r = t.start) : (n = t.start, 
                        r = t.end), o.moveToElementText(e), o.moveStart("character", n), o.setEndPoint("EndToStart", o), 
                        o.moveEnd("character", r - n), o.select();
                    }
                    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
                    function s(e, t) {
                        if (window.getSelection) {
                            var n = window.getSelection(), r = e[c()].length, o = Math.min(t.start, r), i = void 0 === t.end ? o : Math.min(t.end, r);
                            // IE 11 uses modern selection, but doesn't support the extend method.
                            // Flip backward selections, so we can set with a single range.
                            if (!n.extend && o > i) {
                                var a = i;
                                i = o, o = a;
                            }
                            var s = l(e, o), u = l(e, i);
                            if (s && u) {
                                var p = document.createRange();
                                p.setStart(s.node, s.offset), n.removeAllRanges(), o > i ? (n.addRange(p), n.extend(u.node, u.offset)) : (p.setEnd(u.node, u.offset), 
                                n.addRange(p));
                            }
                        }
                    }
                    var u = e(138), l = e(117), c = e(118), p = u.canUseDOM && "selection" in document && !("getSelection" in window), d = {
                        /**
   * @param {DOMElement} node
   */
                        getOffsets: p ? o : i,
                        /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
                        setOffsets: p ? a : s
                    };
                    t.exports = d;
                }, {
                    "117": 117,
                    "118": 118,
                    "138": 138
                } ],
                45: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = (e(126), e(160)), o = e(8), i = e(9), a = e(34), s = e(107), u = e(152), l = e(132), c = function(e) {
                        // TODO: This is really a ReactText (ReactNode), not a ReactElement
                        this._currentElement = e, this._stringText = "" + e, // ReactDOMComponentTree uses these:
                        this._hostNode = null, this._hostParent = null, // Properties
                        this._domID = 0, this._mountIndex = 0, this._closingComment = null, this._commentNodes = null;
                    };
                    r(c.prototype, {
                        /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
                        mountComponent: function(e, t, n, r) {
                            var o;
                            null != t ? o = t._ancestorInfo : null != n && (o = n._ancestorInfo), o && // parentInfo should always be present except for the top-level
                            // component when server rendering
                            l(null, this._stringText, this, o);
                            var u = n._idCounter++, c = " react-text: " + u + " ";
                            if (this._domID = u, this._hostParent = t, e.useCreateElement) {
                                var p = n._ownerDocument, d = p.createComment(c), f = p.createComment(" /react-text "), h = i(p.createDocumentFragment());
                                return i.queueChild(h, i(d)), this._stringText && i.queueChild(h, i(p.createTextNode(this._stringText))), 
                                i.queueChild(h, i(f)), a.precacheNode(this, d), this._closingComment = f, h;
                            }
                            var m = s(this._stringText);
                            return e.renderToStaticMarkup ? m : "\x3c!--" + c + "--\x3e" + m + "\x3c!-- /react-text --\x3e";
                        },
                        /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
                        receiveComponent: function(e, t) {
                            if (e !== this._currentElement) {
                                this._currentElement = e;
                                var n = "" + e;
                                if (n !== this._stringText) {
                                    // TODO: Save this as pending props and use performUpdateIfNecessary
                                    // and/or updateComponent to do the actual update for consistency with
                                    // other component types?
                                    this._stringText = n;
                                    var r = this.getHostNode();
                                    o.replaceDelimitedText(r[0], r[1], n);
                                }
                            }
                        },
                        getHostNode: function() {
                            var e = this._commentNodes;
                            if (e) return e;
                            if (!this._closingComment) for (var t = a.getNodeFromInstance(this), n = t.nextSibling; ;) {
                                if (null == n && u(!1, "Missing closing comment for text component %s", this._domID), 
                                8 === n.nodeType && " /react-text " === n.nodeValue) {
                                    this._closingComment = n;
                                    break;
                                }
                                n = n.nextSibling;
                            }
                            return e = [ this._hostNode, this._closingComment ], this._commentNodes = e, e;
                        },
                        unmountComponent: function() {
                            this._closingComment = null, this._commentNodes = null, a.uncacheNode(this);
                        }
                    }), t.exports = c;
                }, {
                    "107": 107,
                    "126": 126,
                    "132": 132,
                    "152": 152,
                    "160": 160,
                    "34": 34,
                    "8": 8,
                    "9": 9
                } ],
                46: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        this._rootNodeID && // DOM component is still mounted; update
                        f.updateWrapper(this);
                    }
                    function o(e) {
                        var t = this._currentElement.props, n = a.executeOnChange(t, e);
                        return u.asap(r, this), n;
                    }
                    var i = (e(126), e(160)), a = e(24), s = e(34), u = e(82), l = e(152), c = e(159), p = !1, d = !1, f = {
                        getHostProps: function(e, t) {
                            return null != t.dangerouslySetInnerHTML && l(!1, "`dangerouslySetInnerHTML` does not make sense on <textarea>."), 
                            i({}, t, {
                                value: void 0,
                                defaultValue: void 0,
                                children: "" + e._wrapperState.initialValue,
                                onChange: e._wrapperState.onChange
                            });
                        },
                        mountWrapper: function(e, t) {
                            a.checkPropTypes("textarea", t, e._currentElement._owner), void 0 === t.valueLink || p || (c(!1, "`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead."), 
                            p = !0), void 0 === t.value || void 0 === t.defaultValue || d || (c(!1, "Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://fb.me/react-controlled-components"), 
                            d = !0);
                            var n = a.getValue(t), r = n;
                            // Only bother fetching default value if we're going to use it
                            if (null == n) {
                                var i = t.defaultValue, s = t.children;
                                null != s && (c(!1, "Use the `defaultValue` or `value` props instead of setting children on <textarea>."), 
                                null != i && l(!1, "If you supply `defaultValue` on a <textarea>, do not pass children."), 
                                Array.isArray(s) && (s.length <= 1 || l(!1, "<textarea> can only have at most one child."), 
                                s = s[0]), i = "" + s), null == i && (i = ""), r = i;
                            }
                            e._wrapperState = {
                                initialValue: "" + r,
                                listeners: null,
                                onChange: o.bind(e)
                            };
                        },
                        updateWrapper: function(e) {
                            var t = e._currentElement.props, n = s.getNodeFromInstance(e), r = a.getValue(t);
                            if (null != r) {
                                // Cast `value` to a string to ensure the value is set correctly. While
                                // browsers typically do this as necessary, jsdom doesn't.
                                var o = "" + r;
                                // To avoid side effects (such as losing text selection), only set value if changed
                                o !== n.value && (n.value = o), null == t.defaultValue && (n.defaultValue = o);
                            }
                            null != t.defaultValue && (n.defaultValue = t.defaultValue);
                        },
                        postMountWrapper: function(e) {
                            // This is in postMount because we need access to the DOM node, which is not
                            // available until after the component has mounted.
                            var t = s.getNodeFromInstance(e), n = t.textContent;
                            // Only set node.value if textContent is equal to the expected
                            // initial value. In IE10/IE11 there is a bug where the placeholder attribute
                            // will populate textContent as well.
                            // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
                            n === e._wrapperState.initialValue && (t.value = n);
                        }
                    };
                    t.exports = f;
                }, {
                    "126": 126,
                    "152": 152,
                    "159": 159,
                    "160": 160,
                    "24": 24,
                    "34": 34,
                    "82": 82
                } ],
                47: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
                    function r(e, t) {
                        "_hostNode" in e || u(!1, "getNodeFromInstance: Invalid argument."), "_hostNode" in t || u(!1, "getNodeFromInstance: Invalid argument.");
                        for (var n = 0, r = e; r; r = r._hostParent) n++;
                        for (var o = 0, i = t; i; i = i._hostParent) o++;
                        // If A is deeper, crawl up.
                        for (;n - o > 0; ) e = e._hostParent, n--;
                        // If B is deeper, crawl up.
                        for (;o - n > 0; ) t = t._hostParent, o--;
                        for (// Walk in lockstep until we find a match.
                        var a = n; a--; ) {
                            if (e === t) return e;
                            e = e._hostParent, t = t._hostParent;
                        }
                        return null;
                    }
                    /**
 * Return if A is an ancestor of B.
 */
                    function o(e, t) {
                        "_hostNode" in e || u(!1, "isAncestor: Invalid argument."), "_hostNode" in t || u(!1, "isAncestor: Invalid argument.");
                        for (;t; ) {
                            if (t === e) return !0;
                            t = t._hostParent;
                        }
                        return !1;
                    }
                    /**
 * Return the parent instance of the passed-in instance.
 */
                    function i(e) {
                        return "_hostNode" in e || u(!1, "getParentInstance: Invalid argument."), e._hostParent;
                    }
                    /**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
                    function a(e, t, n) {
                        for (var r = []; e; ) r.push(e), e = e._hostParent;
                        var o;
                        for (o = r.length; o-- > 0; ) t(r[o], "captured", n);
                        for (o = 0; o < r.length; o++) t(r[o], "bubbled", n);
                    }
                    /**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
                    function s(e, t, n, o, i) {
                        for (var a = e && t ? r(e, t) : null, s = []; e && e !== a; ) s.push(e), e = e._hostParent;
                        for (var u = []; t && t !== a; ) u.push(t), t = t._hostParent;
                        var l;
                        for (l = 0; l < s.length; l++) n(s[l], "bubbled", o);
                        for (l = u.length; l-- > 0; ) n(u[l], "captured", i);
                    }
                    var u = (e(126), e(152));
                    t.exports = {
                        isAncestor: o,
                        getLowestCommonAncestor: r,
                        getParentInstance: i,
                        traverseTwoPhase: a,
                        traverseEnterLeave: s
                    };
                }, {
                    "126": 126,
                    "152": 152
                } ],
                48: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(135), o = e(31), i = o;
                    i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {
                        // ReactPerf and ReactTestUtils currently only work with the DOM renderer
                        // so we expose them from here, but only in DEV mode.
                        ReactPerf: e(71),
                        ReactTestUtils: e(80)
                    }, // Inject ReactDOM into React for the addons UMD build that depends on ReactDOM (TransitionGroup).
                    // We can remove this after we deprecate and remove the addons UMD build.
                    r.addons && (r.__SECRET_INJECTED_REACT_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = i), 
                    t.exports = i;
                }, {
                    "135": 135,
                    "31": 31,
                    "71": 71,
                    "80": 80
                } ],
                49: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        null != t && "string" == typeof t.type && (t.type.indexOf("-") >= 0 || t.props.is || p(e, t));
                    }
                    var o = e(11), i = e(18), a = e(133), s = e(159), u = {
                        children: !0,
                        dangerouslySetInnerHTML: !0,
                        key: !0,
                        ref: !0,
                        autoFocus: !0,
                        defaultValue: !0,
                        valueLink: !0,
                        defaultChecked: !0,
                        checkedLink: !0,
                        innerHTML: !0,
                        suppressContentEditableWarning: !0,
                        onFocusIn: !0,
                        onFocusOut: !0
                    }, l = {}, c = function(e, t, n) {
                        if (o.properties.hasOwnProperty(t) || o.isCustomAttribute(t)) return !0;
                        if (u.hasOwnProperty(t) && u[t] || l.hasOwnProperty(t) && l[t]) return !0;
                        if (i.registrationNameModules.hasOwnProperty(t)) return !0;
                        l[t] = !0;
                        var r = t.toLowerCase(), c = o.isCustomAttribute(r) ? r : o.getPossibleStandardName.hasOwnProperty(r) ? o.getPossibleStandardName[r] : null, p = i.possibleRegistrationNames.hasOwnProperty(r) ? i.possibleRegistrationNames[r] : null;
                        return null != c ? (s(!1, "Unknown DOM property %s. Did you mean %s?%s", t, c, a.getStackAddendumByID(n)), 
                        !0) : null != p && (s(!1, "Unknown event handler property %s. Did you mean `%s`?%s", t, p, a.getStackAddendumByID(n)), 
                        !0);
                    }, p = function(e, t) {
                        var n = [];
                        for (var r in t.props) {
                            c(t.type, r, e) || n.push(r);
                        }
                        var o = n.map(function(e) {
                            return "`" + e + "`";
                        }).join(", ");
                        1 === n.length ? s(!1, "Unknown prop %s on <%s> tag. Remove this prop from the element. For details, see https://fb.me/react-unknown-prop%s", o, t.type, a.getStackAddendumByID(e)) : n.length > 1 && s(!1, "Unknown props %s on <%s> tag. Remove these props from the element. For details, see https://fb.me/react-unknown-prop%s", o, t.type, a.getStackAddendumByID(e));
                    }, d = {
                        onBeforeMountComponent: function(e, t) {
                            r(e, t);
                        },
                        onBeforeUpdateComponent: function(e, t) {
                            r(e, t);
                        }
                    };
                    t.exports = d;
                }, {
                    "11": 11,
                    "133": 133,
                    "159": 159,
                    "18": 18
                } ],
                50: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e, t, n, r, o, i, a, s) {
                        try {
                            t.call(n, r, o, i, a, s);
                        } catch (t) {
                            C(E[e], "Exception thrown by hook while handling %s: %s", e, t + "\n" + t.stack), 
                            E[e] = !0;
                        }
                    }
                    function o(e, t, n, o, i, a) {
                        for (var s = 0; s < w.length; s++) {
                            var u = w[s], l = u[e];
                            l && r(e, l, u, t, n, o, i, a);
                        }
                    }
                    function i() {
                        y.purgeUnmountedComponents(), v.clearHistory();
                    }
                    function a(e) {
                        return e.reduce(function(e, t) {
                            var n = y.getOwnerID(t), r = y.getParentID(t);
                            return e[t] = {
                                displayName: y.getDisplayName(t),
                                text: y.getText(t),
                                updateCount: y.getUpdateCount(t),
                                childIDs: y.getChildIDs(t),
                                // Text nodes don't have owners but this is close enough.
                                ownerID: n || r && y.getOwnerID(r) || 0,
                                parentID: r
                            }, e;
                        }, {});
                    }
                    function s() {
                        var e = D, t = N, n = v.getHistory();
                        if (0 === S) return D = 0, N = [], void i();
                        if (t.length || n.length) {
                            var r = y.getRegisteredIDs();
                            k.push({
                                duration: x() - e,
                                measurements: t || [],
                                operations: n || [],
                                treeSnapshot: a(r)
                            });
                        }
                        i(), D = x(), N = [];
                    }
                    function u(e) {
                        arguments.length > 1 && void 0 !== arguments[1] && arguments[1] && 0 === e || e || C(!1, "ReactDebugTool: debugID may not be empty.");
                    }
                    function l(e, t) {
                        0 !== S && (P && !O && (C(!1, "There is an internal error in the React performance measurement code. Did not expect %s timer to start while %s timer is still in progress for %s instance.", t, P || "no", e === I ? "the same" : "another"), 
                        O = !0), R = x(), A = 0, I = e, P = t);
                    }
                    function c(e, t) {
                        0 !== S && (P === t || O || (C(!1, "There is an internal error in the React performance measurement code. We did not expect %s timer to stop while %s timer is still in progress for %s instance. Please report this as a bug in React.", t, P || "no", e === I ? "the same" : "another"), 
                        O = !0), _ && N.push({
                            timerType: t,
                            instanceID: e,
                            duration: x() - R - A
                        }), R = 0, A = 0, I = null, P = null);
                    }
                    function p() {
                        var e = {
                            startTime: R,
                            nestedFlushStartTime: x(),
                            debugID: I,
                            timerType: P
                        };
                        T.push(e), R = 0, A = 0, I = null, P = null;
                    }
                    function d() {
                        var e = T.pop(), t = e.startTime, n = e.nestedFlushStartTime, r = e.debugID, o = e.timerType, i = x() - n;
                        R = t, A += i, I = r, P = o;
                    }
                    function f(e) {
                        if (!_ || !M) return !1;
                        var t = y.getElement(e);
                        return null != t && "object" == typeof t && !("string" == typeof t.type);
                    }
                    function h(e, t) {
                        if (f(e)) {
                            var n = e + "::" + t;
                            F = x(), performance.mark(n);
                        }
                    }
                    function m(e, t) {
                        if (f(e)) {
                            var n = e + "::" + t, r = y.getDisplayName(e) || "Unknown";
                            if (x() - F > .1) {
                                var o = r + " [" + t + "]";
                                performance.measure(o, n);
                            }
                            performance.clearMarks(n), o && performance.clearMeasures(o);
                        }
                    }
                    var g = e(65), v = e(60), y = e(133), b = e(138), x = e(157), C = e(159), w = [], E = {}, _ = !1, k = [], T = [], S = 0, N = [], D = 0, I = null, R = 0, A = 0, P = null, O = !1, F = 0, M = "undefined" != typeof performance && "function" == typeof performance.mark && "function" == typeof performance.clearMarks && "function" == typeof performance.measure && "function" == typeof performance.clearMeasures, j = {
                        addHook: function(e) {
                            w.push(e);
                        },
                        removeHook: function(e) {
                            for (var t = 0; t < w.length; t++) w[t] === e && (w.splice(t, 1), t--);
                        },
                        isProfiling: function() {
                            return _;
                        },
                        beginProfiling: function() {
                            _ || (_ = !0, k.length = 0, s(), j.addHook(v));
                        },
                        endProfiling: function() {
                            _ && (_ = !1, s(), j.removeHook(v));
                        },
                        getFlushHistory: function() {
                            return k;
                        },
                        onBeginFlush: function() {
                            S++, s(), p(), o("onBeginFlush");
                        },
                        onEndFlush: function() {
                            s(), S--, d(), o("onEndFlush");
                        },
                        onBeginLifeCycleTimer: function(e, t) {
                            u(e), o("onBeginLifeCycleTimer", e, t), h(e, t), l(e, t);
                        },
                        onEndLifeCycleTimer: function(e, t) {
                            u(e), c(e, t), m(e, t), o("onEndLifeCycleTimer", e, t);
                        },
                        onBeginProcessingChildContext: function() {
                            o("onBeginProcessingChildContext");
                        },
                        onEndProcessingChildContext: function() {
                            o("onEndProcessingChildContext");
                        },
                        onHostOperation: function(e) {
                            u(e.instanceID), o("onHostOperation", e);
                        },
                        onSetState: function() {
                            o("onSetState");
                        },
                        onSetChildren: function(e, t) {
                            u(e), t.forEach(u), o("onSetChildren", e, t);
                        },
                        onBeforeMountComponent: function(e, t, n) {
                            u(e), u(n, !0), o("onBeforeMountComponent", e, t, n), h(e, "mount");
                        },
                        onMountComponent: function(e) {
                            u(e), m(e, "mount"), o("onMountComponent", e);
                        },
                        onBeforeUpdateComponent: function(e, t) {
                            u(e), o("onBeforeUpdateComponent", e, t), h(e, "update");
                        },
                        onUpdateComponent: function(e) {
                            u(e), m(e, "update"), o("onUpdateComponent", e);
                        },
                        onBeforeUnmountComponent: function(e) {
                            u(e), o("onBeforeUnmountComponent", e), h(e, "unmount");
                        },
                        onUnmountComponent: function(e) {
                            u(e), m(e, "unmount"), o("onUnmountComponent", e);
                        },
                        onTestEvent: function() {
                            o("onTestEvent");
                        }
                    };
                    // TODO remove these when RN/www gets updated
                    j.addDevtool = j.addHook, j.removeDevtool = j.removeHook, j.addHook(g), j.addHook(y), 
                    /[?&]react_perf\b/.test(b.canUseDOM && window.location.href || "") && j.beginProfiling(), 
                    t.exports = j;
                }, {
                    "133": 133,
                    "138": 138,
                    "157": 157,
                    "159": 159,
                    "60": 60,
                    "65": 65
                } ],
                51: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        this.reinitializeTransaction();
                    }
                    var o = e(160), i = e(82), a = e(100), s = e(144), u = {
                        initialize: s,
                        close: function() {
                            d.isBatchingUpdates = !1;
                        }
                    }, l = {
                        initialize: s,
                        close: i.flushBatchedUpdates.bind(i)
                    }, c = [ l, u ];
                    o(r.prototype, a, {
                        getTransactionWrappers: function() {
                            return c;
                        }
                    });
                    var p = new r(), d = {
                        isBatchingUpdates: !1,
                        /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
                        batchedUpdates: function(e, t, n, r, o, i) {
                            var a = d.isBatchingUpdates;
                            // The code is written this way to avoid extra allocations
                            // The code is written this way to avoid extra allocations
                            return d.isBatchingUpdates = !0, a ? e(t, n, r, o, i) : p.perform(e, null, t, n, r, o, i);
                        }
                    };
                    t.exports = d;
                }, {
                    "100": 100,
                    "144": 144,
                    "160": 160,
                    "82": 82
                } ],
                52: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        E || (E = !0, y.EventEmitter.injectReactEventListener(v), /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
                        y.EventPluginHub.injectEventPluginOrder(s), y.EventPluginUtils.injectComponentTree(d), 
                        y.EventPluginUtils.injectTreeTraversal(h), /**
   * Some important event plugins included by default (without having to require
   * them).
   */
                        y.EventPluginHub.injectEventPluginsByName({
                            SimpleEventPlugin: w,
                            EnterLeaveEventPlugin: u,
                            ChangeEventPlugin: a,
                            SelectEventPlugin: C,
                            BeforeInputEventPlugin: i
                        }), y.HostComponent.injectGenericComponentClass(p), y.HostComponent.injectTextComponentClass(m), 
                        y.DOMProperty.injectDOMPropertyConfig(o), y.DOMProperty.injectDOMPropertyConfig(l), 
                        y.DOMProperty.injectDOMPropertyConfig(x), y.EmptyComponent.injectEmptyComponentFactory(function(e) {
                            return new f(e);
                        }), y.Updates.injectReconcileTransaction(b), y.Updates.injectBatchingStrategy(g), 
                        y.Component.injectEnvironment(c));
                    }
                    var o = e(1), i = e(3), a = e(7), s = e(14), u = e(15), l = e(22), c = e(28), p = e(32), d = e(34), f = e(36), h = e(47), m = e(45), g = e(51), v = e(57), y = e(61), b = e(74), x = e(84), C = e(85), w = e(86), E = !1;
                    t.exports = {
                        inject: r
                    };
                }, {
                    "1": 1,
                    "14": 14,
                    "15": 15,
                    "22": 22,
                    "28": 28,
                    "3": 3,
                    "32": 32,
                    "34": 34,
                    "36": 36,
                    "45": 45,
                    "47": 47,
                    "51": 51,
                    "57": 57,
                    "61": 61,
                    "7": 7,
                    "74": 74,
                    "84": 84,
                    "85": 85,
                    "86": 86
                } ],
                53: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    // The Symbol used to tag the ReactElement type. If there is no native Symbol
                    // nor polyfill, then a plain number is used for performance.
                    var r = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
                    t.exports = r;
                }, {} ],
                54: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r, o = {
                        injectEmptyComponentFactory: function(e) {
                            r = e;
                        }
                    }, i = {
                        create: function(e) {
                            return r(e);
                        }
                    };
                    i.injection = o, t.exports = i;
                }, {} ],
                55: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
                    function r(e, t, n) {
                        try {
                            t(n);
                        } catch (e) {
                            null === o && (o = e);
                        }
                    }
                    var o = null, i = {
                        invokeGuardedCallback: r,
                        /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
                        invokeGuardedCallbackWithCatch: r,
                        /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
                        rethrowCaughtError: function() {
                            if (o) {
                                var e = o;
                                throw o = null, e;
                            }
                        }
                    };
                    /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
                    if ("undefined" != typeof window && "function" == typeof window.dispatchEvent && "undefined" != typeof document && "function" == typeof document.createEvent) {
                        var a = document.createElement("react");
                        i.invokeGuardedCallback = function(e, t, n) {
                            var r = t.bind(null, n), o = "react-" + e;
                            a.addEventListener(o, r, !1);
                            var i = document.createEvent("Event");
                            i.initEvent(o, !1, !1), a.dispatchEvent(i), a.removeEventListener(o, r, !1);
                        };
                    }
                    t.exports = i;
                }, {} ],
                56: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        o.enqueueEvents(e), o.processEventQueue(!1);
                    }
                    var o = e(17), i = {
                        /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
                        handleTopLevel: function(e, t, n, i) {
                            r(o.extractEvents(e, t, n, i));
                        }
                    };
                    t.exports = i;
                }, {
                    "17": 17
                } ],
                57: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
                    function r(e) {
                        // TODO: It may be a good idea to cache this to prevent unnecessary DOM
                        // traversal, but caching is difficult to do correctly without using a
                        // mutation observer to listen for all DOM changes.
                        for (;e._hostParent; ) e = e._hostParent;
                        var t = p.getNodeFromInstance(e), n = t.parentNode;
                        return p.getClosestInstanceFromNode(n);
                    }
                    // Used to store ancestor hierarchy in top level callback
                    function o(e, t) {
                        this.topLevelType = e, this.nativeEvent = t, this.ancestors = [];
                    }
                    function i(e) {
                        var t = f(e.nativeEvent), n = p.getClosestInstanceFromNode(t), o = n;
                        do {
                            e.ancestors.push(o), o = o && r(o);
                        } while (o);
                        for (var i = 0; i < e.ancestors.length; i++) n = e.ancestors[i], m._handleTopLevel(e.topLevelType, n, e.nativeEvent, f(e.nativeEvent));
                    }
                    function a(e) {
                        e(h(window));
                    }
                    var s = e(160), u = e(137), l = e(138), c = e(25), p = e(34), d = e(82), f = e(114), h = e(149);
                    s(o.prototype, {
                        destructor: function() {
                            this.topLevelType = null, this.nativeEvent = null, this.ancestors.length = 0;
                        }
                    }), c.addPoolingTo(o, c.twoArgumentPooler);
                    var m = {
                        _enabled: !0,
                        _handleTopLevel: null,
                        WINDOW_HANDLE: l.canUseDOM ? window : null,
                        setHandleTopLevel: function(e) {
                            m._handleTopLevel = e;
                        },
                        setEnabled: function(e) {
                            m._enabled = !!e;
                        },
                        isEnabled: function() {
                            return m._enabled;
                        },
                        /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
                        trapBubbledEvent: function(e, t, n) {
                            return n ? u.listen(n, t, m.dispatchEvent.bind(null, e)) : null;
                        },
                        /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
                        trapCapturedEvent: function(e, t, n) {
                            return n ? u.capture(n, t, m.dispatchEvent.bind(null, e)) : null;
                        },
                        monitorScrollValue: function(e) {
                            var t = a.bind(null, e);
                            u.listen(window, "scroll", t);
                        },
                        dispatchEvent: function(e, t) {
                            if (m._enabled) {
                                var n = o.getPooled(e, t);
                                try {
                                    // Event queue being processed in the same cycle allows
                                    // `preventDefault`.
                                    d.batchedUpdates(i, n);
                                } finally {
                                    o.release(n);
                                }
                            }
                        }
                    };
                    t.exports = m;
                }, {
                    "114": 114,
                    "137": 137,
                    "138": 138,
                    "149": 149,
                    "160": 160,
                    "25": 25,
                    "34": 34,
                    "82": 82
                } ],
                58: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = {
                        // When true, call console.time() before and .timeEnd() after each top-level
                        // render (both initial renders and updates). Useful when looking at prod-mode
                        // timeline profiles in Chrome, for example.
                        logTopLevelRenders: !1
                    };
                    t.exports = r;
                }, {} ],
                59: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
                    function r(e) {
                        return s || a(!1, "There is no registered component for the tag %s", e.type), new s(e);
                    }
                    /**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
                    function o(e) {
                        return new u(e);
                    }
                    /**
 * @param {ReactComponent} component
 * @return {boolean}
 */
                    function i(e) {
                        return e instanceof u;
                    }
                    var a = (e(126), e(152)), s = null, u = null, l = {
                        // This accepts a class that receives the tag string. This is a catch all
                        // that can render any kind of tag.
                        injectGenericComponentClass: function(e) {
                            s = e;
                        },
                        // This accepts a text component class that takes the text string to be
                        // rendered as props.
                        injectTextComponentClass: function(e) {
                            u = e;
                        }
                    }, c = {
                        createInternalComponent: r,
                        createInstanceForText: o,
                        isTextComponent: i,
                        injection: l
                    };
                    t.exports = c;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                60: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = [], o = {
                        onHostOperation: function(e) {
                            r.push(e);
                        },
                        clearHistory: function() {
                            o._preventClearing || (r = []);
                        },
                        getHistory: function() {
                            return r;
                        }
                    };
                    t.exports = o;
                }, {} ],
                61: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(11), o = e(17), i = e(19), a = e(29), s = e(54), u = e(26), l = e(59), c = e(82), p = {
                        Component: a.injection,
                        DOMProperty: r.injection,
                        EmptyComponent: s.injection,
                        EventPluginHub: o.injection,
                        EventPluginUtils: i.injection,
                        EventEmitter: u.injection,
                        HostComponent: l.injection,
                        Updates: c.injection
                    };
                    t.exports = p;
                }, {
                    "11": 11,
                    "17": 17,
                    "19": 19,
                    "26": 26,
                    "29": 29,
                    "54": 54,
                    "59": 59,
                    "82": 82
                } ],
                62: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        return i(document.documentElement, e);
                    }
                    var o = e(44), i = e(141), a = e(146), s = e(147), u = {
                        hasSelectionCapabilities: function(e) {
                            var t = e && e.nodeName && e.nodeName.toLowerCase();
                            return t && ("input" === t && "text" === e.type || "textarea" === t || "true" === e.contentEditable);
                        },
                        getSelectionInformation: function() {
                            var e = s();
                            return {
                                focusedElem: e,
                                selectionRange: u.hasSelectionCapabilities(e) ? u.getSelection(e) : null
                            };
                        },
                        /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
                        restoreSelection: function(e) {
                            var t = s(), n = e.focusedElem, o = e.selectionRange;
                            t !== n && r(n) && (u.hasSelectionCapabilities(n) && u.setSelection(n, o), a(n));
                        },
                        /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
                        getSelection: function(e) {
                            var t;
                            if ("selectionStart" in e) // Modern browser with input or textarea.
                            t = {
                                start: e.selectionStart,
                                end: e.selectionEnd
                            }; else if (document.selection && e.nodeName && "input" === e.nodeName.toLowerCase()) {
                                // IE8 input.
                                var n = document.selection.createRange();
                                // There can only be one selection per document in IE, so it must
                                // be in our element.
                                n.parentElement() === e && (t = {
                                    start: -n.moveStart("character", -e.value.length),
                                    end: -n.moveEnd("character", -e.value.length)
                                });
                            } else // Content editable or old IE textarea.
                            t = o.getOffsets(e);
                            return t || {
                                start: 0,
                                end: 0
                            };
                        },
                        /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
                        setSelection: function(e, t) {
                            var n = t.start, r = t.end;
                            if (void 0 === r && (r = n), "selectionStart" in e) e.selectionStart = n, e.selectionEnd = Math.min(r, e.value.length); else if (document.selection && e.nodeName && "input" === e.nodeName.toLowerCase()) {
                                var i = e.createTextRange();
                                i.collapse(!0), i.moveStart("character", n), i.moveEnd("character", r - n), i.select();
                            } else o.setOffsets(e, t);
                        }
                    };
                    t.exports = u;
                }, {
                    "141": 141,
                    "146": 146,
                    "147": 147,
                    "44": 44
                } ],
                63: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */
                    // TODO: Replace this with ES6: var ReactInstanceMap = new Map();
                    var r = {
                        /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
                        remove: function(e) {
                            e._reactInternalInstance = void 0;
                        },
                        get: function(e) {
                            return e._reactInternalInstance;
                        },
                        has: function(e) {
                            return void 0 !== e._reactInternalInstance;
                        },
                        set: function(e, t) {
                            e._reactInternalInstance = t;
                        }
                    };
                    t.exports = r;
                }, {} ],
                64: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    // Trust the developer to only use ReactInstrumentation with a __DEV__ check
                    var r = null;
                    r = e(50), t.exports = {
                        debugTool: r
                    };
                }, {
                    "50": 50
                } ],
                65: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = e(159), o = !1, i = function() {
                        r(!o, "setState(...): Cannot call setState() inside getChildContext()");
                    }, a = {
                        onBeginProcessingChildContext: function() {
                            o = !0;
                        },
                        onEndProcessingChildContext: function() {
                            o = !1;
                        },
                        onSetState: function() {
                            i();
                        }
                    };
                    t.exports = a;
                }, {
                    "159": 159
                } ],
                66: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(103), o = /\/?>/, i = /^<\!\-\-/, a = {
                        CHECKSUM_ATTR_NAME: "data-react-checksum",
                        /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
                        addChecksumToMarkup: function(e) {
                            var t = r(e);
                            // Add checksum (handle both parent tags, comments and self-closing tags)
                            // Add checksum (handle both parent tags, comments and self-closing tags)
                            return i.test(e) ? e : e.replace(o, " " + a.CHECKSUM_ATTR_NAME + '="' + t + '"$&');
                        },
                        /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
                        canReuseMarkup: function(e, t) {
                            var n = t.getAttribute(a.CHECKSUM_ATTR_NAME);
                            return n = n && parseInt(n, 10), r(e) === n;
                        }
                    };
                    t.exports = a;
                }, {
                    "103": 103
                } ],
                67: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
                    function r(e, t) {
                        for (var n = Math.min(e.length, t.length), r = 0; r < n; r++) if (e.charAt(r) !== t.charAt(r)) return r;
                        return e.length === t.length ? -1 : n;
                    }
                    /**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
                    function o(e) {
                        return e ? e.nodeType === U ? e.documentElement : e.firstChild : null;
                    }
                    function i(e) {
                        // If node is something like a window, document, or text node, none of
                        // which support attributes or a .getAttribute method, gracefully return
                        // the empty string, as if the attribute were missing.
                        return e.getAttribute && e.getAttribute(M) || "";
                    }
                    /**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
                    function a(e, t, n, r, o) {
                        var i;
                        if (E.logTopLevelRenders) {
                            var a = e._currentElement.props.child, s = a.type;
                            i = "React mount: " + ("string" == typeof s ? s : s.displayName || s.name), console.time(i);
                        }
                        var u = S.mountComponent(e, n, null, C(e, t), o, 0);
                        i && console.timeEnd(i), e._renderedComponent._topLevelWrapper = e, V._mountImageIntoNode(u, t, e, r, n);
                    }
                    /**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
                    function s(e, t, n, r) {
                        var o = D.ReactReconcileTransaction.getPooled(/* useCreateElement */
                        !n && w.useCreateElement);
                        o.perform(a, null, e, t, o, n, r), D.ReactReconcileTransaction.release(o);
                    }
                    /**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
                    function u(e, t, n) {
                        // http://jsperf.com/emptying-a-node
                        for (k.debugTool.onBeginFlush(), S.unmountComponent(e, n), k.debugTool.onEndFlush(), 
                        t.nodeType === U && (t = t.documentElement); t.lastChild; ) t.removeChild(t.lastChild);
                    }
                    /**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
                    function l(e) {
                        var t = o(e);
                        if (t) {
                            var n = x.getInstanceFromNode(t);
                            return !(!n || !n._hostParent);
                        }
                    }
                    /**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
                    function c(e) {
                        var t = o(e);
                        return !(!t || !d(t) || x.getInstanceFromNode(t));
                    }
                    /**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
                    function p(e) {
                        return !(!e || e.nodeType !== L && e.nodeType !== U && e.nodeType !== B);
                    }
                    /**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
                    function d(e) {
                        return p(e) && (e.hasAttribute(j) || e.hasAttribute(M));
                    }
                    function f(e) {
                        var t = o(e), n = t && x.getInstanceFromNode(t);
                        return n && !n._hostParent ? n : null;
                    }
                    function h(e) {
                        var t = f(e);
                        return t ? t._hostContainerInfo._topLevelWrapper : null;
                    }
                    var m = (e(126), e(9)), g = e(11), v = e(135), y = e(26), b = e(134), x = e(34), C = e(35), w = e(37), E = e(58), _ = e(63), k = e(64), T = e(66), S = e(75), N = e(81), D = e(82), I = e(145), R = e(121), A = e(152), P = e(128), O = e(130), F = e(159), M = g.ID_ATTRIBUTE_NAME, j = g.ROOT_ATTRIBUTE_NAME, L = 1, U = 9, B = 11, q = {}, H = 1, W = function() {
                        this.rootID = H++;
                    };
                    W.prototype.isReactComponent = {}, W.displayName = "TopLevelWrapper", W.prototype.render = function() {
                        return this.props.child;
                    }, W.isReactTopLevelWrapper = !0;
                    /**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
                    var V = {
                        TopLevelWrapper: W,
                        /**
   * Used by devtools. The keys are not important.
   */
                        _instancesByReactRootID: q,
                        /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
                        scrollMonitor: function(e, t) {
                            t();
                        },
                        /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
                        _updateRootComponent: function(e, t, n, r, o) {
                            return V.scrollMonitor(r, function() {
                                N.enqueueElementInternal(e, t, n), o && N.enqueueCallbackInternal(e, o);
                            }), e;
                        },
                        /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
                        _renderNewRootComponent: function(e, t, n, r) {
                            F(null == b.current, "_renderNewRootComponent(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.", b.current && b.current.getName() || "ReactCompositeComponent"), 
                            p(t) || A(!1, "_registerComponent(...): Target container is not a DOM element."), 
                            y.ensureScrollValueMonitoring();
                            var o = R(e, !1);
                            // The initial render is synchronous but any updates that happen during
                            // rendering, in componentWillMount or componentDidMount, will be batched
                            // according to the current batching strategy.
                            D.batchedUpdates(s, o, t, n, r);
                            var i = o._instance.rootID;
                            return q[i] = o, o;
                        },
                        /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
                        renderSubtreeIntoContainer: function(e, t, n, r) {
                            return null != e && _.has(e) || A(!1, "parentComponent must be a valid React Component"), 
                            V._renderSubtreeIntoContainer(e, t, n, r);
                        },
                        _renderSubtreeIntoContainer: function(e, t, n, r) {
                            N.validateCallback(r, "ReactDOM.render"), v.isValidElement(t) || A(!1, "ReactDOM.render(): Invalid component element.%s", "string" == typeof t ? " Instead of passing a string like 'div', pass React.createElement('div') or <div />." : "function" == typeof t ? " Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />." : // Check if it quacks like an element
                            null != t && void 0 !== t.props ? " This may be caused by unintentionally loading two independent copies of React." : ""), 
                            F(!n || !n.tagName || "BODY" !== n.tagName.toUpperCase(), "render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
                            var a, s = v.createElement(W, {
                                child: t
                            });
                            if (e) {
                                var u = _.get(e);
                                a = u._processChildContext(u._context);
                            } else a = I;
                            var c = h(n);
                            if (c) {
                                var p = c._currentElement, d = p.props.child;
                                if (O(d, t)) {
                                    var f = c._renderedComponent.getPublicInstance(), m = r && function() {
                                        r.call(f);
                                    };
                                    return V._updateRootComponent(c, s, a, n, m), f;
                                }
                                V.unmountComponentAtNode(n);
                            }
                            var g = o(n), y = g && !!i(g), b = l(n);
                            if (F(!b, "render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), 
                            !y || g.nextSibling) for (var x = g; x; ) {
                                if (i(x)) {
                                    F(!1, "render(): Target node has markup rendered by React, but there are unrelated nodes as well. This is most commonly caused by white-space inserted around server-rendered markup.");
                                    break;
                                }
                                x = x.nextSibling;
                            }
                            var C = y && !c && !b, w = V._renderNewRootComponent(s, n, C, a)._renderedComponent.getPublicInstance();
                            return r && r.call(w), w;
                        },
                        /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
                        render: function(e, t, n) {
                            return V._renderSubtreeIntoContainer(null, e, t, n);
                        },
                        /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
                        unmountComponentAtNode: function(e) {
                            F(null == b.current, "unmountComponentAtNode(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate. Check the render method of %s.", b.current && b.current.getName() || "ReactCompositeComponent"), 
                            p(e) || A(!1, "unmountComponentAtNode(...): Target container is not a DOM element."), 
                            F(!c(e), "unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
                            var t = h(e);
                            if (!t) {
                                // Check if the node being unmounted was rendered by React, but isn't a
                                // root node.
                                var n = l(e), r = 1 === e.nodeType && e.hasAttribute(j);
                                return F(!n, "unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", r ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component."), 
                                !1;
                            }
                            return delete q[t._instance.rootID], D.batchedUpdates(u, t, e, !1), !0;
                        },
                        _mountImageIntoNode: function(e, t, n, i, a) {
                            if (p(t) || A(!1, "mountComponentIntoNode(...): Target container is not valid."), 
                            i) {
                                var s = o(t);
                                if (T.canReuseMarkup(e, s)) return void x.precacheNode(n, s);
                                var u = s.getAttribute(T.CHECKSUM_ATTR_NAME);
                                s.removeAttribute(T.CHECKSUM_ATTR_NAME);
                                var l = s.outerHTML;
                                s.setAttribute(T.CHECKSUM_ATTR_NAME, u);
                                var c, d = e;
                                t.nodeType === L ? (c = document.createElement("div"), c.innerHTML = e, d = c.innerHTML) : (c = document.createElement("iframe"), 
                                document.body.appendChild(c), c.contentDocument.write(e), d = c.contentDocument.documentElement.outerHTML, 
                                document.body.removeChild(c));
                                var f = r(d, l), h = " (client) " + d.substring(f - 20, f + 20) + "\n (server) " + l.substring(f - 20, f + 20);
                                t.nodeType === U && A(!1, "You're trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s", h), 
                                F(!1, "React attempted to reuse markup in a container but the checksum was invalid. This generally means that you are using server rendering and the markup generated on the server was not what the client was expecting. React injected new markup to compensate which works but you have lost many of the benefits of server rendering. Instead, figure out why the markup being generated is different on the client or server:\n%s", h);
                            }
                            if (t.nodeType === U && A(!1, "You're trying to render a component to the document but you didn't use server rendering. We can't do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering."), 
                            a.useCreateElement) {
                                for (;t.lastChild; ) t.removeChild(t.lastChild);
                                m.insertTreeBefore(t, e, null);
                            } else P(t, e), x.precacheNode(n, t.firstChild);
                            var g = x.getInstanceFromNode(t.firstChild);
                            0 !== g._debugID && k.debugTool.onHostOperation({
                                instanceID: g._debugID,
                                type: "mount",
                                payload: e.toString()
                            });
                        }
                    };
                    t.exports = V;
                }, {
                    "11": 11,
                    "121": 121,
                    "126": 126,
                    "128": 128,
                    "130": 130,
                    "134": 134,
                    "135": 135,
                    "145": 145,
                    "152": 152,
                    "159": 159,
                    "26": 26,
                    "34": 34,
                    "35": 35,
                    "37": 37,
                    "58": 58,
                    "63": 63,
                    "64": 64,
                    "66": 66,
                    "75": 75,
                    "81": 81,
                    "82": 82,
                    "9": 9
                } ],
                68: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
                    function r(e, t, n) {
                        // NOTE: Null values reduce hidden classes.
                        return {
                            type: "INSERT_MARKUP",
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: n,
                            afterNode: t
                        };
                    }
                    /**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
                    function o(e, t, n) {
                        // NOTE: Null values reduce hidden classes.
                        return {
                            type: "MOVE_EXISTING",
                            content: null,
                            fromIndex: e._mountIndex,
                            fromNode: h.getHostNode(e),
                            toIndex: n,
                            afterNode: t
                        };
                    }
                    /**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
                    function i(e, t) {
                        // NOTE: Null values reduce hidden classes.
                        return {
                            type: "REMOVE_NODE",
                            content: null,
                            fromIndex: e._mountIndex,
                            fromNode: t,
                            toIndex: null,
                            afterNode: null
                        };
                    }
                    /**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
                    function a(e) {
                        // NOTE: Null values reduce hidden classes.
                        return {
                            type: "SET_MARKUP",
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: null,
                            afterNode: null
                        };
                    }
                    /**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
                    function s(e) {
                        // NOTE: Null values reduce hidden classes.
                        return {
                            type: "TEXT_CONTENT",
                            content: e,
                            fromIndex: null,
                            fromNode: null,
                            toIndex: null,
                            afterNode: null
                        };
                    }
                    /**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
                    function u(e, t) {
                        return t && (e = e || [], e.push(t)), e;
                    }
                    /**
 * Processes any enqueued updates.
 *
 * @private
 */
                    function l(e, t) {
                        c.processChildrenUpdates(e, t);
                    }
                    var c = (e(126), e(29)), p = e(63), d = e(64), f = e(134), h = e(75), m = e(27), g = e(144), v = e(109), y = e(152), b = g, x = function(e) {
                        if (!e._debugID) {
                            // Check for ART-like instances. TODO: This is silly/gross.
                            var t;
                            (t = p.get(e)) && (e = t);
                        }
                        return e._debugID;
                    };
                    b = function(e) {
                        var t = x(this);
                        // TODO: React Native empty components are also multichild.
                        // This means they still get into this method but don't have _debugID.
                        0 !== t && d.debugTool.onSetChildren(t, e ? Object.keys(e).map(function(t) {
                            return e[t]._debugID;
                        }) : []);
                    };
                    /**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
                    var C = {
                        /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
                        Mixin: {
                            _reconcilerInstantiateChildren: function(e, t, n) {
                                var r = x(this);
                                if (this._currentElement) try {
                                    return f.current = this._currentElement._owner, m.instantiateChildren(e, t, n, r);
                                } finally {
                                    f.current = null;
                                }
                                return m.instantiateChildren(e, t, n);
                            },
                            _reconcilerUpdateChildren: function(e, t, n, r, o, i) {
                                var a, s = 0;
                                if (s = x(this), this._currentElement) {
                                    try {
                                        f.current = this._currentElement._owner, a = v(t, s);
                                    } finally {
                                        f.current = null;
                                    }
                                    return m.updateChildren(e, a, n, r, o, this, this._hostContainerInfo, i, s), a;
                                }
                                return a = v(t, s), m.updateChildren(e, a, n, r, o, this, this._hostContainerInfo, i, s), 
                                a;
                            },
                            /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
                            mountChildren: function(e, t, n) {
                                var r = this._reconcilerInstantiateChildren(e, t, n);
                                this._renderedChildren = r;
                                var o = [], i = 0;
                                for (var a in r) if (r.hasOwnProperty(a)) {
                                    var s = r[a], u = 0;
                                    u = x(this);
                                    var l = h.mountComponent(s, t, this, this._hostContainerInfo, n, u);
                                    s._mountIndex = i++, o.push(l);
                                }
                                return b.call(this, r), o;
                            },
                            /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
                            updateTextContent: function(e) {
                                var t = this._renderedChildren;
                                // Remove any rendered children.
                                m.unmountChildren(t, !1);
                                for (var n in t) t.hasOwnProperty(n) && y(!1, "updateTextContent called on non-empty component.");
                                l(this, [ s(e) ]);
                            },
                            /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
                            updateMarkup: function(e) {
                                var t = this._renderedChildren;
                                // Remove any rendered children.
                                m.unmountChildren(t, !1);
                                for (var n in t) t.hasOwnProperty(n) && y(!1, "updateTextContent called on non-empty component.");
                                l(this, [ a(e) ]);
                            },
                            /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
                            updateChildren: function(e, t, n) {
                                // Hook used by React ART
                                this._updateChildren(e, t, n);
                            },
                            /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
                            _updateChildren: function(e, t, n) {
                                var r = this._renderedChildren, o = {}, i = [], a = this._reconcilerUpdateChildren(r, e, i, o, t, n);
                                if (a || r) {
                                    var s, c = null, p = 0, d = 0, f = 0, m = null;
                                    for (s in a) if (a.hasOwnProperty(s)) {
                                        var g = r && r[s], v = a[s];
                                        g === v ? (c = u(c, this.moveChild(g, m, p, d)), d = Math.max(g._mountIndex, d), 
                                        g._mountIndex = p) : (g && (// Update `lastIndex` before `_mountIndex` gets unset by unmounting.
                                        d = Math.max(g._mountIndex, d)), // The child must be instantiated before it's mounted.
                                        c = u(c, this._mountChildAtIndex(v, i[f], m, p, t, n)), f++), p++, m = h.getHostNode(v);
                                    }
                                    // Remove children that are no longer present.
                                    for (s in o) o.hasOwnProperty(s) && (c = u(c, this._unmountChild(r[s], o[s])));
                                    c && l(this, c), this._renderedChildren = a, b.call(this, a);
                                }
                            },
                            /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
                            unmountChildren: function(e) {
                                var t = this._renderedChildren;
                                m.unmountChildren(t, e), this._renderedChildren = null;
                            },
                            /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
                            moveChild: function(e, t, n, r) {
                                // If the index of `child` is less than `lastIndex`, then it needs to
                                // be moved. Otherwise, we do not need to move it because a child will be
                                // inserted or moved before `child`.
                                if (e._mountIndex < r) return o(e, t, n);
                            },
                            /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
                            createChild: function(e, t, n) {
                                return r(n, t, e._mountIndex);
                            },
                            /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
                            removeChild: function(e, t) {
                                return i(e, t);
                            },
                            /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
                            _mountChildAtIndex: function(e, t, n, r, o, i) {
                                return e._mountIndex = r, this.createChild(e, n, t);
                            },
                            /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
                            _unmountChild: function(e, t) {
                                var n = this.removeChild(e, t);
                                return e._mountIndex = null, n;
                            }
                        }
                    };
                    t.exports = C;
                }, {
                    "109": 109,
                    "126": 126,
                    "134": 134,
                    "144": 144,
                    "152": 152,
                    "27": 27,
                    "29": 29,
                    "63": 63,
                    "64": 64,
                    "75": 75
                } ],
                69: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = (e(126), e(135)), o = e(152), i = {
                        HOST: 0,
                        COMPOSITE: 1,
                        EMPTY: 2,
                        getType: function(e) {
                            return null === e || !1 === e ? i.EMPTY : r.isValidElement(e) ? "function" == typeof e.type ? i.COMPOSITE : i.HOST : void o(!1, "Unexpected node: %s", e);
                        }
                    };
                    t.exports = i;
                }, {
                    "126": 126,
                    "135": 135,
                    "152": 152
                } ],
                70: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
                    function r(e) {
                        return !(!e || "function" != typeof e.attachRef || "function" != typeof e.detachRef);
                    }
                    var o = (e(126), e(152)), i = {
                        /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
                        addComponentAsRefTo: function(e, t, n) {
                            r(n) || o(!1, "addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner)."), 
                            n.attachRef(t, e);
                        },
                        /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
                        removeComponentAsRefFrom: function(e, t, n) {
                            r(n) || o(!1, "removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component's `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).");
                            var i = n.getPublicInstance();
                            // Check that `component`'s owner is still alive and that `component` is still the current ref
                            // because we do not want to detach the ref if another component stole it.
                            i && i.refs[t] === e.getPublicInstance() && n.detachRef(t);
                        }
                    };
                    t.exports = i;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                71: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2, n = Math.pow(10, t);
                        return Math.floor(e * n) / n;
                    }
                    // Flow type definition of console.table is too strict right now, see
                    // https://github.com/facebook/flow/pull/2353 for updates
                    function o(e) {
                        console.table(e);
                    }
                    function i() {
                        return C.getFlushHistory();
                    }
                    function a() {
                        function e(e, t, o, i) {
                            var a = e[t].displayName, s = a, u = n[s];
                            u || (r[s] = {}, u = n[s] = {
                                key: s,
                                instanceCount: 0,
                                counts: {},
                                durations: {},
                                totalDuration: 0
                            }), u.durations[o] || (u.durations[o] = 0), u.counts[o] || (u.counts[o] = 0), r[s][t] = !0, 
                            i(u);
                        }
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : i(), n = {}, r = {};
                        return t.forEach(function(t) {
                            var n = t.measurements, r = t.treeSnapshot;
                            n.forEach(function(t) {
                                var n = t.duration, o = t.instanceID, i = t.timerType;
                                e(r, o, i, function(e) {
                                    e.totalDuration += n, e.durations[i] += n, e.counts[i]++;
                                });
                            });
                        }), Object.keys(n).map(function(e) {
                            return x({}, n[e], {
                                instanceCount: Object.keys(r[e]).length
                            });
                        }).sort(function(e, t) {
                            return t.totalDuration - e.totalDuration;
                        });
                    }
                    function s() {
                        function e(e, t, o) {
                            var i = e[t], a = i.displayName, s = i.ownerID, u = e[s], l = (u ? u.displayName + " > " : "") + a, c = n[l];
                            c || (r[l] = {}, c = n[l] = {
                                key: l,
                                instanceCount: 0,
                                inclusiveRenderDuration: 0,
                                renderCount: 0
                            }), r[l][t] = !0, o(c);
                        }
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : i(), n = {}, r = {}, o = {};
                        return t.forEach(function(e) {
                            e.measurements.forEach(function(e) {
                                var t = e.instanceID;
                                "render" === e.timerType && (o[t] = !0);
                            });
                        }), t.forEach(function(t) {
                            var n = t.measurements, r = t.treeSnapshot;
                            n.forEach(function(t) {
                                var n = t.duration, i = t.instanceID;
                                if ("render" === t.timerType) {
                                    e(r, i, function(e) {
                                        e.renderCount++;
                                    });
                                    for (var a = i; a; ) // As we traverse parents, only count inclusive time towards composites.
                                    // We know something is a composite if its render() was called.
                                    o[a] && e(r, a, function(e) {
                                        e.inclusiveRenderDuration += n;
                                    }), a = r[a].parentID;
                                }
                            });
                        }), Object.keys(n).map(function(e) {
                            return x({}, n[e], {
                                instanceCount: Object.keys(r[e]).length
                            });
                        }).sort(function(e, t) {
                            return t.inclusiveRenderDuration - e.inclusiveRenderDuration;
                        });
                    }
                    function u() {
                        function e(e, t, o) {
                            var i = e[t], a = i.displayName, s = i.ownerID, u = e[s], l = (u ? u.displayName + " > " : "") + a, c = n[l];
                            c || (r[l] = {}, c = n[l] = {
                                key: l,
                                instanceCount: 0,
                                inclusiveRenderDuration: 0,
                                renderCount: 0
                            }), r[l][t] = !0, o(c);
                        }
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : i(), n = {}, r = {};
                        return t.forEach(function(t) {
                            var n = t.measurements, r = t.treeSnapshot, o = t.operations, i = {};
                            // Find host components associated with an operation in this batch.
                            // Mark all components in their parent tree as definitely not wasted.
                            o.forEach(function(e) {
                                for (var t = e.instanceID, n = t; n; ) i[n] = !0, n = r[n].parentID;
                            });
                            // Find composite components that rendered in this batch.
                            // These are potential candidates for being wasted renders.
                            var a = {};
                            n.forEach(function(e) {
                                var t = e.instanceID;
                                "render" === e.timerType && (a[t] = !0);
                            }), n.forEach(function(t) {
                                var n = t.duration, o = t.instanceID;
                                if ("render" === t.timerType) {
                                    // If there was a DOM update below this component, or it has just been
                                    // mounted, its render() is not considered wasted.
                                    var s = r[o].updateCount;
                                    if (!i[o] && 0 !== s) {
                                        // We consider this render() wasted.
                                        e(r, o, function(e) {
                                            e.renderCount++;
                                        });
                                        for (var u = o; u; ) a[u] && !i[u] && e(r, u, function(e) {
                                            e.inclusiveRenderDuration += n;
                                        }), u = r[u].parentID;
                                    }
                                }
                            });
                        }), Object.keys(n).map(function(e) {
                            return x({}, n[e], {
                                instanceCount: Object.keys(r[e]).length
                            });
                        }).sort(function(e, t) {
                            return t.inclusiveRenderDuration - e.inclusiveRenderDuration;
                        });
                    }
                    function l() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : i(), t = [];
                        return e.forEach(function(e, n) {
                            var r = e.operations, o = e.treeSnapshot;
                            r.forEach(function(e) {
                                var r = e.instanceID, i = e.type, a = e.payload, s = o[r], u = s.displayName, l = s.ownerID, c = o[l], p = (c ? c.displayName + " > " : "") + u;
                                t.push({
                                    flushIndex: n,
                                    instanceID: r,
                                    key: p,
                                    type: i,
                                    ownerID: l,
                                    payload: a
                                });
                            });
                        }), t;
                    }
                    function c(e) {
                        o(a(e).map(function(e) {
                            var t = e.key, n = e.instanceCount, o = e.totalDuration, i = e.counts.render || 0, a = e.durations.render || 0;
                            return {
                                Component: t,
                                "Total time (ms)": r(o),
                                "Instance count": n,
                                "Total render time (ms)": r(a),
                                "Average render time (ms)": i ? r(a / i) : void 0,
                                "Render count": i,
                                "Total lifecycle time (ms)": r(o - a)
                            };
                        }));
                    }
                    function p(e) {
                        o(s(e).map(function(e) {
                            var t = e.key, n = e.instanceCount, o = e.inclusiveRenderDuration, i = e.renderCount;
                            return {
                                "Owner > Component": t,
                                "Inclusive render time (ms)": r(o),
                                "Instance count": n,
                                "Render count": i
                            };
                        }));
                    }
                    function d(e) {
                        o(u(e).map(function(e) {
                            var t = e.key, n = e.instanceCount, o = e.inclusiveRenderDuration, i = e.renderCount;
                            return {
                                "Owner > Component": t,
                                "Inclusive wasted time (ms)": r(o),
                                "Instance count": n,
                                "Render count": i
                            };
                        }));
                    }
                    function f(e) {
                        o(l(e).map(function(e) {
                            return {
                                "Owner > Node": e.key,
                                Operation: e.type,
                                Payload: "object" == typeof e.payload ? JSON.stringify(e.payload) : e.payload,
                                "Flush index": e.flushIndex,
                                "Owner Component ID": e.ownerID,
                                "DOM Component ID": e.instanceID
                            };
                        }));
                    }
                    function h(e) {
                        return w(E, "`ReactPerf.printDOM(...)` is deprecated. Use `ReactPerf.printOperations(...)` instead."), 
                        E = !0, f(e);
                    }
                    function m(e) {
                        return w(_, "`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use `ReactPerf.getWasted(...)` instead."), 
                        _ = !0, u(e);
                    }
                    function g() {
                        C.beginProfiling();
                    }
                    function v() {
                        C.endProfiling();
                    }
                    function y() {
                        return C.isProfiling();
                    }
                    var b = e(160), x = b || function(e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                        }
                        return e;
                    }, C = e(50), w = e(124), E = !1, _ = !1, k = {
                        getLastMeasurements: i,
                        getExclusive: a,
                        getInclusive: s,
                        getWasted: u,
                        getOperations: l,
                        printExclusive: c,
                        printInclusive: p,
                        printWasted: d,
                        printOperations: f,
                        start: g,
                        stop: v,
                        isRunning: y,
                        // Deprecated:
                        printDOM: h,
                        getMeasurementsSummaryMap: m
                    };
                    t.exports = k;
                }, {
                    "124": 124,
                    "160": 160,
                    "50": 50
                } ],
                72: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = {};
                    r = {
                        prop: "prop",
                        context: "context",
                        childContext: "child context"
                    }, t.exports = r;
                }, {} ],
                73: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    t.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
                }, {} ],
                74: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
                    function r(e) {
                        this.reinitializeTransaction(), // Only server-side rendering really needs this option (see
                        // `ReactServerRendering`), but server-side uses
                        // `ReactServerRenderingTransaction` instead. This option is here so that it's
                        // accessible and defaults to false when `ReactDOMComponent` and
                        // `ReactDOMTextComponent` checks it in `mountComponent`.`
                        this.renderToStaticMarkup = !1, this.reactMountReady = i.getPooled(null), this.useCreateElement = e;
                    }
                    var o = e(160), i = e(6), a = e(25), s = e(26), u = e(62), l = e(64), c = e(100), p = e(81), d = {
                        /**
   * @return {Selection} Selection information.
   */
                        initialize: u.getSelectionInformation,
                        /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
                        close: u.restoreSelection
                    }, f = {
                        /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
                        initialize: function() {
                            var e = s.isEnabled();
                            return s.setEnabled(!1), e;
                        },
                        /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
                        close: function(e) {
                            s.setEnabled(e);
                        }
                    }, h = {
                        /**
   * Initializes the internal `onDOMReady` queue.
   */
                        initialize: function() {
                            this.reactMountReady.reset();
                        },
                        /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
                        close: function() {
                            this.reactMountReady.notifyAll();
                        }
                    }, m = [ d, f, h ];
                    m.push({
                        initialize: l.debugTool.onBeginFlush,
                        close: l.debugTool.onEndFlush
                    });
                    var g = {
                        /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
                        getTransactionWrappers: function() {
                            return m;
                        },
                        /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
                        getReactMountReady: function() {
                            return this.reactMountReady;
                        },
                        /**
   * @return {object} The queue to collect React async events.
   */
                        getUpdateQueue: function() {
                            return p;
                        },
                        /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
                        checkpoint: function() {
                            // reactMountReady is the our only stateful wrapper
                            return this.reactMountReady.checkpoint();
                        },
                        rollback: function(e) {
                            this.reactMountReady.rollback(e);
                        },
                        /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
                        destructor: function() {
                            i.release(this.reactMountReady), this.reactMountReady = null;
                        }
                    };
                    o(r.prototype, c, g), a.addPoolingTo(r), t.exports = r;
                }, {
                    "100": 100,
                    "160": 160,
                    "25": 25,
                    "26": 26,
                    "6": 6,
                    "62": 62,
                    "64": 64,
                    "81": 81
                } ],
                75: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
                    function r() {
                        o.attachRefs(this, this._currentElement);
                    }
                    var o = e(76), i = e(64), a = e(159), s = {
                        /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
                        mountComponent: function(e, t, n, o, a, s) {
                            0 !== e._debugID && i.debugTool.onBeforeMountComponent(e._debugID, e._currentElement, s);
                            var u = e.mountComponent(t, n, o, a, s);
                            return e._currentElement && null != e._currentElement.ref && t.getReactMountReady().enqueue(r, e), 
                            0 !== e._debugID && i.debugTool.onMountComponent(e._debugID), u;
                        },
                        /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
                        getHostNode: function(e) {
                            return e.getHostNode();
                        },
                        /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
                        unmountComponent: function(e, t) {
                            0 !== e._debugID && i.debugTool.onBeforeUnmountComponent(e._debugID), o.detachRefs(e, e._currentElement), 
                            e.unmountComponent(t), 0 !== e._debugID && i.debugTool.onUnmountComponent(e._debugID);
                        },
                        /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
                        receiveComponent: function(e, t, n, a) {
                            var s = e._currentElement;
                            if (t !== s || a !== e._context) {
                                0 !== e._debugID && i.debugTool.onBeforeUpdateComponent(e._debugID, t);
                                var u = o.shouldUpdateRefs(s, t);
                                u && o.detachRefs(e, s), e.receiveComponent(t, n, a), u && e._currentElement && null != e._currentElement.ref && n.getReactMountReady().enqueue(r, e), 
                                0 !== e._debugID && i.debugTool.onUpdateComponent(e._debugID);
                            }
                        },
                        /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
                        performUpdateIfNecessary: function(e, t, n) {
                            if (e._updateBatchNumber !== n) return void a(null == e._updateBatchNumber || e._updateBatchNumber === n + 1, "performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)", n, e._updateBatchNumber);
                            0 !== e._debugID && i.debugTool.onBeforeUpdateComponent(e._debugID, e._currentElement), 
                            e.performUpdateIfNecessary(t), 0 !== e._debugID && i.debugTool.onUpdateComponent(e._debugID);
                        }
                    };
                    t.exports = s;
                }, {
                    "159": 159,
                    "64": 64,
                    "76": 76
                } ],
                76: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e, t, n) {
                        "function" == typeof e ? e(t.getPublicInstance()) : // Legacy ref
                        i.addComponentAsRefTo(t, e, n);
                    }
                    function o(e, t, n) {
                        "function" == typeof e ? e(null) : // Legacy ref
                        i.removeComponentAsRefFrom(t, e, n);
                    }
                    var i = e(70), a = {};
                    a.attachRefs = function(e, t) {
                        if (null !== t && "object" == typeof t) {
                            var n = t.ref;
                            null != n && r(n, e, t._owner);
                        }
                    }, a.shouldUpdateRefs = function(e, t) {
                        // If either the owner or a `ref` has changed, make sure the newest owner
                        // has stored a reference to `this`, and the previous owner (if different)
                        // has forgotten the reference to `this`. We use the element instead
                        // of the public this.props because the post processing cannot determine
                        // a ref. The ref conceptually lives on the element.
                        // TODO: Should this even be possible? The owner cannot change because
                        // it's forbidden by shouldUpdateReactComponent. The ref can change
                        // if you swap the keys of but not the refs. Reconsider where this check
                        // is made. It probably belongs where the key checking and
                        // instantiateReactComponent is done.
                        var n = null, r = null;
                        null !== e && "object" == typeof e && (n = e.ref, r = e._owner);
                        var o = null, i = null;
                        // If owner changes but we have an unchanged function ref, don't update refs
                        return null !== t && "object" == typeof t && (o = t.ref, i = t._owner), n !== o || "string" == typeof o && i !== r;
                    }, a.detachRefs = function(e, t) {
                        if (null !== t && "object" == typeof t) {
                            var n = t.ref;
                            null != n && o(n, e, t._owner);
                        }
                    }, t.exports = a;
                }, {
                    "70": 70
                } ],
                77: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
                    function r(e) {
                        this.reinitializeTransaction(), this.renderToStaticMarkup = e, this.useCreateElement = !1, 
                        this.updateQueue = new u(this);
                    }
                    var o = e(160), i = e(25), a = e(100), s = e(64), u = e(78), l = [];
                    l.push({
                        initialize: s.debugTool.onBeginFlush,
                        close: s.debugTool.onEndFlush
                    });
                    var c = {
                        enqueue: function() {}
                    }, p = {
                        /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
                        getTransactionWrappers: function() {
                            return l;
                        },
                        /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
                        getReactMountReady: function() {
                            return c;
                        },
                        /**
   * @return {object} The queue to collect React async events.
   */
                        getUpdateQueue: function() {
                            return this.updateQueue;
                        },
                        /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
                        destructor: function() {},
                        checkpoint: function() {},
                        rollback: function() {}
                    };
                    o(r.prototype, a, p), i.addPoolingTo(r), t.exports = r;
                }, {
                    "100": 100,
                    "160": 160,
                    "25": 25,
                    "64": 64,
                    "78": 78
                } ],
                78: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }
                    function o(e, t) {
                        var n = e.constructor;
                        a(!1, "%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op. Please check the code for the %s component.", t, t, n && (n.displayName || n.name) || "ReactClass");
                    }
                    var i = e(81), a = e(159), s = function() {
                        function e(t) {
                            r(this, e), this.transaction = t;
                        }
                        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
                        /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
                        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
                        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */
                        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */
                        return e.prototype.isMounted = function(e) {
                            return !1;
                        }, e.prototype.enqueueCallback = function(e, t, n) {
                            this.transaction.isInTransaction() && i.enqueueCallback(e, t, n);
                        }, e.prototype.enqueueForceUpdate = function(e) {
                            this.transaction.isInTransaction() ? i.enqueueForceUpdate(e) : o(e, "forceUpdate");
                        }, e.prototype.enqueueReplaceState = function(e, t) {
                            this.transaction.isInTransaction() ? i.enqueueReplaceState(e, t) : o(e, "replaceState");
                        }, e.prototype.enqueueSetState = function(e, t) {
                            this.transaction.isInTransaction() ? i.enqueueSetState(e, t) : o(e, "setState");
                        }, e;
                    }();
                    t.exports = s;
                }, {
                    "159": 159,
                    "81": 81
                } ],
                79: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
                    }
                    function o() {
                        d.injection.injectReconcileTransaction(p), d.injection.injectBatchingStrategy(l);
                    }
                    function i(e, t, n) {
                        var r = d.ReactReconcileTransaction.getPooled(!0);
                        e._render(t, r, n), d.ReactReconcileTransaction.release(r);
                    }
                    var a = (e(126), e(160)), s = e(135), u = e(30), l = e(51), c = e(75), p = e(74), d = e(82), f = e(145), h = e(136), m = e(152), g = function() {
                        function e(t) {
                            r(this, e), this._renderedOutput = t, this._currentElement = t, this._debugID = h();
                        }
                        return e.prototype.mountComponent = function() {}, e.prototype.receiveComponent = function(e) {
                            this._renderedOutput = e, this._currentElement = e;
                        }, e.prototype.unmountComponent = function() {}, e.prototype.getHostNode = function() {}, 
                        e.prototype.getPublicInstance = function() {
                            return null;
                        }, e;
                    }(), v = function(e) {
                        this._debugID = h(), this.construct(e);
                    };
                    a(v.prototype, u, {
                        _constructComponent: u._constructComponentWithoutOwner,
                        _instantiateReactComponent: function(e) {
                            return new g(e);
                        },
                        _replaceNodeWithMarkup: function() {},
                        _renderValidatedComponent: u._renderValidatedComponentWithoutOwnerOrContext
                    });
                    var y = function() {
                        function e() {
                            r(this, e), this._instance = null;
                        }
                        return e.prototype.getMountedInstance = function() {
                            return this._instance ? this._instance._instance : null;
                        }, e.prototype.render = function(e, t) {
                            // Ensure we've done the default injections. This might not be true in the
                            // case of a simple test that only requires React and the TestUtils in
                            // conjunction with an inline-requires transform.
                            return o(), s.isValidElement(e) || m(!1, "ReactShallowRenderer render(): Invalid component element.%s", "function" == typeof e ? " Instead of passing a component class, make sure to instantiate it by passing it to React.createElement." : ""), 
                            "string" == typeof e.type && m(!1, "ReactShallowRenderer render(): Shallow rendering works only with custom components, not primitives (%s). Instead of calling `.render(el)` and inspecting the rendered output, look at `el.props` directly instead.", e.type), 
                            t || (t = f), d.batchedUpdates(i, this, e, t), this.getRenderOutput();
                        }, e.prototype.getRenderOutput = function() {
                            return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
                        }, e.prototype.unmount = function() {
                            this._instance && c.unmountComponent(this._instance, !1);
                        }, e.prototype.unstable_batchedUpdates = function(e, t) {
                            // This is used by Enzyme for fake-simulating events in shallow mode.
                            return o(), d.batchedUpdates(e, t);
                        }, e.prototype._render = function(e, t, n) {
                            if (this._instance) c.receiveComponent(this._instance, e, t, n); else {
                                var r = new v(e);
                                c.mountComponent(r, t, null, null, n, 0), this._instance = r;
                            }
                        }, e;
                    }();
                    y.createRenderer = function() {
                        return new y();
                    }, t.exports = y;
                }, {
                    "126": 126,
                    "135": 135,
                    "136": 136,
                    "145": 145,
                    "152": 152,
                    "160": 160,
                    "30": 30,
                    "51": 51,
                    "74": 74,
                    "75": 75,
                    "82": 82
                } ],
                80: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {}
                    function o() {
                        return _(T, "Shallow renderer has been moved to react-test-renderer/shallow. Update references to remove this warning."), 
                        T = !0, new C();
                    }
                    /**
 * @class ReactTestUtils
 */
                    function i(e, t) {
                        if (!e || !e.getPublicInstance) return [];
                        var n = e.getPublicInstance(), r = t(n) ? [ n ] : [], o = e._currentElement;
                        if (S.isDOMComponent(n)) {
                            var a, s = e._renderedChildren;
                            for (a in s) s.hasOwnProperty(a) && (r = r.concat(i(s[a], t)));
                        } else h.isValidElement(o) && "function" == typeof o.type && (r = r.concat(i(e._renderedComponent, t)));
                        return r;
                    }
                    /**
 * Exports:
 *
 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
 * - ... (All keys from event plugin `eventTypes` objects)
 */
                    function a(e) {
                        return function(t, n) {
                            var o;
                            h.isValidElement(t) && E(!1, "TestUtils.Simulate expects a component instance and not a ReactElement.TestUtils.Simulate will not work if you are using shallow rendering."), 
                            S.isDOMComponent(t) ? o = w(t) : t.tagName && (o = t);
                            var i = d.eventNameDispatchConfigs[e], a = new r();
                            a.target = o, a.type = e.toLowerCase();
                            // We don't use SyntheticEvent.getPooled in order to not have to worry about
                            // properly destroying any properties assigned from `eventData` upon release
                            var s = new x(i, g.getInstanceFromNode(o), a, o);
                            // Since we aren't using pooling, always persist the event. This will make
                            // sure it's marked and won't warn when setting additional properties.
                            s.persist(), l(s, n), i.phasedRegistrationNames ? f.accumulateTwoPhaseDispatches(s) : f.accumulateDirectDispatches(s), 
                            b.batchedUpdates(function() {
                                p.enqueueEvents(s), p.processEventQueue(!0);
                            });
                        };
                    }
                    function s() {
                        S.Simulate = {};
                        var e;
                        for (e in d.eventNameDispatchConfigs) /**
     * @param {!Element|ReactDOMComponent} domComponentOrNode
     * @param {?object} eventData Fake event data to use in SyntheticEvent.
     */
                        S.Simulate[e] = a(e);
                    }
                    /**
 * Exports:
 *
 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
 * - ... (All keys from `EventConstants.topLevelTypes`)
 *
 * Note: Top level event types are a subset of the entire set of handler types
 * (which include a broader set of "synthetic" events). For example, onDragDone
 * is a synthetic event. Except when testing an event plugin or React's event
 * handling code specifically, you probably want to use ReactTestUtils.Simulate
 * to dispatch synthetic events.
 */
                    function u(e) {
                        return function(t, n) {
                            var o = new r(e);
                            l(o, n), S.isDOMComponent(t) ? S.simulateNativeEventOnDOMComponent(e, t, o) : t.tagName && // Will allow on actual dom nodes.
                            S.simulateNativeEventOnNode(e, t, o);
                        };
                    }
                    var l = (e(126), e(160)), c = e(16), p = e(17), d = e(18), f = e(20), h = e(135), m = e(31), g = e(34), v = e(26), y = e(63), b = e(82), x = e(91), C = e(79), w = e(108), E = e(152), _ = e(159), k = c.topLevelTypes, T = !1, S = {
                        renderIntoDocument: function(e) {
                            var t = document.createElement("div");
                            // None of our tests actually require attaching the container to the
                            // DOM, and doing so creates a mess that we rely on test isolation to
                            // clean up, so we're going to stop honoring the name of this method
                            // (and probably rename it eventually) if no problems arise.
                            // document.documentElement.appendChild(div);
                            return m.render(e, t);
                        },
                        isElement: function(e) {
                            return h.isValidElement(e);
                        },
                        isElementOfType: function(e, t) {
                            return h.isValidElement(e) && e.type === t;
                        },
                        isDOMComponent: function(e) {
                            return !(!e || 1 !== e.nodeType || !e.tagName);
                        },
                        isDOMComponentElement: function(e) {
                            return !!(e && h.isValidElement(e) && e.tagName);
                        },
                        isCompositeComponent: function(e) {
                            return !S.isDOMComponent(e) && (null != e && "function" == typeof e.render && "function" == typeof e.setState);
                        },
                        isCompositeComponentWithType: function(e, t) {
                            if (!S.isCompositeComponent(e)) return !1;
                            var n = y.get(e), r = n._currentElement.type;
                            return r === t;
                        },
                        isCompositeComponentElement: function(e) {
                            if (!h.isValidElement(e)) return !1;
                            // We check the prototype of the type that will get mounted, not the
                            // instance itself. This is a future proof way of duck typing.
                            var t = e.type.prototype;
                            return "function" == typeof t.render && "function" == typeof t.setState;
                        },
                        isCompositeComponentElementWithType: function(e, t) {
                            var n = y.get(e), r = n._currentElement.type;
                            return !(!S.isCompositeComponentElement(e) || r !== t);
                        },
                        getRenderedChildOfCompositeComponent: function(e) {
                            return S.isCompositeComponent(e) ? y.get(e)._renderedComponent.getPublicInstance() : null;
                        },
                        findAllInRenderedTree: function(e, t) {
                            return e ? (S.isCompositeComponent(e) || E(!1, "findAllInRenderedTree(...): instance must be a composite component"), 
                            i(y.get(e), t)) : [];
                        },
                        /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the class name matching `className`.
   * @return {array} an array of all the matches.
   */
                        scryRenderedDOMComponentsWithClass: function(e, t) {
                            return S.findAllInRenderedTree(e, function(e) {
                                if (S.isDOMComponent(e)) {
                                    var n = e.className;
                                    "string" != typeof n && (// SVG, probably.
                                    n = e.getAttribute("class") || "");
                                    var r = n.split(/\s+/);
                                    return Array.isArray(t) || (void 0 === t && E(!1, "TestUtils.scryRenderedDOMComponentsWithClass expects a className as a second argument."), 
                                    t = t.split(/\s+/)), t.every(function(e) {
                                        return -1 !== r.indexOf(e);
                                    });
                                }
                                return !1;
                            });
                        },
                        /**
   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
                        findRenderedDOMComponentWithClass: function(e, t) {
                            var n = S.scryRenderedDOMComponentsWithClass(e, t);
                            if (1 !== n.length) throw new Error("Did not find exactly one match (found: " + n.length + ") for class:" + t);
                            return n[0];
                        },
                        /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the tag name matching `tagName`.
   * @return {array} an array of all the matches.
   */
                        scryRenderedDOMComponentsWithTag: function(e, t) {
                            return S.findAllInRenderedTree(e, function(e) {
                                return S.isDOMComponent(e) && e.tagName.toUpperCase() === t.toUpperCase();
                            });
                        },
                        /**
   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
                        findRenderedDOMComponentWithTag: function(e, t) {
                            var n = S.scryRenderedDOMComponentsWithTag(e, t);
                            if (1 !== n.length) throw new Error("Did not find exactly one match (found: " + n.length + ") for tag:" + t);
                            return n[0];
                        },
                        /**
   * Finds all instances of components with type equal to `componentType`.
   * @return {array} an array of all the matches.
   */
                        scryRenderedComponentsWithType: function(e, t) {
                            return S.findAllInRenderedTree(e, function(e) {
                                return S.isCompositeComponentWithType(e, t);
                            });
                        },
                        /**
   * Same as `scryRenderedComponentsWithType` but expects there to be one result
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactComponent} The one match.
   */
                        findRenderedComponentWithType: function(e, t) {
                            var n = S.scryRenderedComponentsWithType(e, t);
                            if (1 !== n.length) throw new Error("Did not find exactly one match (found: " + n.length + ") for componentType:" + t);
                            return n[0];
                        },
                        /**
   * Pass a mocked component module to this method to augment it with
   * useful methods that allow it to be used as a dummy React component.
   * Instead of rendering as usual, the component will become a simple
   * <div> containing any provided children.
   *
   * @param {object} module the mock function object exported from a
   *                        module that defines the component to be mocked
   * @param {?string} mockTagName optional dummy root tag name to return
   *                              from render method (overrides
   *                              module.mockTagName if provided)
   * @return {object} the ReactTestUtils object (for chaining)
   */
                        mockComponent: function(e, t) {
                            return t = t || e.mockTagName || "div", e.prototype.render.mockImplementation(function() {
                                return h.createElement(t, null, this.props.children);
                            }), this;
                        },
                        /**
   * Simulates a top level event being dispatched from a raw event that occurred
   * on an `Element` node.
   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
   * @param {!Element} node The dom to simulate an event occurring on.
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
                        simulateNativeEventOnNode: function(e, t, n) {
                            n.target = t, n.simulated = !0, v.ReactEventListener.dispatchEvent(e, n);
                        },
                        /**
   * Simulates a top level event being dispatched from a raw event that occurred
   * on the `ReactDOMComponent` `comp`.
   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
   * @param {!ReactDOMComponent} comp
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
                        simulateNativeEventOnDOMComponent: function(e, t, n) {
                            S.simulateNativeEventOnNode(e, w(t), n);
                        },
                        nativeTouchData: function(e, t) {
                            return {
                                touches: [ {
                                    pageX: e,
                                    pageY: t
                                } ]
                            };
                        },
                        createRenderer: o,
                        Simulate: null,
                        SimulateNative: {}
                    }, N = p.injection.injectEventPluginOrder;
                    p.injection.injectEventPluginOrder = function() {
                        N.apply(this, arguments), s();
                    };
                    var D = p.injection.injectEventPluginsByName;
                    p.injection.injectEventPluginsByName = function() {
                        D.apply(this, arguments), s();
                    }, s(), Object.keys(k).forEach(function(e) {
                        // Event type is stored as 'topClick' - we transform that to 'click'
                        var t = 0 === e.indexOf("top") ? e.charAt(3).toLowerCase() + e.substr(4) : e;
                        /**
   * @param {!Element|ReactDOMComponent} domComponentOrNode
   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
   */
                        S.SimulateNative[t] = u(e);
                    }), t.exports = S;
                }, {
                    "108": 108,
                    "126": 126,
                    "135": 135,
                    "152": 152,
                    "159": 159,
                    "16": 16,
                    "160": 160,
                    "17": 17,
                    "18": 18,
                    "20": 20,
                    "26": 26,
                    "31": 31,
                    "34": 34,
                    "63": 63,
                    "79": 79,
                    "82": 82,
                    "91": 91
                } ],
                81: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        l.enqueueUpdate(e);
                    }
                    function o(e) {
                        var t = typeof e;
                        if ("object" !== t) return t;
                        var n = e.constructor && e.constructor.name || t, r = Object.keys(e);
                        return r.length > 0 && r.length < 20 ? n + " (keys: " + r.join(", ") + ")" : n;
                    }
                    function i(e, t) {
                        var n = s.get(e);
                        if (!n) {
                            var r = e.constructor;
                            return p(!t, "%s(...): Can only update a mounted or mounting component. This usually means you called %s() on an unmounted component. This is a no-op. Please check the code for the %s component.", t, t, r && (r.displayName || r.name) || "ReactClass"), 
                            null;
                        }
                        return p(null == a.current, "%s(...): Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.", t), 
                        n;
                    }
                    var a = (e(126), e(134)), s = e(63), u = e(64), l = e(82), c = e(152), p = e(159), d = {
                        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
                        isMounted: function(e) {
                            var t = a.current;
                            null !== t && (p(t._warnedAboutRefsInRender, "%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", t.getName() || "A component"), 
                            t._warnedAboutRefsInRender = !0);
                            var n = s.get(e);
                            return !!n && !!n._renderedComponent;
                        },
                        /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
                        enqueueCallback: function(e, t, n) {
                            d.validateCallback(t, n);
                            var o = i(e);
                            // Previously we would throw an error if we didn't have an internal
                            // instance. Since we want to make it a no-op instead, we mirror the same
                            // behavior we have in other enqueue* methods.
                            // We also need to ignore callbacks in componentWillMount. See
                            // enqueueUpdates.
                            if (!o) return null;
                            o._pendingCallbacks ? o._pendingCallbacks.push(t) : o._pendingCallbacks = [ t ], 
                            // TODO: The callback here is ignored when setState is called from
                            // componentWillMount. Either fix it or disallow doing so completely in
                            // favor of getInitialState. Alternatively, we can disallow
                            // componentWillMount during server-side rendering.
                            r(o);
                        },
                        enqueueCallbackInternal: function(e, t) {
                            e._pendingCallbacks ? e._pendingCallbacks.push(t) : e._pendingCallbacks = [ t ], 
                            r(e);
                        },
                        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
                        enqueueForceUpdate: function(e) {
                            var t = i(e, "forceUpdate");
                            t && (t._pendingForceUpdate = !0, r(t));
                        },
                        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
                        enqueueReplaceState: function(e, t, n) {
                            var o = i(e, "replaceState");
                            o && (o._pendingStateQueue = [ t ], o._pendingReplaceState = !0, // Future-proof 15.5
                            void 0 !== n && null !== n && (d.validateCallback(n, "replaceState"), o._pendingCallbacks ? o._pendingCallbacks.push(n) : o._pendingCallbacks = [ n ]), 
                            r(o));
                        },
                        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
                        enqueueSetState: function(e, t) {
                            u.debugTool.onSetState(), p(null != t, "setState(...): You passed an undefined or null state object; instead, use forceUpdate().");
                            var n = i(e, "setState");
                            if (n) {
                                (n._pendingStateQueue || (n._pendingStateQueue = [])).push(t), r(n);
                            }
                        },
                        enqueueElementInternal: function(e, t, n) {
                            e._pendingElement = t, // TODO: introduce _pendingContext instead of setting it directly.
                            e._context = n, r(e);
                        },
                        validateCallback: function(e, t) {
                            e && "function" != typeof e && c(!1, "%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", t, o(e));
                        }
                    };
                    t.exports = d;
                }, {
                    "126": 126,
                    "134": 134,
                    "152": 152,
                    "159": 159,
                    "63": 63,
                    "64": 64,
                    "82": 82
                } ],
                82: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r() {
                        S.ReactReconcileTransaction && C || g(!1, "ReactUpdates: must inject a reconcile transaction class and batching strategy");
                    }
                    function o() {
                        this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.callbackQueue = p.getPooled(), 
                        this.reconcileTransaction = S.ReactReconcileTransaction.getPooled(/* useCreateElement */
                        !0);
                    }
                    function i(e, t, n, o, i, a) {
                        return r(), C.batchedUpdates(e, t, n, o, i, a);
                    }
                    /**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
                    function a(e, t) {
                        return e._mountOrder - t._mountOrder;
                    }
                    function s(e) {
                        var t = e.dirtyComponentsLength;
                        t !== v.length && g(!1, "Expected flush transaction's stored dirty-components length (%s) to match dirty-components array length (%s).", t, v.length), 
                        // Since reconciling a component higher in the owner hierarchy usually (not
                        // always -- see shouldComponentUpdate()) will reconcile children, reconcile
                        // them before their children by sorting the array.
                        v.sort(a), // Any updates enqueued while reconciling must be performed after this entire
                        // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
                        // C, B could update twice in a single batch if C's render enqueues an update
                        // to B (since B would have already updated, we should skip it, and the only
                        // way we can know to do so is by checking the batch counter).
                        y++;
                        for (var n = 0; n < t; n++) {
                            // If a component is unmounted before pending changes apply, it will still
                            // be here, but we assume that it has cleared its _pendingCallbacks and
                            // that performUpdateIfNecessary is a noop.
                            var r = v[n], o = r._pendingCallbacks;
                            r._pendingCallbacks = null;
                            var i;
                            if (f.logTopLevelRenders) {
                                var s = r;
                                // Duck type TopLevelWrapper. This is probably always true.
                                r._currentElement.type.isReactTopLevelWrapper && (s = r._renderedComponent), i = "React update: " + s.getName(), 
                                console.time(i);
                            }
                            if (h.performUpdateIfNecessary(r, e.reconcileTransaction, y), i && console.timeEnd(i), 
                            o) for (var u = 0; u < o.length; u++) e.callbackQueue.enqueue(o[u], r.getPublicInstance());
                        }
                    }
                    /**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
                    function u(e) {
                        // Various parts of our code (such as ReactCompositeComponent's
                        // _renderValidatedComponent) assume that calls to render aren't nested;
                        // verify that that's the case. (This is called by each top-level update
                        // function, like setState, forceUpdate, etc.; creation and
                        // destruction of top-level components is guarded in ReactMount.)
                        if (r(), !C.isBatchingUpdates) return void C.batchedUpdates(u, e);
                        v.push(e), null == e._updateBatchNumber && (e._updateBatchNumber = y + 1);
                    }
                    /**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
                    function l(e, t) {
                        C.isBatchingUpdates || g(!1, "ReactUpdates.asap: Can't enqueue an asap callback in a context whereupdates are not being batched."), 
                        b.enqueue(e, t), x = !0;
                    }
                    var c = (e(126), e(160)), p = e(6), d = e(25), f = e(58), h = e(75), m = e(100), g = e(152), v = [], y = 0, b = p.getPooled(), x = !1, C = null, w = {
                        initialize: function() {
                            this.dirtyComponentsLength = v.length;
                        },
                        close: function() {
                            this.dirtyComponentsLength !== v.length ? (// Additional updates were enqueued by componentDidUpdate handlers or
                            // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
                            // these new updates so that if A's componentDidUpdate calls setState on
                            // B, B will update before the callback A's updater provided when calling
                            // setState.
                            v.splice(0, this.dirtyComponentsLength), k()) : v.length = 0;
                        }
                    }, E = {
                        initialize: function() {
                            this.callbackQueue.reset();
                        },
                        close: function() {
                            this.callbackQueue.notifyAll();
                        }
                    }, _ = [ w, E ];
                    c(o.prototype, m, {
                        getTransactionWrappers: function() {
                            return _;
                        },
                        destructor: function() {
                            this.dirtyComponentsLength = null, p.release(this.callbackQueue), this.callbackQueue = null, 
                            S.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null;
                        },
                        perform: function(e, t, n) {
                            // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
                            // with this transaction's wrappers around it.
                            return m.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, e, t, n);
                        }
                    }), d.addPoolingTo(o);
                    var k = function() {
                        // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
                        // array and perform any updates enqueued by mount-ready handlers (i.e.,
                        // componentDidUpdate) but we need to check here too in order to catch
                        // updates enqueued by setState callbacks and asap calls.
                        for (;v.length || x; ) {
                            if (v.length) {
                                var e = o.getPooled();
                                e.perform(s, null, e), o.release(e);
                            }
                            if (x) {
                                x = !1;
                                var t = b;
                                b = p.getPooled(), t.notifyAll(), p.release(t);
                            }
                        }
                    }, T = {
                        injectReconcileTransaction: function(e) {
                            e || g(!1, "ReactUpdates: must provide a reconcile transaction class"), S.ReactReconcileTransaction = e;
                        },
                        injectBatchingStrategy: function(e) {
                            e || g(!1, "ReactUpdates: must provide a batching strategy"), "function" != typeof e.batchedUpdates && g(!1, "ReactUpdates: must provide a batchedUpdates() function"), 
                            "boolean" != typeof e.isBatchingUpdates && g(!1, "ReactUpdates: must provide an isBatchingUpdates boolean attribute"), 
                            C = e;
                        }
                    }, S = {
                        /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
                        ReactReconcileTransaction: null,
                        batchedUpdates: i,
                        enqueueUpdate: u,
                        flushBatchedUpdates: k,
                        injection: T,
                        asap: l
                    };
                    t.exports = S;
                }, {
                    "100": 100,
                    "126": 126,
                    "152": 152,
                    "160": 160,
                    "25": 25,
                    "58": 58,
                    "6": 6,
                    "75": 75
                } ],
                83: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    t.exports = "15.6.1";
                }, {} ],
                84: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        xlink: "http://www.w3.org/1999/xlink",
                        xml: "http://www.w3.org/XML/1998/namespace"
                    }, o = {
                        accentHeight: "accent-height",
                        accumulate: 0,
                        additive: 0,
                        alignmentBaseline: "alignment-baseline",
                        allowReorder: "allowReorder",
                        alphabetic: 0,
                        amplitude: 0,
                        arabicForm: "arabic-form",
                        ascent: 0,
                        attributeName: "attributeName",
                        attributeType: "attributeType",
                        autoReverse: "autoReverse",
                        azimuth: 0,
                        baseFrequency: "baseFrequency",
                        baseProfile: "baseProfile",
                        baselineShift: "baseline-shift",
                        bbox: 0,
                        begin: 0,
                        bias: 0,
                        by: 0,
                        calcMode: "calcMode",
                        capHeight: "cap-height",
                        clip: 0,
                        clipPath: "clip-path",
                        clipRule: "clip-rule",
                        clipPathUnits: "clipPathUnits",
                        colorInterpolation: "color-interpolation",
                        colorInterpolationFilters: "color-interpolation-filters",
                        colorProfile: "color-profile",
                        colorRendering: "color-rendering",
                        contentScriptType: "contentScriptType",
                        contentStyleType: "contentStyleType",
                        cursor: 0,
                        cx: 0,
                        cy: 0,
                        d: 0,
                        decelerate: 0,
                        descent: 0,
                        diffuseConstant: "diffuseConstant",
                        direction: 0,
                        display: 0,
                        divisor: 0,
                        dominantBaseline: "dominant-baseline",
                        dur: 0,
                        dx: 0,
                        dy: 0,
                        edgeMode: "edgeMode",
                        elevation: 0,
                        enableBackground: "enable-background",
                        end: 0,
                        exponent: 0,
                        externalResourcesRequired: "externalResourcesRequired",
                        fill: 0,
                        fillOpacity: "fill-opacity",
                        fillRule: "fill-rule",
                        filter: 0,
                        filterRes: "filterRes",
                        filterUnits: "filterUnits",
                        floodColor: "flood-color",
                        floodOpacity: "flood-opacity",
                        focusable: 0,
                        fontFamily: "font-family",
                        fontSize: "font-size",
                        fontSizeAdjust: "font-size-adjust",
                        fontStretch: "font-stretch",
                        fontStyle: "font-style",
                        fontVariant: "font-variant",
                        fontWeight: "font-weight",
                        format: 0,
                        from: 0,
                        fx: 0,
                        fy: 0,
                        g1: 0,
                        g2: 0,
                        glyphName: "glyph-name",
                        glyphOrientationHorizontal: "glyph-orientation-horizontal",
                        glyphOrientationVertical: "glyph-orientation-vertical",
                        glyphRef: "glyphRef",
                        gradientTransform: "gradientTransform",
                        gradientUnits: "gradientUnits",
                        hanging: 0,
                        horizAdvX: "horiz-adv-x",
                        horizOriginX: "horiz-origin-x",
                        ideographic: 0,
                        imageRendering: "image-rendering",
                        in: 0,
                        in2: 0,
                        intercept: 0,
                        k: 0,
                        k1: 0,
                        k2: 0,
                        k3: 0,
                        k4: 0,
                        kernelMatrix: "kernelMatrix",
                        kernelUnitLength: "kernelUnitLength",
                        kerning: 0,
                        keyPoints: "keyPoints",
                        keySplines: "keySplines",
                        keyTimes: "keyTimes",
                        lengthAdjust: "lengthAdjust",
                        letterSpacing: "letter-spacing",
                        lightingColor: "lighting-color",
                        limitingConeAngle: "limitingConeAngle",
                        local: 0,
                        markerEnd: "marker-end",
                        markerMid: "marker-mid",
                        markerStart: "marker-start",
                        markerHeight: "markerHeight",
                        markerUnits: "markerUnits",
                        markerWidth: "markerWidth",
                        mask: 0,
                        maskContentUnits: "maskContentUnits",
                        maskUnits: "maskUnits",
                        mathematical: 0,
                        mode: 0,
                        numOctaves: "numOctaves",
                        offset: 0,
                        opacity: 0,
                        operator: 0,
                        order: 0,
                        orient: 0,
                        orientation: 0,
                        origin: 0,
                        overflow: 0,
                        overlinePosition: "overline-position",
                        overlineThickness: "overline-thickness",
                        paintOrder: "paint-order",
                        panose1: "panose-1",
                        pathLength: "pathLength",
                        patternContentUnits: "patternContentUnits",
                        patternTransform: "patternTransform",
                        patternUnits: "patternUnits",
                        pointerEvents: "pointer-events",
                        points: 0,
                        pointsAtX: "pointsAtX",
                        pointsAtY: "pointsAtY",
                        pointsAtZ: "pointsAtZ",
                        preserveAlpha: "preserveAlpha",
                        preserveAspectRatio: "preserveAspectRatio",
                        primitiveUnits: "primitiveUnits",
                        r: 0,
                        radius: 0,
                        refX: "refX",
                        refY: "refY",
                        renderingIntent: "rendering-intent",
                        repeatCount: "repeatCount",
                        repeatDur: "repeatDur",
                        requiredExtensions: "requiredExtensions",
                        requiredFeatures: "requiredFeatures",
                        restart: 0,
                        result: 0,
                        rotate: 0,
                        rx: 0,
                        ry: 0,
                        scale: 0,
                        seed: 0,
                        shapeRendering: "shape-rendering",
                        slope: 0,
                        spacing: 0,
                        specularConstant: "specularConstant",
                        specularExponent: "specularExponent",
                        speed: 0,
                        spreadMethod: "spreadMethod",
                        startOffset: "startOffset",
                        stdDeviation: "stdDeviation",
                        stemh: 0,
                        stemv: 0,
                        stitchTiles: "stitchTiles",
                        stopColor: "stop-color",
                        stopOpacity: "stop-opacity",
                        strikethroughPosition: "strikethrough-position",
                        strikethroughThickness: "strikethrough-thickness",
                        string: 0,
                        stroke: 0,
                        strokeDasharray: "stroke-dasharray",
                        strokeDashoffset: "stroke-dashoffset",
                        strokeLinecap: "stroke-linecap",
                        strokeLinejoin: "stroke-linejoin",
                        strokeMiterlimit: "stroke-miterlimit",
                        strokeOpacity: "stroke-opacity",
                        strokeWidth: "stroke-width",
                        surfaceScale: "surfaceScale",
                        systemLanguage: "systemLanguage",
                        tableValues: "tableValues",
                        targetX: "targetX",
                        targetY: "targetY",
                        textAnchor: "text-anchor",
                        textDecoration: "text-decoration",
                        textRendering: "text-rendering",
                        textLength: "textLength",
                        to: 0,
                        transform: 0,
                        u1: 0,
                        u2: 0,
                        underlinePosition: "underline-position",
                        underlineThickness: "underline-thickness",
                        unicode: 0,
                        unicodeBidi: "unicode-bidi",
                        unicodeRange: "unicode-range",
                        unitsPerEm: "units-per-em",
                        vAlphabetic: "v-alphabetic",
                        vHanging: "v-hanging",
                        vIdeographic: "v-ideographic",
                        vMathematical: "v-mathematical",
                        values: 0,
                        vectorEffect: "vector-effect",
                        version: 0,
                        vertAdvY: "vert-adv-y",
                        vertOriginX: "vert-origin-x",
                        vertOriginY: "vert-origin-y",
                        viewBox: "viewBox",
                        viewTarget: "viewTarget",
                        visibility: 0,
                        widths: 0,
                        wordSpacing: "word-spacing",
                        writingMode: "writing-mode",
                        x: 0,
                        xHeight: "x-height",
                        x1: 0,
                        x2: 0,
                        xChannelSelector: "xChannelSelector",
                        xlinkActuate: "xlink:actuate",
                        xlinkArcrole: "xlink:arcrole",
                        xlinkHref: "xlink:href",
                        xlinkRole: "xlink:role",
                        xlinkShow: "xlink:show",
                        xlinkTitle: "xlink:title",
                        xlinkType: "xlink:type",
                        xmlBase: "xml:base",
                        xmlns: 0,
                        xmlnsXlink: "xmlns:xlink",
                        xmlLang: "xml:lang",
                        xmlSpace: "xml:space",
                        y: 0,
                        y1: 0,
                        y2: 0,
                        yChannelSelector: "yChannelSelector",
                        z: 0,
                        zoomAndPan: "zoomAndPan"
                    }, i = {
                        Properties: {},
                        DOMAttributeNamespaces: {
                            xlinkActuate: r.xlink,
                            xlinkArcrole: r.xlink,
                            xlinkHref: r.xlink,
                            xlinkRole: r.xlink,
                            xlinkShow: r.xlink,
                            xlinkTitle: r.xlink,
                            xlinkType: r.xlink,
                            xmlBase: r.xml,
                            xmlLang: r.xml,
                            xmlSpace: r.xml
                        },
                        DOMAttributeNames: {}
                    };
                    Object.keys(o).forEach(function(e) {
                        i.Properties[e] = 0, o[e] && (i.DOMAttributeNames[e] = o[e]);
                    }), t.exports = i;
                }, {} ],
                85: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
                    function r(e) {
                        if ("selectionStart" in e && u.hasSelectionCapabilities(e)) return {
                            start: e.selectionStart,
                            end: e.selectionEnd
                        };
                        if (window.getSelection) {
                            var t = window.getSelection();
                            return {
                                anchorNode: t.anchorNode,
                                anchorOffset: t.anchorOffset,
                                focusNode: t.focusNode,
                                focusOffset: t.focusOffset
                            };
                        }
                        if (document.selection) {
                            var n = document.selection.createRange();
                            return {
                                parentElement: n.parentElement(),
                                text: n.text,
                                top: n.boundingTop,
                                left: n.boundingLeft
                            };
                        }
                    }
                    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
                    function o(e, t) {
                        // Ensure we have the right element, and that the user is not dragging a
                        // selection (this matches native `select` event behavior). In HTML5, select
                        // fires only on input and textarea thus if there's no focused element we
                        // won't dispatch.
                        if (y || null == m || m !== c()) return null;
                        // Only fire when selection has actually changed.
                        var n = r(m);
                        if (!v || !d(v, n)) {
                            v = n;
                            var o = l.getPooled(h.select, g, e, t);
                            return o.type = "select", o.target = m, i.accumulateTwoPhaseDispatches(o), o;
                        }
                        return null;
                    }
                    var i = e(20), a = e(138), s = e(34), u = e(62), l = e(91), c = e(147), p = e(123), d = e(158), f = a.canUseDOM && "documentMode" in document && document.documentMode <= 11, h = {
                        select: {
                            phasedRegistrationNames: {
                                bubbled: "onSelect",
                                captured: "onSelectCapture"
                            },
                            dependencies: [ "topBlur", "topContextMenu", "topFocus", "topKeyDown", "topKeyUp", "topMouseDown", "topMouseUp", "topSelectionChange" ]
                        }
                    }, m = null, g = null, v = null, y = !1, b = !1, x = {
                        eventTypes: h,
                        extractEvents: function(e, t, n, r) {
                            if (!b) return null;
                            var i = t ? s.getNodeFromInstance(t) : window;
                            switch (e) {
                              // Track the input node that has focus.
                                case "topFocus":
                                (p(i) || "true" === i.contentEditable) && (m = i, g = t, v = null);
                                break;

                              case "topBlur":
                                m = null, g = null, v = null;
                                break;

                              // Don't fire the event while the user is dragging. This matches the
                                // semantics of the native select event.
                                case "topMouseDown":
                                y = !0;
                                break;

                              case "topContextMenu":
                              case "topMouseUp":
                                return y = !1, o(n, r);

                              // Chrome and IE fire non-standard event when selection is changed (and
                                // sometimes when it hasn't). IE's event fires out of order with respect
                                // to key and input events on deletion, so we discard it.
                                //
                                // Firefox doesn't support selectionchange, so check selection status
                                // after each key entry. The selection changes after keydown and before
                                // keyup, but we check on keydown as well in the case of holding down a
                                // key, when multiple keydown events are fired but only one keyup is.
                                // This is also our approach for IE handling, for the reason above.
                                case "topSelectionChange":
                                if (f) break;

                              // falls through
                                case "topKeyDown":
                              case "topKeyUp":
                                return o(n, r);
                            }
                            return null;
                        },
                        didPutListener: function(e, t, n) {
                            "onSelect" === t && (b = !0);
                        }
                    };
                    t.exports = x;
                }, {
                    "123": 123,
                    "138": 138,
                    "147": 147,
                    "158": 158,
                    "20": 20,
                    "34": 34,
                    "62": 62,
                    "91": 91
                } ],
                86: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e) {
                        // Prevents V8 performance issue:
                        // https://github.com/facebook/react/pull/7232
                        return "." + e._rootNodeID;
                    }
                    function o(e) {
                        return "button" === e || "input" === e || "select" === e || "textarea" === e;
                    }
                    var i = (e(126), e(137)), a = e(20), s = e(34), u = e(87), l = e(88), c = e(91), p = e(92), d = e(94), f = e(95), h = e(90), m = e(96), g = e(97), v = e(98), y = e(99), b = e(144), x = e(111), C = e(152), w = {}, E = {};
                    [ "abort", "animationEnd", "animationIteration", "animationStart", "blur", "canPlay", "canPlayThrough", "click", "contextMenu", "copy", "cut", "doubleClick", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "focus", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "progress", "rateChange", "reset", "scroll", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchMove", "touchStart", "transitionEnd", "volumeChange", "waiting", "wheel" ].forEach(function(e) {
                        var t = e[0].toUpperCase() + e.slice(1), n = "on" + t, r = "top" + t, o = {
                            phasedRegistrationNames: {
                                bubbled: n,
                                captured: n + "Capture"
                            },
                            dependencies: [ r ]
                        };
                        w[e] = o, E[r] = o;
                    });
                    var _ = {}, k = {
                        eventTypes: w,
                        extractEvents: function(e, t, n, r) {
                            var o = E[e];
                            if (!o) return null;
                            var i;
                            switch (e) {
                              case "topAbort":
                              case "topCanPlay":
                              case "topCanPlayThrough":
                              case "topDurationChange":
                              case "topEmptied":
                              case "topEncrypted":
                              case "topEnded":
                              case "topError":
                              case "topInput":
                              case "topInvalid":
                              case "topLoad":
                              case "topLoadedData":
                              case "topLoadedMetadata":
                              case "topLoadStart":
                              case "topPause":
                              case "topPlay":
                              case "topPlaying":
                              case "topProgress":
                              case "topRateChange":
                              case "topReset":
                              case "topSeeked":
                              case "topSeeking":
                              case "topStalled":
                              case "topSubmit":
                              case "topSuspend":
                              case "topTimeUpdate":
                              case "topVolumeChange":
                              case "topWaiting":
                                // HTML Events
                                // @see http://www.w3.org/TR/html5/index.html#events-0
                                i = c;
                                break;

                              case "topKeyPress":
                                // Firefox creates a keypress event for function keys too. This removes
                                // the unwanted keypress events. Enter is however both printable and
                                // non-printable. One would expect Tab to be as well (but it isn't).
                                if (0 === x(n)) return null;

                              /* falls through */
                                case "topKeyDown":
                              case "topKeyUp":
                                i = d;
                                break;

                              case "topBlur":
                              case "topFocus":
                                i = p;
                                break;

                              case "topClick":
                                // Firefox creates a click event on right mouse clicks. This removes the
                                // unwanted click events.
                                if (2 === n.button) return null;

                              /* falls through */
                                case "topDoubleClick":
                              case "topMouseDown":
                              case "topMouseMove":
                              case "topMouseUp":
                              // TODO: Disabled elements should not respond to mouse events
                                /* falls through */
                                case "topMouseOut":
                              case "topMouseOver":
                              case "topContextMenu":
                                i = f;
                                break;

                              case "topDrag":
                              case "topDragEnd":
                              case "topDragEnter":
                              case "topDragExit":
                              case "topDragLeave":
                              case "topDragOver":
                              case "topDragStart":
                              case "topDrop":
                                i = h;
                                break;

                              case "topTouchCancel":
                              case "topTouchEnd":
                              case "topTouchMove":
                              case "topTouchStart":
                                i = m;
                                break;

                              case "topAnimationEnd":
                              case "topAnimationIteration":
                              case "topAnimationStart":
                                i = u;
                                break;

                              case "topTransitionEnd":
                                i = g;
                                break;

                              case "topScroll":
                                i = v;
                                break;

                              case "topWheel":
                                i = y;
                                break;

                              case "topCopy":
                              case "topCut":
                              case "topPaste":
                                i = l;
                            }
                            i || C(!1, "SimpleEventPlugin: Unhandled event type, `%s`.", e);
                            var s = i.getPooled(o, t, n, r);
                            return a.accumulateTwoPhaseDispatches(s), s;
                        },
                        didPutListener: function(e, t, n) {
                            // Mobile Safari does not fire properly bubble click events on
                            // non-interactive elements, which means delegated click listeners do not
                            // fire. The workaround for this bug involves attaching an empty click
                            // listener on the target node.
                            // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
                            if ("onClick" === t && !o(e._tag)) {
                                var a = r(e), u = s.getNodeFromInstance(e);
                                _[a] || (_[a] = i.listen(u, "click", b));
                            }
                        },
                        willDeleteListener: function(e, t) {
                            if ("onClick" === t && !o(e._tag)) {
                                var n = r(e);
                                _[n].remove(), delete _[n];
                            }
                        }
                    };
                    t.exports = k;
                }, {
                    "111": 111,
                    "126": 126,
                    "137": 137,
                    "144": 144,
                    "152": 152,
                    "20": 20,
                    "34": 34,
                    "87": 87,
                    "88": 88,
                    "90": 90,
                    "91": 91,
                    "92": 92,
                    "94": 94,
                    "95": 95,
                    "96": 96,
                    "97": 97,
                    "98": 98,
                    "99": 99
                } ],
                87: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = {
                        animationName: null,
                        elapsedTime: null,
                        pseudoElement: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "91": 91
                } ],
                88: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = {
                        clipboardData: function(e) {
                            return "clipboardData" in e ? e.clipboardData : window.clipboardData;
                        }
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "91": 91
                } ],
                89: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = {
                        data: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "91": 91
                } ],
                90: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(95), i = {
                        dataTransfer: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "95": 95
                } ],
                91: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
                    function r(e, t, n, r) {
                        // these have a getter/setter for warnings
                        delete this.nativeEvent, delete this.preventDefault, delete this.stopPropagation, 
                        this.dispatchConfig = e, this._targetInst = t, this.nativeEvent = n;
                        var o = this.constructor.Interface;
                        for (var i in o) if (o.hasOwnProperty(i)) {
                            delete this[i];
                            var a = o[i];
                            a ? this[i] = a(n) : "target" === i ? this.target = r : this[i] = n[i];
                        }
                        var u = null != n.defaultPrevented ? n.defaultPrevented : !1 === n.returnValue;
                        return this.isDefaultPrevented = u ? s.thatReturnsTrue : s.thatReturnsFalse, this.isPropagationStopped = s.thatReturnsFalse, 
                        this;
                    }
                    /**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
                    function o(e, t) {
                        function n(e) {
                            return o(i ? "setting the method" : "setting the property", "This is effectively a no-op"), 
                            e;
                        }
                        function r() {
                            return o(i ? "accessing the method" : "accessing the property", i ? "This is a no-op function" : "This is set to null"), 
                            t;
                        }
                        function o(t, n) {
                            u(!1, "This synthetic event is reused for performance reasons. If you're seeing this, you're %s `%s` on a released/nullified synthetic event. %s. If you must keep the original synthetic event around, use event.persist(). See https://fb.me/react-event-pooling for more information.", t, e, n);
                        }
                        var i = "function" == typeof t;
                        return {
                            configurable: !0,
                            set: n,
                            get: r
                        };
                    }
                    var i = e(160), a = e(25), s = e(144), u = e(159), l = !1, c = "function" == typeof Proxy, p = [ "dispatchConfig", "_targetInst", "nativeEvent", "isDefaultPrevented", "isPropagationStopped", "_dispatchListeners", "_dispatchInstances" ], d = {
                        type: null,
                        target: null,
                        // currentTarget is set when dispatching; no use in copying it here
                        currentTarget: s.thatReturnsNull,
                        eventPhase: null,
                        bubbles: null,
                        cancelable: null,
                        timeStamp: function(e) {
                            return e.timeStamp || Date.now();
                        },
                        defaultPrevented: null,
                        isTrusted: null
                    };
                    i(r.prototype, {
                        preventDefault: function() {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1), 
                            this.isDefaultPrevented = s.thatReturnsTrue);
                        },
                        stopPropagation: function() {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (// The ChangeEventPlugin registers a "propertychange" event for
                            // IE. This event does not support bubbling or cancelling, and
                            // any references to cancelBubble throw "Member not found".  A
                            // typeof check of "unknown" circumvents this issue (and is also
                            // IE specific).
                            e.cancelBubble = !0), this.isPropagationStopped = s.thatReturnsTrue);
                        },
                        /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
                        persist: function() {
                            this.isPersistent = s.thatReturnsTrue;
                        },
                        /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
                        isPersistent: s.thatReturnsFalse,
                        /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
                        destructor: function() {
                            var e = this.constructor.Interface;
                            for (var t in e) Object.defineProperty(this, t, o(t, e[t]));
                            for (var n = 0; n < p.length; n++) this[p[n]] = null;
                            Object.defineProperty(this, "nativeEvent", o("nativeEvent", null)), Object.defineProperty(this, "preventDefault", o("preventDefault", s)), 
                            Object.defineProperty(this, "stopPropagation", o("stopPropagation", s));
                        }
                    }), r.Interface = d, c && (/*eslint-disable no-func-assign */
                    r = new Proxy(r, {
                        construct: function(e, t) {
                            return this.apply(e, Object.create(e.prototype), t);
                        },
                        apply: function(e, t, n) {
                            return new Proxy(e.apply(t, n), {
                                set: function(e, t, n) {
                                    return "isPersistent" === t || e.constructor.Interface.hasOwnProperty(t) || -1 !== p.indexOf(t) || (u(l || e.isPersistent(), "This synthetic event is reused for performance reasons. If you're seeing this, you're adding a new property in the synthetic event object. The property is never released. See https://fb.me/react-event-pooling for more information."), 
                                    l = !0), e[t] = n, !0;
                                }
                            });
                        }
                    })), /**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
                    r.augmentClass = function(e, t) {
                        var n = this, r = function() {};
                        r.prototype = n.prototype;
                        var o = new r();
                        i(o, e.prototype), e.prototype = o, e.prototype.constructor = e, e.Interface = i({}, n.Interface, t), 
                        e.augmentClass = n.augmentClass, a.addPoolingTo(e, a.fourArgumentPooler);
                    }, a.addPoolingTo(r, a.fourArgumentPooler), t.exports = r;
                }, {
                    "144": 144,
                    "159": 159,
                    "160": 160,
                    "25": 25
                } ],
                92: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(98), i = {
                        relatedTarget: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "98": 98
                } ],
                93: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = {
                        data: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "91": 91
                } ],
                94: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(98), i = e(111), a = e(112), s = e(113), u = {
                        key: a,
                        location: null,
                        ctrlKey: null,
                        shiftKey: null,
                        altKey: null,
                        metaKey: null,
                        repeat: null,
                        locale: null,
                        getModifierState: s,
                        // Legacy Interface
                        charCode: function(e) {
                            // `charCode` is the result of a KeyPress event and represents the value of
                            // the actual printable character.
                            // KeyPress is deprecated, but its replacement is not yet final and not
                            // implemented in any major browser. Only KeyPress has charCode.
                            // `charCode` is the result of a KeyPress event and represents the value of
                            // the actual printable character.
                            // KeyPress is deprecated, but its replacement is not yet final and not
                            // implemented in any major browser. Only KeyPress has charCode.
                            return "keypress" === e.type ? i(e) : 0;
                        },
                        keyCode: function(e) {
                            // `keyCode` is the result of a KeyDown/Up event and represents the value of
                            // physical keyboard key.
                            // The actual meaning of the value depends on the users' keyboard layout
                            // which cannot be detected. Assuming that it is a US keyboard layout
                            // provides a surprisingly accurate mapping for US and European users.
                            // Due to this, it is left to the user to implement at this time.
                            // `keyCode` is the result of a KeyDown/Up event and represents the value of
                            // physical keyboard key.
                            // The actual meaning of the value depends on the users' keyboard layout
                            // which cannot be detected. Assuming that it is a US keyboard layout
                            // provides a surprisingly accurate mapping for US and European users.
                            // Due to this, it is left to the user to implement at this time.
                            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
                        },
                        which: function(e) {
                            // `which` is an alias for either `keyCode` or `charCode` depending on the
                            // type of the event.
                            // `which` is an alias for either `keyCode` or `charCode` depending on the
                            // type of the event.
                            return "keypress" === e.type ? i(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0;
                        }
                    };
                    o.augmentClass(r, u), t.exports = r;
                }, {
                    "111": 111,
                    "112": 112,
                    "113": 113,
                    "98": 98
                } ],
                95: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(98), i = e(101), a = e(113), s = {
                        screenX: null,
                        screenY: null,
                        clientX: null,
                        clientY: null,
                        ctrlKey: null,
                        shiftKey: null,
                        altKey: null,
                        metaKey: null,
                        getModifierState: a,
                        button: function(e) {
                            // Webkit, Firefox, IE9+
                            // which:  1 2 3
                            // button: 0 1 2 (standard)
                            var t = e.button;
                            return "which" in e ? t : 2 === t ? 2 : 4 === t ? 1 : 0;
                        },
                        buttons: null,
                        relatedTarget: function(e) {
                            return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement);
                        },
                        // "Proprietary" Interface.
                        pageX: function(e) {
                            return "pageX" in e ? e.pageX : e.clientX + i.currentScrollLeft;
                        },
                        pageY: function(e) {
                            return "pageY" in e ? e.pageY : e.clientY + i.currentScrollTop;
                        }
                    };
                    o.augmentClass(r, s), t.exports = r;
                }, {
                    "101": 101,
                    "113": 113,
                    "98": 98
                } ],
                96: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(98), i = e(113), a = {
                        touches: null,
                        targetTouches: null,
                        changedTouches: null,
                        altKey: null,
                        metaKey: null,
                        ctrlKey: null,
                        shiftKey: null,
                        getModifierState: i
                    };
                    o.augmentClass(r, a), t.exports = r;
                }, {
                    "113": 113,
                    "98": 98
                } ],
                97: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = {
                        propertyName: null,
                        elapsedTime: null,
                        pseudoElement: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "91": 91
                } ],
                98: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(91), i = e(114), a = {
                        view: function(e) {
                            if (e.view) return e.view;
                            var t = i(e);
                            if (t.window === t) // target is a window object
                            return t;
                            var n = t.ownerDocument;
                            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
                            return n ? n.defaultView || n.parentWindow : window;
                        },
                        detail: function(e) {
                            return e.detail || 0;
                        }
                    };
                    o.augmentClass(r, a), t.exports = r;
                }, {
                    "114": 114,
                    "91": 91
                } ],
                99: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
                    function r(e, t, n, r) {
                        return o.call(this, e, t, n, r);
                    }
                    var o = e(95), i = {
                        deltaX: function(e) {
                            // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
                            return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
                        },
                        deltaY: function(e) {
                            // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
                            // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                            return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0;
                        },
                        deltaZ: null,
                        // Browsers without "deltaMode" is reporting in raw wheel delta where one
                        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
                        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
                        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
                        deltaMode: null
                    };
                    o.augmentClass(r, i), t.exports = r;
                }, {
                    "95": 95
                } ],
                100: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    var r = (e(126), e(152)), o = {}, i = {
                        /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
                        reinitializeTransaction: function() {
                            this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], 
                            this._isInTransaction = !1;
                        },
                        _isInTransaction: !1,
                        /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
                        getTransactionWrappers: null,
                        isInTransaction: function() {
                            return !!this._isInTransaction;
                        },
                        /* eslint-disable space-before-function-paren */
                        /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
                        perform: function(e, t, n, o, i, a, s, u) {
                            /* eslint-enable space-before-function-paren */
                            this.isInTransaction() && r(!1, "Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.");
                            var l, c;
                            try {
                                this._isInTransaction = !0, // Catching errors makes debugging more difficult, so we start with
                                // errorThrown set to true before setting it to false after calling
                                // close -- if it's still set to true in the finally block, it means
                                // one of these calls threw.
                                l = !0, this.initializeAll(0), c = e.call(t, n, o, i, a, s, u), l = !1;
                            } finally {
                                try {
                                    if (l) // If `method` throws, prefer to show that stack trace over any thrown
                                    // by invoking `closeAll`.
                                    try {
                                        this.closeAll(0);
                                    } catch (e) {} else // Since `method` didn't throw, we don't want to silence the exception
                                    // here.
                                    this.closeAll(0);
                                } finally {
                                    this._isInTransaction = !1;
                                }
                            }
                            return c;
                        },
                        initializeAll: function(e) {
                            for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                                var r = t[n];
                                try {
                                    // Catching errors makes debugging more difficult, so we start with the
                                    // OBSERVED_ERROR state before overwriting it with the real return value
                                    // of initialize -- if it's still set to OBSERVED_ERROR in the finally
                                    // block, it means wrapper.initialize threw.
                                    this.wrapperInitData[n] = o, this.wrapperInitData[n] = r.initialize ? r.initialize.call(this) : null;
                                } finally {
                                    if (this.wrapperInitData[n] === o) // The initializer for wrapper i threw an error; initialize the
                                    // remaining wrappers but silence any exceptions from them to ensure
                                    // that the first error is the one to bubble up.
                                    try {
                                        this.initializeAll(n + 1);
                                    } catch (e) {}
                                }
                            }
                        },
                        /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
                        closeAll: function(e) {
                            this.isInTransaction() || r(!1, "Transaction.closeAll(): Cannot close transaction when none are open.");
                            for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                                var i, a = t[n], s = this.wrapperInitData[n];
                                try {
                                    // Catching errors makes debugging more difficult, so we start with
                                    // errorThrown set to true before setting it to false after calling
                                    // close -- if it's still set to true in the finally block, it means
                                    // wrapper.close threw.
                                    i = !0, s !== o && a.close && a.close.call(this, s), i = !1;
                                } finally {
                                    if (i) // The closer for wrapper i threw an error; close the remaining
                                    // wrappers but silence any exceptions from them to ensure that the
                                    // first error is the one to bubble up.
                                    try {
                                        this.closeAll(n + 1);
                                    } catch (e) {}
                                }
                            }
                            this.wrapperInitData.length = 0;
                        }
                    };
                    t.exports = i;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                101: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {
                        currentScrollLeft: 0,
                        currentScrollTop: 0,
                        refreshScrollValues: function(e) {
                            r.currentScrollLeft = e.x, r.currentScrollTop = e.y;
                        }
                    };
                    t.exports = r;
                }, {} ],
                102: [ function(e, t, n) {
                    /**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */
                    function r(e, t) {
                        // Both are not empty. Warning: Never call x.concat(y) when you are not
                        // certain that x is an Array (x could be a string with concat method).
                        return null == t && o(!1, "accumulateInto(...): Accumulated items must not be null or undefined."), 
                        null == e ? t : Array.isArray(e) ? Array.isArray(t) ? (e.push.apply(e, t), e) : (e.push(t), 
                        e) : Array.isArray(t) ? [ e ].concat(t) : [ e, t ];
                    }
                    var o = (e(126), e(152));
                    t.exports = r;
                }, {
                    "126": 126,
                    "152": 152
                } ],
                103: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    // adler32 is not cryptographically strong, and is only used to sanity check that
                    // markup generated on the server matches the markup generated on the client.
                    // This implementation (a modified version of the SheetJS version) has been optimized
                    // for our use case, at the expense of conforming to the adler32 specification
                    // for non-ascii inputs.
                    function r(e) {
                        for (var t = 1, n = 0, r = 0, i = e.length, a = -4 & i; r < a; ) {
                            for (var s = Math.min(r + 4096, a); r < s; r += 4) n += (t += e.charCodeAt(r)) + (t += e.charCodeAt(r + 1)) + (t += e.charCodeAt(r + 2)) + (t += e.charCodeAt(r + 3));
                            t %= o, n %= o;
                        }
                        for (;r < i; r++) n += t += e.charCodeAt(r);
                        return t %= o, n %= o, t | n << 16;
                    }
                    var o = 65521;
                    t.exports = r;
                }, {} ],
                104: [ function(e, t, n) {
                    (function(n) {
                        /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                        "use strict";
                        /**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
                        function r(t, n, r, c, p, d) {
                            for (var f in t) if (t.hasOwnProperty(f)) {
                                var h;
                                // Prop type validation may throw. In case they do, we don't want to
                                // fail the render phase where it didn't fail before. So we log it.
                                // After these have been cleaned up, we'll let them throw.
                                try {
                                    // This is intentionally an invariant that gets caught. It's the same
                                    // behavior as without this statement except with a better message.
                                    "function" != typeof t[f] && s(!1, "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", c || "React class", i[r], f), 
                                    h = t[f](n, f, c, r, null, a);
                                } catch (e) {
                                    h = e;
                                }
                                if (u(!h || h instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", c || "React class", i[r], f, typeof h), 
                                h instanceof Error && !(h.message in l)) {
                                    // Only monitor this failure once because there tends to be a lot of the
                                    // same error.
                                    l[h.message] = !0;
                                    var m = "";
                                    o || (o = e(133)), null !== d ? m = o.getStackAddendumByID(d) : null !== p && (m = o.getCurrentStackAddendum(p)), 
                                    u(!1, "Failed %s type: %s%s", r, h.message, m);
                                }
                            }
                        }
                        var o, i = (e(126), e(72)), a = e(73), s = e(152), u = e(159);
                        void 0 !== n && n.env;
                        var l = {};
                        t.exports = r;
                    }).call(this, void 0);
                }, {
                    "126": 126,
                    "133": 133,
                    "152": 152,
                    "159": 159,
                    "72": 72,
                    "73": 73
                } ],
                105: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals MSApp */
                    "use strict";
                    /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
                    var r = function(e) {
                        return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, n, r, o) {
                            MSApp.execUnsafeLocalFunction(function() {
                                return e(t, n, r, o);
                            });
                        } : e;
                    };
                    t.exports = r;
                }, {} ],
                106: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
                    function r(e, t, n, r) {
                        if (null == t || "boolean" == typeof t || "" === t) return "";
                        var o = isNaN(t);
                        if (r || o || 0 === t || a.hasOwnProperty(e) && a[e]) return "" + t;
                        if ("string" == typeof t) {
                            // Allow '0' to pass through without warning. 0 is already special and
                            // doesn't require units, so we don't need to warn about it.
                            if (n && "0" !== t) {
                                var u = n._currentElement._owner, l = u ? u.getName() : null;
                                l && !s[l] && (s[l] = {});
                                var c = !1;
                                if (l) {
                                    var p = s[l];
                                    c = p[e], c || (p[e] = !0);
                                }
                                c || i(!1, "a `%s` tag (owner: `%s`) was passed a numeric string value for CSS property `%s` (value: `%s`) which will be treated as a unitless number in a future version of React.", n._currentElement.type, l || "unknown", e, t);
                            }
                            t = t.trim();
                        }
                        return t + "px";
                    }
                    var o = e(4), i = e(159), a = o.isUnitlessNumber, s = {};
                    t.exports = r;
                }, {
                    "159": 159,
                    "4": 4
                } ],
                107: [ function(e, t, n) {
                    /**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */
                    "use strict";
                    /**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */
                    function r(e) {
                        var t = "" + e, n = i.exec(t);
                        if (!n) return t;
                        var r, o = "", a = 0, s = 0;
                        for (a = n.index; a < t.length; a++) {
                            switch (t.charCodeAt(a)) {
                              case 34:
                                // "
                                r = "&quot;";
                                break;

                              case 38:
                                // &
                                r = "&amp;";
                                break;

                              case 39:
                                // '
                                r = "&#x27;";
                                // modified from escape-html; used to be '&#39'
                                break;

                              case 60:
                                // <
                                r = "&lt;";
                                break;

                              case 62:
                                // >
                                r = "&gt;";
                                break;

                              default:
                                continue;
                            }
                            s !== a && (o += t.substring(s, a)), s = a + 1, o += r;
                        }
                        return s !== a ? o + t.substring(s, a) : o;
                    }
                    // end code copied and modified from escape-html
                    /**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
                    function o(e) {
                        return "boolean" == typeof e || "number" == typeof e ? "" + e : r(e);
                    }
                    // code copied and modified from escape-html
                    /**
 * Module variables.
 * @private
 */
                    var i = /["'&<>]/;
                    t.exports = o;
                }, {} ],
                108: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
                    function r(e) {
                        var t = o.current;
                        if (null !== t && (l(t._warnedAboutRefsInRender, "%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", t.getName() || "A component"), 
                        t._warnedAboutRefsInRender = !0), null == e) return null;
                        if (1 === e.nodeType) return e;
                        var n = a.get(e);
                        if (n) return n = s(n), n ? i.getNodeFromInstance(n) : null;
                        "function" == typeof e.render ? u(!1, "findDOMNode was called on an unmounted component.") : u(!1, "Element appears to be neither ReactComponent nor DOMNode (keys: %s)", Object.keys(e));
                    }
                    var o = (e(126), e(134)), i = e(34), a = e(63), s = e(115), u = e(152), l = e(159);
                    t.exports = r;
                }, {
                    "115": 115,
                    "126": 126,
                    "134": 134,
                    "152": 152,
                    "159": 159,
                    "34": 34,
                    "63": 63
                } ],
                109: [ function(e, t, n) {
                    (function(n) {
                        /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                        "use strict";
                        /**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
                        function r(t, n, r, o) {
                            // We found a component instance.
                            if (t && "object" == typeof t) {
                                var s = t, l = void 0 === s[r];
                                i || (i = e(133)), l || u(!1, "flattenChildren(...): Encountered two children with the same key, `%s`. Child keys must be unique; when two children share a key, only the first child will be used.%s", a.unescape(r), i.getStackAddendumByID(o)), 
                                l && null != n && (s[r] = n);
                            }
                        }
                        /**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
                        function o(e, t) {
                            if (null == e) return e;
                            var n = {};
                            return s(e, function(e, n, o) {
                                return r(e, n, o, t);
                            }, n), n;
                        }
                        var i, a = e(23), s = e(131), u = e(159);
                        void 0 !== n && n.env, t.exports = o;
                    }).call(this, void 0);
                }, {
                    "131": 131,
                    "133": 133,
                    "159": 159,
                    "23": 23
                } ],
                110: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
                    function r(e, t, n) {
                        Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e);
                    }
                    t.exports = r;
                }, {} ],
                111: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
                    function r(e) {
                        var t, n = e.keyCode;
                        // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
                        // Must not discard the (non-)printable Enter-key.
                        // FF does not set `charCode` for the Enter-key, check against `keyCode`.
                        // IE8 does not implement `charCode`, but `keyCode` has the correct value.
                        // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
                        // Must not discard the (non-)printable Enter-key.
                        return "charCode" in e ? 0 === (t = e.charCode) && 13 === n && (t = 13) : t = n, 
                        t >= 32 || 13 === t ? t : 0;
                    }
                    t.exports = r;
                }, {} ],
                112: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
                    function r(e) {
                        if (e.key) {
                            // Normalize inconsistent values reported by browsers due to
                            // implementations of a working draft specification.
                            // FireFox implements `key` but returns `MozPrintableKey` for all
                            // printable characters (normalized to `Unidentified`), ignore it.
                            var t = i[e.key] || e.key;
                            if ("Unidentified" !== t) return t;
                        }
                        // Browser does not implement `key`, polyfill as much of it as we can.
                        if ("keypress" === e.type) {
                            var n = o(e);
                            // The enter-key is technically both printable and non-printable and can
                            // thus be captured by `keypress`, no other non-printable key should.
                            return 13 === n ? "Enter" : String.fromCharCode(n);
                        }
                        return "keydown" === e.type || "keyup" === e.type ? a[e.keyCode] || "Unidentified" : "";
                    }
                    var o = e(111), i = {
                        Esc: "Escape",
                        Spacebar: " ",
                        Left: "ArrowLeft",
                        Up: "ArrowUp",
                        Right: "ArrowRight",
                        Down: "ArrowDown",
                        Del: "Delete",
                        Win: "OS",
                        Menu: "ContextMenu",
                        Apps: "ContextMenu",
                        Scroll: "ScrollLock",
                        MozPrintableKey: "Unidentified"
                    }, a = {
                        8: "Backspace",
                        9: "Tab",
                        12: "Clear",
                        13: "Enter",
                        16: "Shift",
                        17: "Control",
                        18: "Alt",
                        19: "Pause",
                        20: "CapsLock",
                        27: "Escape",
                        32: " ",
                        33: "PageUp",
                        34: "PageDown",
                        35: "End",
                        36: "Home",
                        37: "ArrowLeft",
                        38: "ArrowUp",
                        39: "ArrowRight",
                        40: "ArrowDown",
                        45: "Insert",
                        46: "Delete",
                        112: "F1",
                        113: "F2",
                        114: "F3",
                        115: "F4",
                        116: "F5",
                        117: "F6",
                        118: "F7",
                        119: "F8",
                        120: "F9",
                        121: "F10",
                        122: "F11",
                        123: "F12",
                        144: "NumLock",
                        145: "ScrollLock",
                        224: "Meta"
                    };
                    t.exports = r;
                }, {
                    "111": 111
                } ],
                113: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    // IE8 does not implement getModifierState so we simply map it to the only
                    // modifier keys exposed by the event itself, does not support Lock-keys.
                    // Currently, all major browsers except Chrome seems to support Lock-keys.
                    function r(e) {
                        var t = this, n = t.nativeEvent;
                        if (n.getModifierState) return n.getModifierState(e);
                        var r = i[e];
                        return !!r && !!n[r];
                    }
                    function o(e) {
                        return r;
                    }
                    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */
                    var i = {
                        Alt: "altKey",
                        Control: "ctrlKey",
                        Meta: "metaKey",
                        Shift: "shiftKey"
                    };
                    t.exports = o;
                }, {} ],
                114: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
                    function r(e) {
                        var t = e.target || e.srcElement || window;
                        // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
                        // @see http://www.quirksmode.org/js/events_properties.html
                        // Normalize SVG <use> element events #4963
                        return t.correspondingUseElement && (t = t.correspondingUseElement), 3 === t.nodeType ? t.parentNode : t;
                    }
                    t.exports = r;
                }, {} ],
                115: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        for (var t; (t = e._renderedNodeType) === o.COMPOSITE; ) e = e._renderedComponent;
                        return t === o.HOST ? e._renderedComponent : t === o.EMPTY ? null : void 0;
                    }
                    var o = e(69);
                    t.exports = r;
                }, {
                    "69": 69
                } ],
                116: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    // Before Symbol spec.
                    /**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
                    function r(e) {
                        var t = e && (o && e[o] || e[i]);
                        if ("function" == typeof t) return t;
                    }
                    /* global Symbol */
                    var o = "function" == typeof Symbol && Symbol.iterator, i = "@@iterator";
                    t.exports = r;
                }, {} ],
                117: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
                    function r(e) {
                        for (;e && e.firstChild; ) e = e.firstChild;
                        return e;
                    }
                    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
                    function o(e) {
                        for (;e; ) {
                            if (e.nextSibling) return e.nextSibling;
                            e = e.parentNode;
                        }
                    }
                    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
                    function i(e, t) {
                        for (var n = r(e), i = 0, a = 0; n; ) {
                            if (3 === n.nodeType) {
                                if (a = i + n.textContent.length, i <= t && a >= t) return {
                                    node: n,
                                    offset: t - i
                                };
                                i = a;
                            }
                            n = r(o(n));
                        }
                    }
                    t.exports = i;
                }, {} ],
                118: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
                    function r() {
                        // Prefer textContent to innerText because many browsers support both but
                        // SVG <text> elements don't support innerText even when <div> does.
                        return !i && o.canUseDOM && (i = "textContent" in document.documentElement ? "textContent" : "innerText"), 
                        i;
                    }
                    var o = e(138), i = null;
                    t.exports = r;
                }, {
                    "138": 138
                } ],
                119: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
                    function r(e, t) {
                        var n = {};
                        return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, 
                        n["ms" + e] = "MS" + t, n["O" + e] = "o" + t.toLowerCase(), n;
                    }
                    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
                    function o(e) {
                        if (s[e]) return s[e];
                        if (!a[e]) return e;
                        var t = a[e];
                        for (var n in t) if (t.hasOwnProperty(n) && n in u) return s[e] = t[n];
                        return "";
                    }
                    var i = e(138), a = {
                        animationend: r("Animation", "AnimationEnd"),
                        animationiteration: r("Animation", "AnimationIteration"),
                        animationstart: r("Animation", "AnimationStart"),
                        transitionend: r("Transition", "TransitionEnd")
                    }, s = {}, u = {};
                    /**
 * Bootstrap if a DOM exists.
 */
                    i.canUseDOM && (u = document.createElement("div").style, // On some platforms, in particular some releases of Android 4.x,
                    // the un-prefixed "animation" and "transition" properties are defined on the
                    // style object but the events that fire will still be prefixed, so we need
                    // to check if the un-prefixed events are usable, and if not remove them from the map.
                    "AnimationEvent" in window || (delete a.animationend.animation, delete a.animationiteration.animation, 
                    delete a.animationstart.animation), // Same as above
                    "TransitionEvent" in window || delete a.transitionend.transition), t.exports = o;
                }, {
                    "138": 138
                } ],
                120: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        var t = e.type, n = e.nodeName;
                        return n && "input" === n.toLowerCase() && ("checkbox" === t || "radio" === t);
                    }
                    function o(e) {
                        return e._wrapperState.valueTracker;
                    }
                    function i(e, t) {
                        e._wrapperState.valueTracker = t;
                    }
                    function a(e) {
                        delete e._wrapperState.valueTracker;
                    }
                    function s(e) {
                        var t;
                        return e && (t = r(e) ? "" + e.checked : e.value), t;
                    }
                    var u = e(34), l = {
                        // exposed for testing
                        _getTrackerFromNode: function(e) {
                            return o(u.getInstanceFromNode(e));
                        },
                        track: function(e) {
                            if (!o(e)) {
                                var t = u.getNodeFromInstance(e), n = r(t) ? "checked" : "value", s = Object.getOwnPropertyDescriptor(t.constructor.prototype, n), l = "" + t[n];
                                // if someone has already defined a value or Safari, then bail
                                // and don't track value will cause over reporting of changes,
                                // but it's better then a hard failure
                                // (needed for certain tests that spyOn input values and Safari)
                                t.hasOwnProperty(n) || "function" != typeof s.get || "function" != typeof s.set || (Object.defineProperty(t, n, {
                                    enumerable: s.enumerable,
                                    configurable: !0,
                                    get: function() {
                                        return s.get.call(this);
                                    },
                                    set: function(e) {
                                        l = "" + e, s.set.call(this, e);
                                    }
                                }), i(e, {
                                    getValue: function() {
                                        return l;
                                    },
                                    setValue: function(e) {
                                        l = "" + e;
                                    },
                                    stopTracking: function() {
                                        a(e), delete t[n];
                                    }
                                }));
                            }
                        },
                        updateValueIfChanged: function(e) {
                            if (!e) return !1;
                            var t = o(e);
                            if (!t) return l.track(e), !0;
                            var n = t.getValue(), r = s(u.getNodeFromInstance(e));
                            return r !== n && (t.setValue(r), !0);
                        },
                        stopTracking: function(e) {
                            var t = o(e);
                            t && t.stopTracking();
                        }
                    };
                    t.exports = l;
                }, {
                    "34": 34
                } ],
                121: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e) {
                        if (e) {
                            var t = e.getName();
                            if (t) return " Check the render method of `" + t + "`.";
                        }
                        return "";
                    }
                    /**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
                    function o(e) {
                        return "function" == typeof e && void 0 !== e.prototype && "function" == typeof e.prototype.mountComponent && "function" == typeof e.prototype.receiveComponent;
                    }
                    /**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
                    function i(e, t) {
                        var n;
                        if (null === e || !1 === e) n = u.create(i); else if ("object" == typeof e) {
                            var a = e, s = a.type;
                            if ("function" != typeof s && "string" != typeof s) {
                                var h = "";
                                (void 0 === s || "object" == typeof s && null !== s && 0 === Object.keys(s).length) && (h += " You likely forgot to export your component from the file it's defined in."), 
                                h += r(a._owner), p(!1, "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", null == s ? s : typeof s, h);
                            }
                            // Special case string values
                            "string" == typeof a.type ? n = l.createInternalComponent(a) : o(a.type) ? (// This is temporarily available for custom components that are not string
                            // representations. I.e. ART. Once those are updated to use the string
                            // representation, we can drop this code path.
                            n = new a.type(a), // We renamed this. Allow the old name for compat. :(
                            n.getHostNode || (n.getHostNode = n.getNativeNode)) : n = new f(a);
                        } else "string" == typeof e || "number" == typeof e ? n = l.createInstanceForText(e) : p(!1, "Encountered invalid React node of type %s", typeof e);
                        // These two fields are used by the DOM and ART diffing algorithms
                        // respectively. Instead of using expandos on components, we should be
                        // storing the state needed by the diffing algorithms elsewhere.
                        return d("function" == typeof n.mountComponent && "function" == typeof n.receiveComponent && "function" == typeof n.getHostNode && "function" == typeof n.unmountComponent, "Only React Components can be mounted."), 
                        n._mountIndex = 0, n._mountImage = null, n._debugID = t ? c() : 0, Object.preventExtensions && Object.preventExtensions(n), 
                        n;
                    }
                    var a = (e(126), e(160)), s = e(30), u = e(54), l = e(59), c = e(136), p = e(152), d = e(159), f = function(e) {
                        this.construct(e);
                    };
                    a(f.prototype, s, {
                        _instantiateReactComponent: i
                    }), t.exports = i;
                }, {
                    "126": 126,
                    "136": 136,
                    "152": 152,
                    "159": 159,
                    "160": 160,
                    "30": 30,
                    "54": 54,
                    "59": 59
                } ],
                122: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
                    function r(e, t) {
                        if (!i.canUseDOM || t && !("addEventListener" in document)) return !1;
                        var n = "on" + e, r = n in document;
                        if (!r) {
                            var a = document.createElement("div");
                            a.setAttribute(n, "return;"), r = "function" == typeof a[n];
                        }
                        // This is the only way to test support for the `wheel` event in IE9+.
                        return !r && o && "wheel" === e && (r = document.implementation.hasFeature("Events.wheel", "3.0")), 
                        r;
                    }
                    var o, i = e(138);
                    i.canUseDOM && (o = document.implementation && document.implementation.hasFeature && // always returns true in newer browsers as per the standard.
                    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
                    !0 !== document.implementation.hasFeature("", "")), t.exports = r;
                }, {
                    "138": 138
                } ],
                123: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    function r(e) {
                        var t = e && e.nodeName && e.nodeName.toLowerCase();
                        return "input" === t ? !!o[e.type] : "textarea" === t;
                    }
                    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
                    var o = {
                        color: !0,
                        date: !0,
                        datetime: !0,
                        "datetime-local": !0,
                        email: !0,
                        month: !0,
                        number: !0,
                        password: !0,
                        range: !0,
                        search: !0,
                        tel: !0,
                        text: !0,
                        time: !0,
                        url: !0,
                        week: !0
                    };
                    t.exports = r;
                }, {} ],
                124: [ function(e, t, n) {
                    /**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */
                    var r = function() {}, o = function(e) {
                        for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                        var o = 0, i = "Warning: " + e.replace(/%s/g, function() {
                            return n[o++];
                        });
                        "undefined" != typeof console && console.warn(i);
                        try {
                            // --- Welcome to debugging React ---
                            // This error was thrown as a convenience so that you can use this stack
                            // to find the callsite that caused this warning to fire.
                            throw new Error(i);
                        } catch (e) {}
                    };
                    r = function(e, t) {
                        if (void 0 === t) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
                        if (!e) {
                            for (var n = arguments.length, r = Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
                            o.apply(void 0, [ t ].concat(r));
                        }
                    }, t.exports = r;
                }, {} ],
                125: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
                    function r(e) {
                        return '"' + o(e) + '"';
                    }
                    var o = e(107);
                    t.exports = r;
                }, {
                    "107": 107
                } ],
                126: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    "use strict";
                    /**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */
                    function r(e) {
                        for (var t = arguments.length - 1, n = "Minified React error #" + e + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant=" + e, r = 0; r < t; r++) n += "&args[]=" + encodeURIComponent(arguments[r + 1]);
                        n += " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
                        var o = new Error(n);
                        // we don't care about reactProdInvariant's own frame
                        throw o.name = "Invariant Violation", o.framesToPop = 1, o;
                    }
                    t.exports = r;
                }, {} ],
                127: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(67);
                    t.exports = r.renderSubtreeIntoContainer;
                }, {
                    "67": 67
                } ],
                128: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r, o = e(138), i = e(10), a = /^[ \r\n\t\f]/, s = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/, u = e(105), l = u(function(e, t) {
                        // IE does not have innerHTML for SVG nodes, so instead we inject the
                        // new markup in a temp node and then move the child nodes across into
                        // the target node
                        if (e.namespaceURI !== i.svg || "innerHTML" in e) e.innerHTML = t; else {
                            r = r || document.createElement("div"), r.innerHTML = "<svg>" + t + "</svg>";
                            for (var n = r.firstChild; n.firstChild; ) e.appendChild(n.firstChild);
                        }
                    });
                    if (o.canUseDOM) {
                        // IE8: When updating a just created node with innerHTML only leading
                        // whitespace is removed. When updating an existing node with innerHTML
                        // whitespace in root TextNodes is also collapsed.
                        // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
                        // Feature detection; only IE8 is known to behave improperly like this.
                        var c = document.createElement("div");
                        c.innerHTML = " ", "" === c.innerHTML && (l = function(e, t) {
                            // We also implement a workaround for non-visible tags disappearing into
                            // thin air on IE8, this only happens if there is no visible text
                            // in-front of the non-visible tags. Piggyback on the whitespace fix
                            // and simply check if any non-visible tags appear in the source.
                            if (// Magic theory: IE8 supposedly differentiates between added and updated
                            // nodes when processing innerHTML, innerHTML on updated nodes suffers
                            // from worse whitespace behavior. Re-adding a node like this triggers
                            // the initial and more favorable whitespace behavior.
                            // TODO: What to do on a detached node?
                            e.parentNode && e.parentNode.replaceChild(e, e), a.test(t) || "<" === t[0] && s.test(t)) {
                                // Recover leading whitespace by temporarily prepending any character.
                                // \uFEFF has the potential advantage of being zero-width/invisible.
                                // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
                                // in hopes that this is preserved even if "\uFEFF" is transformed to
                                // the actual Unicode character (by Babel, for example).
                                // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
                                e.innerHTML = String.fromCharCode(65279) + t;
                                // deleteData leaves an empty `TextNode` which offsets the index of all
                                // children. Definitely want to avoid this.
                                var n = e.firstChild;
                                1 === n.data.length ? e.removeChild(n) : n.deleteData(0, 1);
                            } else e.innerHTML = t;
                        }), c = null;
                    }
                    t.exports = l;
                }, {
                    "10": 10,
                    "105": 105,
                    "138": 138
                } ],
                129: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(138), o = e(107), i = e(128), a = function(e, t) {
                        if (t) {
                            var n = e.firstChild;
                            if (n && n === e.lastChild && 3 === n.nodeType) return void (n.nodeValue = t);
                        }
                        e.textContent = t;
                    };
                    r.canUseDOM && ("textContent" in document.documentElement || (a = function(e, t) {
                        if (3 === e.nodeType) return void (e.nodeValue = t);
                        i(e, o(t));
                    })), t.exports = a;
                }, {
                    "107": 107,
                    "128": 128,
                    "138": 138
                } ],
                130: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */
                    function r(e, t) {
                        var n = null === e || !1 === e, r = null === t || !1 === t;
                        if (n || r) return n === r;
                        var o = typeof e, i = typeof t;
                        return "string" === o || "number" === o ? "string" === i || "number" === i : "object" === i && e.type === t.type && e.key === t.key;
                    }
                    t.exports = r;
                }, {} ],
                131: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
                    function r(e, t) {
                        // Do some typechecking here since we call this blindly. We want to ensure
                        // that we don't block potential future ES APIs.
                        // Do some typechecking here since we call this blindly. We want to ensure
                        // that we don't block potential future ES APIs.
                        return e && "object" == typeof e && null != e.key ? c.escape(e.key) : t.toString(36);
                    }
                    /**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
                    function o(e, t, n, i) {
                        var m = typeof e;
                        if ("undefined" !== m && "boolean" !== m || (// All of the above are perceived as null.
                        e = null), null === e || "string" === m || "number" === m || // The following is inlined from ReactElement. This means we can optimize
                        // some checks. React Fiber also inlines this logic for similar purposes.
                        "object" === m && e.$$typeof === s) // If it's the only child, treat the name as if it was wrapped in an array
                        // so that it's consistent if the number of children grows.
                        return n(i, e, "" === t ? d + r(e, 0) : t), 1;
                        var g, v, y = 0, b = "" === t ? d : t + f;
                        if (Array.isArray(e)) for (var x = 0; x < e.length; x++) g = e[x], v = b + r(g, x), 
                        y += o(g, v, n, i); else {
                            var C = u(e);
                            if (C) {
                                var w, E = C.call(e);
                                if (C !== e.entries) for (var _ = 0; !(w = E.next()).done; ) g = w.value, v = b + r(g, _++), 
                                y += o(g, v, n, i); else {
                                    var k = "";
                                    if (a.current) {
                                        var T = a.current.getName();
                                        T && (k = " Check the render method of `" + T + "`.");
                                    }
                                    // Iterator will provide entry [k,v] tuples rather than values.
                                    for (p(h, "Using Maps as children is not yet fully supported. It is an experimental feature that might be removed. Convert it to a sequence / iterable of keyed ReactElements instead.%s", k), 
                                    h = !0; !(w = E.next()).done; ) {
                                        var S = w.value;
                                        S && (g = S[1], v = b + c.escape(S[0]) + f + r(g, 0), y += o(g, v, n, i));
                                    }
                                }
                            } else if ("object" === m) {
                                var N = "";
                                if (N = " If you meant to render a collection of children, use an array instead or wrap the object using createFragment(object) from the React add-ons.", 
                                e._isReactElement && (N = " It looks like you're using an element created by a different version of React. Make sure to use only one copy of React."), 
                                a.current) {
                                    var D = a.current.getName();
                                    D && (N += " Check the render method of `" + D + "`.");
                                }
                                var I = String(e);
                                l(!1, "Objects are not valid as a React child (found: %s).%s", "[object Object]" === I ? "object with keys {" + Object.keys(e).join(", ") + "}" : I, N);
                            }
                        }
                        return y;
                    }
                    /**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
                    function i(e, t, n) {
                        return null == e ? 0 : o(e, "", t, n);
                    }
                    var a = (e(126), e(134)), s = e(53), u = e(116), l = e(152), c = e(23), p = e(159), d = ".", f = ":", h = !1;
                    t.exports = i;
                }, {
                    "116": 116,
                    "126": 126,
                    "134": 134,
                    "152": 152,
                    "159": 159,
                    "23": 23,
                    "53": 53
                } ],
                132: [ function(e, t, n) {
                    /**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(160), o = e(144), i = e(159), a = o, s = [ "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp" ], u = [ "applet", "caption", "html", "table", "td", "th", "marquee", "object", "template", // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
                    // TODO: Distinguish by namespace here -- for <title>, including it here
                    // errs on the side of fewer warnings
                    "foreignObject", "desc", "title" ], l = u.concat([ "button" ]), c = [ "dd", "dt", "li", "option", "optgroup", "p", "rp", "rt" ], p = {
                        current: null,
                        formTag: null,
                        aTagInScope: null,
                        buttonTagInScope: null,
                        nobrTagInScope: null,
                        pTagInButtonScope: null,
                        listItemTagAutoclosing: null,
                        dlItemTagAutoclosing: null
                    }, d = function(e, t, n) {
                        var o = r({}, e || p), i = {
                            tag: t,
                            instance: n
                        };
                        // See rules for 'li', 'dd', 'dt' start tags in
                        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
                        return -1 !== u.indexOf(t) && (o.aTagInScope = null, o.buttonTagInScope = null, 
                        o.nobrTagInScope = null), -1 !== l.indexOf(t) && (o.pTagInButtonScope = null), -1 !== s.indexOf(t) && "address" !== t && "div" !== t && "p" !== t && (o.listItemTagAutoclosing = null, 
                        o.dlItemTagAutoclosing = null), o.current = i, "form" === t && (o.formTag = i), 
                        "a" === t && (o.aTagInScope = i), "button" === t && (o.buttonTagInScope = i), "nobr" === t && (o.nobrTagInScope = i), 
                        "p" === t && (o.pTagInButtonScope = i), "li" === t && (o.listItemTagAutoclosing = i), 
                        "dd" !== t && "dt" !== t || (o.dlItemTagAutoclosing = i), o;
                    }, f = function(e, t) {
                        // First, let's check if we're in an unusual parsing mode...
                        switch (t) {
                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
                            case "select":
                            return "option" === e || "optgroup" === e || "#text" === e;

                          case "optgroup":
                            return "option" === e || "#text" === e;

                          // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
                            // but
                            case "option":
                            return "#text" === e;

                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
                            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
                            // No special behavior since these rules fall back to "in body" mode for
                            // all except special table nodes which cause bad parsing behavior anyway.
                            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
                            case "tr":
                            return "th" === e || "td" === e || "style" === e || "script" === e || "template" === e;

                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
                            case "tbody":
                          case "thead":
                          case "tfoot":
                            return "tr" === e || "style" === e || "script" === e || "template" === e;

                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
                            case "colgroup":
                            return "col" === e || "template" === e;

                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
                            case "table":
                            return "caption" === e || "colgroup" === e || "tbody" === e || "tfoot" === e || "thead" === e || "style" === e || "script" === e || "template" === e;

                          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
                            case "head":
                            return "base" === e || "basefont" === e || "bgsound" === e || "link" === e || "meta" === e || "title" === e || "noscript" === e || "noframes" === e || "style" === e || "script" === e || "template" === e;

                          // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
                            case "html":
                            return "head" === e || "body" === e;

                          case "#document":
                            return "html" === e;
                        }
                        // Probably in the "in body" parsing mode, so we outlaw only tag combos
                        // where the parsing rules cause implicit opens or closes to be added.
                        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
                        switch (e) {
                          case "h1":
                          case "h2":
                          case "h3":
                          case "h4":
                          case "h5":
                          case "h6":
                            return "h1" !== t && "h2" !== t && "h3" !== t && "h4" !== t && "h5" !== t && "h6" !== t;

                          case "rp":
                          case "rt":
                            return -1 === c.indexOf(t);

                          case "body":
                          case "caption":
                          case "col":
                          case "colgroup":
                          case "frame":
                          case "head":
                          case "html":
                          case "tbody":
                          case "td":
                          case "tfoot":
                          case "th":
                          case "thead":
                          case "tr":
                            // These tags are only valid with a few parents that have special child
                            // parsing rules -- if we're down here, then none of those matched and
                            // so we allow it only if we don't know what the parent is, as all other
                            // cases are invalid.
                            return null == t;
                        }
                        return !0;
                    }, h = function(e, t) {
                        switch (e) {
                          case "address":
                          case "article":
                          case "aside":
                          case "blockquote":
                          case "center":
                          case "details":
                          case "dialog":
                          case "dir":
                          case "div":
                          case "dl":
                          case "fieldset":
                          case "figcaption":
                          case "figure":
                          case "footer":
                          case "header":
                          case "hgroup":
                          case "main":
                          case "menu":
                          case "nav":
                          case "ol":
                          case "p":
                          case "section":
                          case "summary":
                          case "ul":
                          case "pre":
                          case "listing":
                          case "table":
                          case "hr":
                          case "xmp":
                          case "h1":
                          case "h2":
                          case "h3":
                          case "h4":
                          case "h5":
                          case "h6":
                            return t.pTagInButtonScope;

                          case "form":
                            return t.formTag || t.pTagInButtonScope;

                          case "li":
                            return t.listItemTagAutoclosing;

                          case "dd":
                          case "dt":
                            return t.dlItemTagAutoclosing;

                          case "button":
                            return t.buttonTagInScope;

                          case "a":
                            // Spec says something about storing a list of markers, but it sounds
                            // equivalent to this check.
                            return t.aTagInScope;

                          case "nobr":
                            return t.nobrTagInScope;
                        }
                        return null;
                    }, m = function(e) {
                        if (!e) return [];
                        var t = [];
                        do {
                            t.push(e);
                        } while (e = e._currentElement._owner);
                        return t.reverse(), t;
                    }, g = {};
                    a = function(e, t, n, r) {
                        r = r || p;
                        var o = r.current, a = o && o.tag;
                        null != t && (i(null == e, "validateDOMNesting: when childText is passed, childTag should be null"), 
                        e = "#text");
                        var s = f(e, a) ? null : o, u = s ? null : h(e, r), l = s || u;
                        if (l) {
                            var c, d = l.tag, v = l.instance, y = n && n._currentElement._owner, b = v && v._currentElement._owner, x = m(y), C = m(b), w = Math.min(x.length, C.length), E = -1;
                            for (c = 0; c < w && x[c] === C[c]; c++) E = c;
                            var _ = x.slice(E + 1).map(function(e) {
                                return e.getName() || "(unknown)";
                            }), k = C.slice(E + 1).map(function(e) {
                                return e.getName() || "(unknown)";
                            }), T = [].concat(// If the parent and child instances have a common owner ancestor, start
                            // with that -- otherwise we just start with the parent's owners.
                            -1 !== E ? x[E].getName() || "(unknown)" : [], k, d, // If we're warning about an invalid (non-parent) ancestry, add '...'
                            u ? [ "..." ] : [], _, e).join(" > "), S = !!s + "|" + e + "|" + d + "|" + T;
                            if (g[S]) return;
                            g[S] = !0;
                            var N = e, D = "";
                            if ("#text" === e ? /\S/.test(t) ? N = "Text nodes" : (N = "Whitespace text nodes", 
                            D = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : N = "<" + e + ">", 
                            s) {
                                var I = "";
                                "table" === d && "tr" === e && (I += " Add a <tbody> to your code to match the DOM tree generated by the browser."), 
                                i(!1, "validateDOMNesting(...): %s cannot appear as a child of <%s>.%s See %s.%s", N, d, D, T, I);
                            } else i(!1, "validateDOMNesting(...): %s cannot appear as a descendant of <%s>. See %s.", N, d, T);
                        }
                    }, a.updatedAncestorInfo = d, // For testing
                    a.isTagValidInContext = function(e, t) {
                        t = t || p;
                        var n = t.current, r = n && n.tag;
                        return f(e, r) && !h(e, t);
                    }, t.exports = a;
                }, {
                    "144": 144,
                    "159": 159,
                    "160": 160
                } ],
                133: [ function(t, n, r) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals React */
                    "use strict";
                    var o = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                    n.exports = o.ReactComponentTreeHook;
                }, {} ],
                134: [ function(t, n, r) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals React */
                    "use strict";
                    var o = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                    n.exports = o.ReactCurrentOwner;
                }, {} ],
                135: [ function(t, n, r) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals React */
                    "use strict";
                    n.exports = e;
                }, {} ],
                136: [ function(t, n, r) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /* globals React */
                    "use strict";
                    var o = e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                    n.exports = o.getNextDebugID;
                }, {} ],
                137: [ function(e, t, n) {
                    "use strict";
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */
                    var r = e(144), o = {
                        /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
                        listen: function(e, t, n) {
                            return e.addEventListener ? (e.addEventListener(t, n, !1), {
                                remove: function() {
                                    e.removeEventListener(t, n, !1);
                                }
                            }) : e.attachEvent ? (e.attachEvent("on" + t, n), {
                                remove: function() {
                                    e.detachEvent("on" + t, n);
                                }
                            }) : void 0;
                        },
                        /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
                        capture: function(e, t, n) {
                            return e.addEventListener ? (e.addEventListener(t, n, !0), {
                                remove: function() {
                                    e.removeEventListener(t, n, !0);
                                }
                            }) : (console.error("Attempted to listen to events during the capture phase on a browser that does not support the capture phase. Your application will not receive some events."), 
                            {
                                remove: r
                            });
                        },
                        registerDefault: function() {}
                    };
                    t.exports = o;
                }, {
                    "144": 144
                } ],
                138: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = !("undefined" == typeof window || !window.document || !window.document.createElement), o = {
                        canUseDOM: r,
                        canUseWorkers: "undefined" != typeof Worker,
                        canUseEventListeners: r && !(!window.addEventListener && !window.attachEvent),
                        canUseViewport: r && !!window.screen,
                        isInWorker: !r
                    };
                    t.exports = o;
                }, {} ],
                139: [ function(e, t, n) {
                    "use strict";
                    /**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
                    function r(e) {
                        return e.replace(o, function(e, t) {
                            return t.toUpperCase();
                        });
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    var o = /-(.)/g;
                    t.exports = r;
                }, {} ],
                140: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    "use strict";
                    /**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
                    function r(e) {
                        return o(e.replace(i, "ms-"));
                    }
                    var o = e(139), i = /^-ms-/;
                    t.exports = r;
                }, {
                    "139": 139
                } ],
                141: [ function(e, t, n) {
                    "use strict";
                    /*eslint-disable no-bitwise */
                    /**
 * Checks if a given DOM node contains or is another DOM node.
 */
                    function r(e, t) {
                        return !(!e || !t) && (e === t || !o(e) && (o(t) ? r(e, t.parentNode) : "contains" in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))));
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    var o = e(154);
                    t.exports = r;
                }, {
                    "154": 154
                } ],
                142: [ function(e, t, n) {
                    "use strict";
                    /**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
                    function r(e) {
                        var t = e.length;
                        // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
                        // without method will throw during the slice call and skip straight to the
                        // fallback.
                        if (// Some browsers builtin objects can report typeof 'function' (e.g. NodeList
                        // in old versions of Safari).
                        (Array.isArray(e) || "object" != typeof e && "function" != typeof e) && a(!1, "toArray: Array-like object expected"), 
                        "number" != typeof t && a(!1, "toArray: Object needs a length property"), 0 === t || t - 1 in e || a(!1, "toArray: Object should have keys for indices"), 
                        "function" == typeof e.callee && a(!1, "toArray: Object can't be `arguments`. Use rest params (function(...args) {}) or Array.from() instead."), 
                        e.hasOwnProperty) try {
                            return Array.prototype.slice.call(e);
                        } catch (e) {}
                        for (var n = Array(t), r = 0; r < t; r++) n[r] = e[r];
                        return n;
                    }
                    /**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
                    function o(e) {
                        // not null/false
                        // arrays are objects, NodeLists are functions in Safari
                        // quacks like an array
                        // not window
                        // no DOM node should be considered an array-like
                        // a 'select' element has 'length' and 'item' properties on IE8
                        // a real array
                        // arguments
                        // HTMLCollection/NodeList
                        return !!e && ("object" == typeof e || "function" == typeof e) && "length" in e && !("setInterval" in e) && "number" != typeof e.nodeType && (Array.isArray(e) || "callee" in e || "item" in e);
                    }
                    /**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
                    function i(e) {
                        return o(e) ? Array.isArray(e) ? e.slice() : r(e) : [ e ];
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    var a = e(152);
                    t.exports = i;
                }, {
                    "152": 152
                } ],
                143: [ function(e, t, n) {
                    "use strict";
                    /**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
                    function r(e) {
                        var t = e.match(c);
                        return t && t[1].toLowerCase();
                    }
                    /**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
                    function o(e, t) {
                        var n = l;
                        l || u(!1, "createNodesFromMarkup dummy not initialized");
                        var o = r(e), i = o && s(o);
                        if (i) {
                            n.innerHTML = i[1] + e + i[2];
                            for (var c = i[0]; c--; ) n = n.lastChild;
                        } else n.innerHTML = e;
                        var p = n.getElementsByTagName("script");
                        p.length && (t || u(!1, "createNodesFromMarkup(...): Unexpected <script> element rendered."), 
                        a(p).forEach(t));
                        for (var d = Array.from(n.childNodes); n.lastChild; ) n.removeChild(n.lastChild);
                        return d;
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    /*eslint-disable fb-www/unsafe-html*/
                    var i = e(138), a = e(142), s = e(148), u = e(152), l = i.canUseDOM ? document.createElement("div") : null, c = /^\s*<(\w+)/;
                    t.exports = o;
                }, {
                    "138": 138,
                    "142": 142,
                    "148": 148,
                    "152": 152
                } ],
                144: [ function(e, t, n) {
                    "use strict";
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */
                    function r(e) {
                        return function() {
                            return e;
                        };
                    }
                    /**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
                    var o = function() {};
                    o.thatReturns = r, o.thatReturnsFalse = r(!1), o.thatReturnsTrue = r(!0), o.thatReturnsNull = r(null), 
                    o.thatReturnsThis = function() {
                        return this;
                    }, o.thatReturnsArgument = function(e) {
                        return e;
                    }, t.exports = o;
                }, {} ],
                145: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = {};
                    Object.freeze(r), t.exports = r;
                }, {} ],
                146: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    /**
 * @param {DOMElement} node input/textarea to focus
 */
                    function r(e) {
                        // IE8 can throw "Can't move focus to the control because it is invisible,
                        // not enabled, or of a type that does not accept the focus." for all kinds of
                        // reasons that are too expensive and fragile to test.
                        try {
                            e.focus();
                        } catch (e) {}
                    }
                    t.exports = r;
                }, {} ],
                147: [ function(e, t, n) {
                    "use strict";
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    /* eslint-disable fb-www/typeof-undefined */
                    /**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
                    function r(e) {
                        if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0))) return null;
                        try {
                            return e.activeElement || e.body;
                        } catch (t) {
                            return e.body;
                        }
                    }
                    t.exports = r;
                }, {} ],
                148: [ function(e, t, n) {
                    "use strict";
                    /**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
                    function r(e) {
                        return a || i(!1, "Markup wrapping node not initialized"), d.hasOwnProperty(e) || (e = "*"), 
                        s.hasOwnProperty(e) || (a.innerHTML = "*" === e ? "<link />" : "<" + e + "></" + e + ">", 
                        s[e] = !a.firstChild), s[e] ? d[e] : null;
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    /*eslint-disable fb-www/unsafe-html */
                    var o = e(138), i = e(152), a = o.canUseDOM ? document.createElement("div") : null, s = {}, u = [ 1, '<select multiple="true">', "</select>" ], l = [ 1, "<table>", "</table>" ], c = [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ], p = [ 1, '<svg xmlns="http://www.w3.org/2000/svg">', "</svg>" ], d = {
                        "*": [ 1, "?<div>", "</div>" ],
                        area: [ 1, "<map>", "</map>" ],
                        col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
                        legend: [ 1, "<fieldset>", "</fieldset>" ],
                        param: [ 1, "<object>", "</object>" ],
                        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
                        optgroup: u,
                        option: u,
                        caption: l,
                        colgroup: l,
                        tbody: l,
                        tfoot: l,
                        thead: l,
                        td: c,
                        th: c
                    };
                    [ "circle", "clipPath", "defs", "ellipse", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "text", "tspan" ].forEach(function(e) {
                        d[e] = p, s[e] = !0;
                    }), t.exports = r;
                }, {
                    "138": 138,
                    "152": 152
                } ],
                149: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    "use strict";
                    /**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
                    function r(e) {
                        return e.Window && e instanceof e.Window ? {
                            x: e.pageXOffset || e.document.documentElement.scrollLeft,
                            y: e.pageYOffset || e.document.documentElement.scrollTop
                        } : {
                            x: e.scrollLeft,
                            y: e.scrollTop
                        };
                    }
                    t.exports = r;
                }, {} ],
                150: [ function(e, t, n) {
                    "use strict";
                    /**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
                    function r(e) {
                        return e.replace(o, "-$1").toLowerCase();
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    var o = /([A-Z])/g;
                    t.exports = r;
                }, {} ],
                151: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    "use strict";
                    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
                    function r(e) {
                        return o(e).replace(i, "-ms-");
                    }
                    var o = e(150), i = /^ms-/;
                    t.exports = r;
                }, {
                    "150": 150
                } ],
                152: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    function r(e, t, n, r, i, a, s, u) {
                        if (o(t), !e) {
                            var l;
                            if (void 0 === t) l = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."); else {
                                var c = [ n, r, i, a, s, u ], p = 0;
                                l = new Error(t.replace(/%s/g, function() {
                                    return c[p++];
                                })), l.name = "Invariant Violation";
                            }
                            // we don't care about invariant's own frame
                            throw l.framesToPop = 1, l;
                        }
                    }
                    /**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */
                    var o = function(e) {};
                    o = function(e) {
                        if (void 0 === e) throw new Error("invariant requires an error message argument");
                    }, t.exports = r;
                }, {} ],
                153: [ function(e, t, n) {
                    "use strict";
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    /**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
                    function r(e) {
                        var t = e ? e.ownerDocument || e : document, n = t.defaultView || window;
                        return !(!e || !("function" == typeof n.Node ? e instanceof n.Node : "object" == typeof e && "number" == typeof e.nodeType && "string" == typeof e.nodeName));
                    }
                    t.exports = r;
                }, {} ],
                154: [ function(e, t, n) {
                    "use strict";
                    /**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
                    function r(e) {
                        return o(e) && 3 == e.nodeType;
                    }
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    var o = e(153);
                    t.exports = r;
                }, {
                    "153": 153
                } ],
                155: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */
                    "use strict";
                    /**
 * Memoizes the return value of a function that accepts one string argument.
 */
                    function r(e) {
                        var t = {};
                        return function(n) {
                            return t.hasOwnProperty(n) || (t[n] = e.call(this, n)), t[n];
                        };
                    }
                    t.exports = r;
                }, {} ],
                156: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    "use strict";
                    var r, o = e(138);
                    o.canUseDOM && (r = window.performance || window.msPerformance || window.webkitPerformance), 
                    t.exports = r || {};
                }, {
                    "138": 138
                } ],
                157: [ function(e, t, n) {
                    "use strict";
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */
                    var r, o = e(156);
                    /**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
                    r = o.now ? function() {
                        return o.now();
                    } : function() {
                        return Date.now();
                    }, t.exports = r;
                }, {
                    "156": 156
                } ],
                158: [ function(e, t, n) {
                    /**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */
                    /*eslint-disable no-self-compare */
                    "use strict";
                    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
                    function r(e, t) {
                        // SameValue algorithm
                        // SameValue algorithm
                        return e === t ? 0 !== e || 0 !== t || 1 / e == 1 / t : e !== e && t !== t;
                    }
                    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
                    function o(e, t) {
                        if (r(e, t)) return !0;
                        if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
                        var n = Object.keys(e), o = Object.keys(t);
                        if (n.length !== o.length) return !1;
                        // Test for A's keys different from B.
                        for (var a = 0; a < n.length; a++) if (!i.call(t, n[a]) || !r(e[n[a]], t[n[a]])) return !1;
                        return !0;
                    }
                    var i = Object.prototype.hasOwnProperty;
                    t.exports = o;
                }, {} ],
                159: [ function(e, t, n) {
                    /**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
                    "use strict";
                    var r = e(144), o = r;
                    !function() {
                        var e = function(e) {
                            for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                            var o = 0, i = "Warning: " + e.replace(/%s/g, function() {
                                return n[o++];
                            });
                            "undefined" != typeof console && console.error(i);
                            try {
                                // --- Welcome to debugging React ---
                                // This error was thrown as a convenience so that you can use this stack
                                // to find the callsite that caused this warning to fire.
                                throw new Error(i);
                            } catch (e) {}
                        };
                        o = function(t, n) {
                            if (void 0 === n) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
                            if (0 !== n.indexOf("Failed Composite propType: ") && !t) {
                                for (var r = arguments.length, o = Array(r > 2 ? r - 2 : 0), i = 2; i < r; i++) o[i - 2] = arguments[i];
                                e.apply(void 0, [ n ].concat(o));
                            }
                        };
                    }(), t.exports = o;
                }, {
                    "144": 144
                } ],
                160: [ function(e, t, n) {
                    /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
                    "use strict";
                    function r(e) {
                        if (null === e || void 0 === e) throw new TypeError("Object.assign cannot be called with null or undefined");
                        return Object(e);
                    }
                    /* eslint-disable no-unused-vars */
                    var o = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, a = Object.prototype.propertyIsEnumerable;
                    t.exports = function() {
                        try {
                            if (!Object.assign) return !1;
                            // Detect buggy property enumeration order in older V8 versions.
                            // https://bugs.chromium.org/p/v8/issues/detail?id=4118
                            var e = new String("abc");
                            if (// eslint-disable-line no-new-wrappers
                            e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;
                            for (var t = {}, n = 0; n < 10; n++) t["_" + String.fromCharCode(n)] = n;
                            if ("0123456789" !== Object.getOwnPropertyNames(t).map(function(e) {
                                return t[e];
                            }).join("")) return !1;
                            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                            var r = {};
                            return "abcdefghijklmnopqrst".split("").forEach(function(e) {
                                r[e] = e;
                            }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("");
                        } catch (e) {
                            // We don't expect any of the above to throw, but better to be safe.
                            return !1;
                        }
                    }() ? Object.assign : function(e, t) {
                        for (var n, s, u = r(e), l = 1; l < arguments.length; l++) {
                            n = Object(arguments[l]);
                            for (var c in n) i.call(n, c) && (u[c] = n[c]);
                            if (o) {
                                s = o(n);
                                for (var p = 0; p < s.length; p++) a.call(n, s[p]) && (u[s[p]] = n[s[p]]);
                            }
                        }
                        return u;
                    };
                }, {} ],
                161: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
                    "use strict";
                    /**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
                    function r(e, t, n, r, u) {
                        for (var l in e) if (e.hasOwnProperty(l)) {
                            var c;
                            // Prop type validation may throw. In case they do, we don't want to
                            // fail the render phase where it didn't fail before. So we log it.
                            // After these have been cleaned up, we'll let them throw.
                            try {
                                // This is intentionally an invariant that gets caught. It's the same
                                // behavior as without this statement except with a better message.
                                o("function" == typeof e[l], "%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.", r || "React class", n, l), 
                                c = e[l](t, l, r, n, null, a);
                            } catch (e) {
                                c = e;
                            }
                            if (i(!c || c instanceof Error, "%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", r || "React class", n, l, typeof c), 
                            c instanceof Error && !(c.message in s)) {
                                // Only monitor this failure once because there tends to be a lot of the
                                // same error.
                                s[c.message] = !0;
                                var p = u ? u() : "";
                                i(!1, "Failed %s type: %s%s", n, c.message, null != p ? p : "");
                            }
                        }
                    }
                    var o = e(152), i = e(159), a = e(164), s = {};
                    t.exports = r;
                }, {
                    "152": 152,
                    "159": 159,
                    "164": 164
                } ],
                162: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
                    "use strict";
                    // React 15.5 references this module, and assumes PropTypes are still callable in production.
                    // Therefore we re-export development-only version with all the PropTypes checks here.
                    // However if one is migrating to the `prop-types` npm library, they will go through the
                    // `index.js` entry point, and it will branch depending on the environment.
                    var r = e(163);
                    t.exports = function(e) {
                        return r(e, !1);
                    };
                }, {
                    "163": 163
                } ],
                163: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
                    "use strict";
                    var r = e(144), o = e(152), i = e(159), a = e(164), s = e(161);
                    t.exports = function(e, t) {
                        // Before Symbol spec.
                        /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
                        function n(e) {
                            var t = e && (_ && e[_] || e[k]);
                            if ("function" == typeof t) return t;
                        }
                        /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
                        /*eslint-disable no-self-compare*/
                        function u(e, t) {
                            // SameValue algorithm
                            // SameValue algorithm
                            return e === t ? 0 !== e || 1 / e == 1 / t : e !== e && t !== t;
                        }
                        /*eslint-enable no-self-compare*/
                        /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
                        function l(e) {
                            this.message = e, this.stack = "";
                        }
                        function c(e) {
                            function n(n, u, c, p, d, f, h) {
                                if (p = p || T, f = f || c, h !== a) if (t) // New behavior only for users of `prop-types` package
                                o(!1, "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"); else if ("undefined" != typeof console) {
                                    // Old behavior for people using React.PropTypes
                                    var m = p + ":" + c;
                                    !r[m] && // Avoid spamming the console because they are often not actionable except for lib authors
                                    s < 3 && (i(!1, "You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.", f, p), 
                                    r[m] = !0, s++);
                                }
                                return null == u[c] ? n ? new l(null === u[c] ? "The " + d + " `" + f + "` is marked as required in `" + p + "`, but its value is `null`." : "The " + d + " `" + f + "` is marked as required in `" + p + "`, but its value is `undefined`.") : null : e(u, c, p, d, f);
                            }
                            var r = {}, s = 0, u = n.bind(null, !1);
                            return u.isRequired = n.bind(null, !0), u;
                        }
                        function p(e) {
                            function t(t, n, r, o, i, a) {
                                var s = t[n];
                                if (x(s) !== e) return new l("Invalid " + o + " `" + i + "` of type `" + C(s) + "` supplied to `" + r + "`, expected `" + e + "`.");
                                return null;
                            }
                            return c(t);
                        }
                        function d(e) {
                            function t(t, n, r, o, i) {
                                if ("function" != typeof e) return new l("Property `" + i + "` of component `" + r + "` has invalid PropType notation inside arrayOf.");
                                var s = t[n];
                                if (!Array.isArray(s)) {
                                    return new l("Invalid " + o + " `" + i + "` of type `" + x(s) + "` supplied to `" + r + "`, expected an array.");
                                }
                                for (var u = 0; u < s.length; u++) {
                                    var c = e(s, u, r, o, i + "[" + u + "]", a);
                                    if (c instanceof Error) return c;
                                }
                                return null;
                            }
                            return c(t);
                        }
                        function f(e) {
                            function t(t, n, r, o, i) {
                                if (!(t[n] instanceof e)) {
                                    var a = e.name || T;
                                    return new l("Invalid " + o + " `" + i + "` of type `" + E(t[n]) + "` supplied to `" + r + "`, expected instance of `" + a + "`.");
                                }
                                return null;
                            }
                            return c(t);
                        }
                        function h(e) {
                            function t(t, n, r, o, i) {
                                for (var a = t[n], s = 0; s < e.length; s++) if (u(a, e[s])) return null;
                                return new l("Invalid " + o + " `" + i + "` of value `" + a + "` supplied to `" + r + "`, expected one of " + JSON.stringify(e) + ".");
                            }
                            return Array.isArray(e) ? c(t) : (i(!1, "Invalid argument supplied to oneOf, expected an instance of array."), 
                            r.thatReturnsNull);
                        }
                        function m(e) {
                            function t(t, n, r, o, i) {
                                if ("function" != typeof e) return new l("Property `" + i + "` of component `" + r + "` has invalid PropType notation inside objectOf.");
                                var s = t[n], u = x(s);
                                if ("object" !== u) return new l("Invalid " + o + " `" + i + "` of type `" + u + "` supplied to `" + r + "`, expected an object.");
                                for (var c in s) if (s.hasOwnProperty(c)) {
                                    var p = e(s, c, r, o, i + "." + c, a);
                                    if (p instanceof Error) return p;
                                }
                                return null;
                            }
                            return c(t);
                        }
                        function g(e) {
                            function t(t, n, r, o, i) {
                                for (var s = 0; s < e.length; s++) {
                                    if (null == (0, e[s])(t, n, r, o, i, a)) return null;
                                }
                                return new l("Invalid " + o + " `" + i + "` supplied to `" + r + "`.");
                            }
                            if (!Array.isArray(e)) return i(!1, "Invalid argument supplied to oneOfType, expected an instance of array."), 
                            r.thatReturnsNull;
                            for (var n = 0; n < e.length; n++) {
                                var o = e[n];
                                if ("function" != typeof o) return i(!1, "Invalid argument supplid to oneOfType. Expected an array of check functions, but received %s at index %s.", w(o), n), 
                                r.thatReturnsNull;
                            }
                            return c(t);
                        }
                        function v(e) {
                            function t(t, n, r, o, i) {
                                var s = t[n], u = x(s);
                                if ("object" !== u) return new l("Invalid " + o + " `" + i + "` of type `" + u + "` supplied to `" + r + "`, expected `object`.");
                                for (var c in e) {
                                    var p = e[c];
                                    if (p) {
                                        var d = p(s, c, r, o, i + "." + c, a);
                                        if (d) return d;
                                    }
                                }
                                return null;
                            }
                            return c(t);
                        }
                        function y(t) {
                            switch (typeof t) {
                              case "number":
                              case "string":
                              case "undefined":
                                return !0;

                              case "boolean":
                                return !t;

                              case "object":
                                if (Array.isArray(t)) return t.every(y);
                                if (null === t || e(t)) return !0;
                                var r = n(t);
                                if (!r) return !1;
                                var o, i = r.call(t);
                                if (r !== t.entries) {
                                    for (;!(o = i.next()).done; ) if (!y(o.value)) return !1;
                                } else // Iterator will provide entry [k,v] tuples rather than values.
                                for (;!(o = i.next()).done; ) {
                                    var a = o.value;
                                    if (a && !y(a[1])) return !1;
                                }
                                return !0;

                              default:
                                return !1;
                            }
                        }
                        function b(e, t) {
                            // Native Symbol.
                            // Native Symbol.
                            // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
                            return "symbol" === e || ("Symbol" === t["@@toStringTag"] || "function" == typeof Symbol && t instanceof Symbol);
                        }
                        // Equivalent of `typeof` but with special handling for array and regexp.
                        function x(e) {
                            var t = typeof e;
                            return Array.isArray(e) ? "array" : e instanceof RegExp ? "object" : b(t, e) ? "symbol" : t;
                        }
                        // This handles more types than `getPropType`. Only used for error messages.
                        // See `createPrimitiveTypeChecker`.
                        function C(e) {
                            if (void 0 === e || null === e) return "" + e;
                            var t = x(e);
                            if ("object" === t) {
                                if (e instanceof Date) return "date";
                                if (e instanceof RegExp) return "regexp";
                            }
                            return t;
                        }
                        // Returns a string that is postfixed to a warning about an invalid type.
                        // For example, "undefined" or "of type array"
                        function w(e) {
                            var t = C(e);
                            switch (t) {
                              case "array":
                              case "object":
                                return "an " + t;

                              case "boolean":
                              case "date":
                              case "regexp":
                                return "a " + t;

                              default:
                                return t;
                            }
                        }
                        // Returns class name of the object, if any.
                        function E(e) {
                            return e.constructor && e.constructor.name ? e.constructor.name : T;
                        }
                        /* global Symbol */
                        var _ = "function" == typeof Symbol && Symbol.iterator, k = "@@iterator", T = "<<anonymous>>", S = {
                            array: p("array"),
                            bool: p("boolean"),
                            func: p("function"),
                            number: p("number"),
                            object: p("object"),
                            string: p("string"),
                            symbol: p("symbol"),
                            any: function() {
                                return c(r.thatReturnsNull);
                            }(),
                            arrayOf: d,
                            element: function() {
                                function t(t, n, r, o, i) {
                                    var a = t[n];
                                    if (!e(a)) {
                                        return new l("Invalid " + o + " `" + i + "` of type `" + x(a) + "` supplied to `" + r + "`, expected a single ReactElement.");
                                    }
                                    return null;
                                }
                                return c(t);
                            }(),
                            instanceOf: f,
                            node: function() {
                                function e(e, t, n, r, o) {
                                    return y(e[t]) ? null : new l("Invalid " + r + " `" + o + "` supplied to `" + n + "`, expected a ReactNode.");
                                }
                                return c(e);
                            }(),
                            objectOf: m,
                            oneOf: h,
                            oneOfType: g,
                            shape: v
                        };
                        // Make `instanceof Error` still work for returned errors.
                        return l.prototype = Error.prototype, S.checkPropTypes = s, S.PropTypes = S, S;
                    };
                }, {
                    "144": 144,
                    "152": 152,
                    "159": 159,
                    "161": 161,
                    "164": 164
                } ],
                164: [ function(e, t, n) {
                    /**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */
                    "use strict";
                    t.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
                }, {} ]
            }, {}, [ 48 ])(48);
        }();
    }();
}), // Snap.svg 0.5.0
//
// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// build: 2017-02-06
// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ┌────────────────────────────────────────────────────────────┐ \\
// │ Eve 0.5.0 - JavaScript Events Library                      │ \\
// ├────────────────────────────────────────────────────────────┤ \\
// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\
// └────────────────────────────────────────────────────────────┘ \\
function(e) {
    var t, n, r = "hasOwnProperty", o = /[\.\/]/, i = /\s*,\s*/, a = function(e, t) {
        return e - t;
    }, s = {
        n: {}
    }, u = function() {
        for (var e = 0, t = this.length; e < t; e++) if (void 0 !== this[e]) return this[e];
    }, l = function() {
        for (var e = this.length; --e; ) if (void 0 !== this[e]) return this[e];
    }, c = Object.prototype.toString, p = String, d = Array.isArray || function(e) {
        return e instanceof Array || "[object Array]" == c.call(e);
    };
    /*\
     * eve
     [ method ]

     * Fires event with given `name`, given scope and other parameters.

     > Arguments

     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated
     - scope (object) context for the event handlers
     - varargs (...) the rest of arguments will be sent to event handlers

     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.
    \*/
    eve = function(e, r) {
        var o, i = n, s = Array.prototype.slice.call(arguments, 2), c = eve.listeners(e), p = 0, d = [], f = {}, h = [], m = t;
        h.firstDefined = u, h.lastDefined = l, t = e, n = 0;
        for (var g = 0, v = c.length; g < v; g++) "zIndex" in c[g] && (d.push(c[g].zIndex), 
        c[g].zIndex < 0 && (f[c[g].zIndex] = c[g]));
        for (d.sort(a); d[p] < 0; ) if (o = f[d[p++]], h.push(o.apply(r, s)), n) return n = i, 
        h;
        for (g = 0; g < v; g++) if ("zIndex" in (o = c[g])) if (o.zIndex == d[p]) {
            if (h.push(o.apply(r, s)), n) break;
            do {
                if (p++, o = f[d[p]], o && h.push(o.apply(r, s)), n) break;
            } while (o);
        } else f[o.zIndex] = o; else if (h.push(o.apply(r, s)), n) break;
        return n = i, t = m, h;
    }, // Undocumented. Debug only.
    eve._events = s, /*\
     * eve.listeners
     [ method ]

     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.

     > Arguments

     - name (string) name of the event, dot (`.`) or slash (`/`) separated

     = (array) array of event handlers
    \*/
    eve.listeners = function(e) {
        var t, n, r, i, a, u, l, c, p = d(e) ? e : e.split(o), f = s, h = [ f ], m = [];
        for (i = 0, a = p.length; i < a; i++) {
            for (c = [], u = 0, l = h.length; u < l; u++) for (f = h[u].n, n = [ f[p[i]], f["*"] ], 
            r = 2; r--; ) (t = n[r]) && (c.push(t), m = m.concat(t.f || []));
            h = c;
        }
        return m;
    }, /*\
     * eve.separator
     [ method ]

     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours
     * here. Be aware that if you pass a string longer than one character it will be treated as
     * a list of characters.

     - separator (string) new separator. Empty string resets to default: `.` or `/`.
    \*/
    eve.separator = function(e) {
        e ? (e = p(e).replace(/(?=[\.\^\]\[\-])/g, "\\"), e = "[" + e + "]", o = new RegExp(e)) : o = /[\.\/]/;
    }, /*\
     * eve.on
     [ method ]
     **
     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:
     | eve.on("*.under.*", f);
     | eve("mouse.under.floor"); // triggers f
     * Use @eve to trigger the listener.
     **
     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards
     - f (function) event handler function
     **
     - name (array) if you don’t want to use separators, you can use array of strings
     - f (function) event handler function
     **
     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. 
     > Example:
     | eve.on("mouse", eatIt)(2);
     | eve.on("mouse", scream);
     | eve.on("mouse", catchIt)(1);
     * This will ensure that `catchIt` function will be called before `eatIt`.
     *
     * If you want to put your handler before non-indexed handlers, specify a negative value.
     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.
    \*/
    eve.on = function(e, t) {
        if ("function" != typeof t) return function() {};
        for (var n = d(e) ? d(e[0]) ? e : [ e ] : p(e).split(i), r = 0, a = n.length; r < a; r++) !function(e) {
            for (var n, r = d(e) ? e : p(e).split(o), i = s, a = 0, u = r.length; a < u; a++) i = i.n, 
            i = i.hasOwnProperty(r[a]) && i[r[a]] || (i[r[a]] = {
                n: {}
            });
            for (i.f = i.f || [], a = 0, u = i.f.length; a < u; a++) if (i.f[a] == t) {
                n = !0;
                break;
            }
            !n && i.f.push(t);
        }(n[r]);
        return function(e) {
            +e == +e && (t.zIndex = +e);
        };
    }, /*\
     * eve.f
     [ method ]
     **
     * Returns function that will fire given event with optional arguments.
     * Arguments that will be passed to the result function will be also
     * concated to the list of final arguments.
     | el.onclick = eve.f("click", 1, 2);
     | eve.on("click", function (a, b, c) {
     |     console.log(a, b, c); // 1, 2, [event object]
     | });
     > Arguments
     - event (string) event name
     - varargs (…) and any other arguments
     = (function) possible event handler function
    \*/
    eve.f = function(e) {
        var t = [].slice.call(arguments, 1);
        return function() {
            eve.apply(null, [ e, null ].concat(t).concat([].slice.call(arguments, 0)));
        };
    }, /*\
     * eve.stop
     [ method ]
     **
     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.
    \*/
    eve.stop = function() {
        n = 1;
    }, /*\
     * eve.nt
     [ method ]
     **
     * Could be used inside event handler to figure out actual name of the event.
     **
     > Arguments
     **
     - subname (string) #optional subname of the event
     **
     = (string) name of the event, if `subname` is not specified
     * or
     = (boolean) `true`, if current event’s name contains `subname`
    \*/
    eve.nt = function(e) {
        var n = d(t) ? t.join(".") : t;
        return e ? new RegExp("(?:\\.|\\/|^)" + e + "(?:\\.|\\/|$)").test(n) : n;
    }, /*\
     * eve.nts
     [ method ]
     **
     * Could be used inside event handler to figure out actual name of the event.
     **
     **
     = (array) names of the event
    \*/
    eve.nts = function() {
        return d(t) ? t : t.split(o);
    }, /*\
     * eve.off
     [ method ]
     **
     * Removes given function from the list of event listeners assigned to given name.
     * If no arguments specified all the events will be cleared.
     **
     > Arguments
     **
     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards
     - f (function) event handler function
    \*/
    /*\
     * eve.unbind
     [ method ]
     **
     * See @eve.off
    \*/
    eve.off = eve.unbind = function(e, t) {
        if (!e) return void (eve._events = s = {
            n: {}
        });
        var n = d(e) ? d(e[0]) ? e : [ e ] : p(e).split(i);
        if (n.length > 1) for (var a = 0, u = n.length; a < u; a++) eve.off(n[a], t); else {
            n = d(e) ? e : p(e).split(o);
            var l, c, f, a, u, h, m, g = [ s ], v = [];
            for (a = 0, u = n.length; a < u; a++) for (h = 0; h < g.length; h += f.length - 2) {
                if (f = [ h, 1 ], l = g[h].n, "*" != n[a]) l[n[a]] && (f.push(l[n[a]]), v.unshift({
                    n: l,
                    name: n[a]
                })); else for (c in l) l[r](c) && (f.push(l[c]), v.unshift({
                    n: l,
                    name: c
                }));
                g.splice.apply(g, f);
            }
            for (a = 0, u = g.length; a < u; a++) for (l = g[a]; l.n; ) {
                if (t) {
                    if (l.f) {
                        for (h = 0, m = l.f.length; h < m; h++) if (l.f[h] == t) {
                            l.f.splice(h, 1);
                            break;
                        }
                        !l.f.length && delete l.f;
                    }
                    for (c in l.n) if (l.n[r](c) && l.n[c].f) {
                        var y = l.n[c].f;
                        for (h = 0, m = y.length; h < m; h++) if (y[h] == t) {
                            y.splice(h, 1);
                            break;
                        }
                        !y.length && delete l.n[c].f;
                    }
                } else {
                    delete l.f;
                    for (c in l.n) l.n[r](c) && l.n[c].f && delete l.n[c].f;
                }
                l = l.n;
            }
            // prune inner nodes in path
            e: for (a = 0, u = v.length; a < u; a++) {
                l = v[a];
                for (c in l.n[l.name].f) // not empty (has listeners)
                continue e;
                for (c in l.n[l.name].n) // not empty (has children)
                continue e;
                // is empty
                delete l.n[l.name];
            }
        }
    }, /*\
     * eve.once
     [ method ]
     **
     * Binds given event handler with a given name to only run once then unbind itself.
     | eve.once("login", f);
     | eve("login"); // triggers f
     | eve("login"); // no listeners
     * Use @eve to trigger the listener.
     **
     > Arguments
     **
     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards
     - f (function) event handler function
     **
     = (function) same return function as @eve.on
    \*/
    eve.once = function(e, t) {
        var n = function() {
            return eve.off(e, n), t.apply(this, arguments);
        };
        return eve.on(e, n);
    }, /*\
     * eve.version
     [ property (string) ]
     **
     * Current version of the library.
    \*/
    eve.version = "0.5.0", eve.toString = function() {
        return "You are running Eve 0.5.0";
    }, "undefined" != typeof module && module.exports ? module.exports = eve : "function" == typeof define && define.amd ? define("eve", [], function() {
        return eve;
    }) : e.eve = eve;
}(this), function(e, t) {
    // AMD support
    if ("function" == typeof define && define.amd) // Define as an anonymous module
    define([ "eve" ], function(n) {
        return t(e, n);
    }); else if ("undefined" != typeof exports) {
        // Next for Node.js or CommonJS
        var n = require("eve");
        module.exports = t(e, n);
    } else // Browser globals (glob is window)
    // Snap adds itself to window
    t(e, e.eve);
}(window || this, function(e, t) {
    // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    var n = function(t) {
        var n, r = {}, o = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function(e) {
            return setTimeout(e, 16, new Date().getTime()), !0;
        }, i = Array.isArray || function(e) {
            return e instanceof Array || "[object Array]" == Object.prototype.toString.call(e);
        }, a = 0, s = "M" + (+new Date()).toString(36), u = function() {
            return s + (a++).toString(36);
        }, l = Date.now || function() {
            return +new Date();
        }, c = function(e) {
            var t = this;
            if (null == e) return t.s;
            var n = t.s - e;
            t.b += t.dur * n, t.B += t.dur * n, t.s = e;
        }, p = function(e) {
            var t = this;
            if (null == e) return t.spd;
            t.spd = e;
        }, d = function(e) {
            var t = this;
            if (null == e) return t.dur;
            t.s = t.s * e / t.dur, t.dur = e;
        }, f = function() {
            var e = this;
            delete r[e.id], e.update(), t("mina.stop." + e.id, e);
        }, h = function() {
            var e = this;
            e.pdif || (delete r[e.id], e.update(), e.pdif = e.get() - e.b);
        }, m = function() {
            var e = this;
            e.pdif && (e.b = e.get() - e.pdif, delete e.pdif, r[e.id] = e, v());
        }, g = function() {
            var e, t = this;
            if (i(t.start)) {
                e = [];
                for (var n = 0, r = t.start.length; n < r; n++) e[n] = +t.start[n] + (t.end[n] - t.start[n]) * t.easing(t.s);
            } else e = +t.start + (t.end - t.start) * t.easing(t.s);
            t.set(e);
        }, v = function(e) {
            // Manual invokation?
            if (!e) // Frame loop stopped?
            // Start frame loop...
            return void (n || (n = o(v)));
            var i = 0;
            for (var a in r) if (r.hasOwnProperty(a)) {
                var s = r[a], u = s.get();
                i++, s.s = (u - s.b) / (s.dur / s.spd), s.s >= 1 && (delete r[a], s.s = 1, i--, 
                function(e) {
                    setTimeout(function() {
                        t("mina.finish." + e.id, e);
                    });
                }(s)), s.update();
            }
            n = !!i && o(v);
        }, /*\
     * mina
     [ method ]
     **
     * Generic animation of numbers
     **
     - a (number) start _slave_ number
     - A (number) end _slave_ number
     - b (number) start _master_ number (start time in general case)
     - B (number) end _master_ number (end time in general case)
     - get (function) getter of _master_ number (see @mina.time)
     - set (function) setter of _slave_ number
     - easing (function) #optional easing function, default is @mina.linear
     = (object) animation descriptor
     o {
     o         id (string) animation id,
     o         start (number) start _slave_ number,
     o         end (number) end _slave_ number,
     o         b (number) start _master_ number,
     o         s (number) animation status (0..1),
     o         dur (number) animation duration,
     o         spd (number) animation speed,
     o         get (function) getter of _master_ number (see @mina.time),
     o         set (function) setter of _slave_ number,
     o         easing (function) easing function, default is @mina.linear,
     o         status (function) status getter/setter,
     o         speed (function) speed getter/setter,
     o         duration (function) duration getter/setter,
     o         stop (function) animation stopper
     o         pause (function) pauses the animation
     o         resume (function) resumes the animation
     o         update (function) calles setter with the right value of the animation
     o }
    \*/
        y = function(e, t, n, o, i, a, s) {
            var l = {
                id: u(),
                start: e,
                end: t,
                b: n,
                s: 0,
                dur: o - n,
                spd: 1,
                get: i,
                set: a,
                easing: s || y.linear,
                status: c,
                speed: p,
                duration: d,
                stop: f,
                pause: h,
                resume: m,
                update: g
            };
            r[l.id] = l;
            var b, x = 0;
            for (b in r) if (r.hasOwnProperty(b) && 2 == ++x) break;
            return 1 == x && v(), l;
        };
        /*\
     * mina.time
     [ method ]
     **
     * Returns the current time. Equivalent to:
     | function () {
     |     return (new Date).getTime();
     | }
    \*/
        /*\
     * mina.getById
     [ method ]
     **
     * Returns an animation by its id
     - id (string) animation's id
     = (object) See @mina
    \*/
        /*\
     * mina.linear
     [ method ]
     **
     * Default linear easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.easeout
     [ method ]
     **
     * Easeout easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.easein
     [ method ]
     **
     * Easein easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.easeinout
     [ method ]
     **
     * Easeinout easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.backin
     [ method ]
     **
     * Backin easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.backout
     [ method ]
     **
     * Backout easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.elastic
     [ method ]
     **
     * Elastic easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        /*\
     * mina.bounce
     [ method ]
     **
     * Bounce easing
     - n (number) input 0..1
     = (number) output 0..1
    \*/
        return y.time = l, y.getById = function(e) {
            return r[e] || null;
        }, y.linear = function(e) {
            return e;
        }, y.easeout = function(e) {
            return Math.pow(e, 1.7);
        }, y.easein = function(e) {
            return Math.pow(e, .48);
        }, y.easeinout = function(e) {
            if (1 == e) return 1;
            if (0 == e) return 0;
            var t = .48 - e / 1.04, n = Math.sqrt(.1734 + t * t), r = n - t, o = Math.pow(Math.abs(r), 1 / 3) * (r < 0 ? -1 : 1), i = -n - t, a = Math.pow(Math.abs(i), 1 / 3) * (i < 0 ? -1 : 1), s = o + a + .5;
            return 3 * (1 - s) * s * s + s * s * s;
        }, y.backin = function(e) {
            if (1 == e) return 1;
            var t = 1.70158;
            return e * e * ((t + 1) * e - t);
        }, y.backout = function(e) {
            if (0 == e) return 0;
            e -= 1;
            var t = 1.70158;
            return e * e * ((t + 1) * e + t) + 1;
        }, y.elastic = function(e) {
            return e == !!e ? e : Math.pow(2, -10 * e) * Math.sin((e - .075) * (2 * Math.PI) / .3) + 1;
        }, y.bounce = function(e) {
            var t, n = 7.5625, r = 2.75;
            return e < 1 / r ? t = n * e * e : e < 2 / r ? (e -= 1.5 / r, t = n * e * e + .75) : e < 2.5 / r ? (e -= 2.25 / r, 
            t = n * e * e + .9375) : (e -= 2.625 / r, t = n * e * e + .984375), t;
        }, e.mina = y, y;
    }(void 0 === t ? function() {} : t), r = function(e) {
        /*\
 * Snap
 [ method ]
 **
 * Creates a drawing surface or wraps existing SVG element.
 **
 - width (number|string) width of surface
 - height (number|string) height of surface
 * or
 - DOM (SVGElement) element to be wrapped into Snap structure
 * or
 - array (array) array of elements (will return set of elements)
 * or
 - query (string) CSS query selector
 = (object) @Element
\*/
        function n(e, t) {
            if (e) {
                if (e.nodeType) return w(e);
                if (o(e, "array") && n.set) return n.set.apply(n, e);
                if (e instanceof y) return e;
                if (null == t) // try {
                return e = _.doc.querySelector(String(e)), w(e);
            }
            return e = null == e ? "100%" : e, t = null == t ? "100%" : t, new C(e, t);
        }
        function r(e, t) {
            if (t) {
                if ("#text" == e && (e = _.doc.createTextNode(t.text || t["#text"] || "")), "#comment" == e && (e = _.doc.createComment(t.text || t["#text"] || "")), 
                "string" == typeof e && (e = r(e)), "string" == typeof t) return 1 == e.nodeType ? "xlink:" == t.substring(0, 6) ? e.getAttributeNS(z, t.substring(6)) : "xml:" == t.substring(0, 4) ? e.getAttributeNS(Y, t.substring(4)) : e.getAttribute(t) : "text" == t ? e.nodeValue : null;
                if (1 == e.nodeType) {
                    for (var n in t) if (t[k](n)) {
                        var o = T(t[n]);
                        o ? "xlink:" == n.substring(0, 6) ? e.setAttributeNS(z, n.substring(6), o) : "xml:" == n.substring(0, 4) ? e.setAttributeNS(Y, n.substring(4), o) : e.setAttribute(n, o) : e.removeAttribute(n);
                    }
                } else "text" in t && (e.nodeValue = t.text);
            } else e = _.doc.createElementNS(Y, e);
            return e;
        }
        function o(e, t) {
            return t = T.prototype.toLowerCase.call(t), "finite" == t ? isFinite(e) : !("array" != t || !(e instanceof Array || Array.isArray && Array.isArray(e))) || ("null" == t && null === e || t == typeof e && null !== e || "object" == t && e === Object(e) || F.call(e).slice(8, -1).toLowerCase() == t);
        }
        function i(e) {
            if ("function" == typeof e || Object(e) !== e) return e;
            var t = new e.constructor();
            for (var n in e) e[k](n) && (t[n] = i(e[n]));
            return t;
        }
        function a(e, t) {
            for (var n = 0, r = e.length; n < r; n++) if (e[n] === t) return e.push(e.splice(n, 1)[0]);
        }
        function s(e, t, n) {
            function r() {
                var o = Array.prototype.slice.call(arguments, 0), i = o.join("␀"), s = r.cache = r.cache || {}, u = r.count = r.count || [];
                return s[k](i) ? (a(u, i), n ? n(s[i]) : s[i]) : (u.length >= 1e3 && delete s[u.shift()], 
                u.push(i), s[i] = e.apply(t, o), n ? n(s[i]) : s[i]);
            }
            return r;
        }
        function u(e, t, n, r, o, i) {
            if (null == o) {
                var a = e - n, s = t - r;
                return a || s ? (180 + 180 * D.atan2(-s, -a) / P + 360) % 360 : 0;
            }
            return u(e, t, o, i) - u(n, r, o, i);
        }
        function l(e) {
            return e % 360 * P / 180;
        }
        function c(e) {
            return 180 * e / P % 360;
        }
        function p(e) {
            var t = [];
            return e = e.replace(/(?:^|\s)(\w+)\(([^)]+)\)/g, function(e, n, r) {
                return r = r.split(/\s*,\s*|\s+/), "rotate" == n && 1 == r.length && r.push(0, 0), 
                "scale" == n && (r.length > 2 ? r = r.slice(0, 2) : 2 == r.length && r.push(0, 0), 
                1 == r.length && r.push(r[0], 0, 0)), "skewX" == n ? t.push([ "m", 1, 0, D.tan(l(r[0])), 1, 0, 0 ]) : "skewY" == n ? t.push([ "m", 1, D.tan(l(r[0])), 0, 1, 0, 0 ]) : t.push([ n.charAt(0) ].concat(r)), 
                e;
            }), t;
        }
        function d(e, t) {
            var r = ee(e), o = new n.Matrix();
            if (r) for (var i = 0, a = r.length; i < a; i++) {
                var s, u, l, c, p, d = r[i], f = d.length, h = T(d[0]).toLowerCase(), m = d[0] != h, g = m ? o.invert() : 0;
                "t" == h && 2 == f ? o.translate(d[1], 0) : "t" == h && 3 == f ? m ? (s = g.x(0, 0), 
                u = g.y(0, 0), l = g.x(d[1], d[2]), c = g.y(d[1], d[2]), o.translate(l - s, c - u)) : o.translate(d[1], d[2]) : "r" == h ? 2 == f ? (p = p || t, 
                o.rotate(d[1], p.x + p.width / 2, p.y + p.height / 2)) : 4 == f && (m ? (l = g.x(d[2], d[3]), 
                c = g.y(d[2], d[3]), o.rotate(d[1], l, c)) : o.rotate(d[1], d[2], d[3])) : "s" == h ? 2 == f || 3 == f ? (p = p || t, 
                o.scale(d[1], d[f - 1], p.x + p.width / 2, p.y + p.height / 2)) : 4 == f ? m ? (l = g.x(d[2], d[3]), 
                c = g.y(d[2], d[3]), o.scale(d[1], d[1], l, c)) : o.scale(d[1], d[1], d[2], d[3]) : 5 == f && (m ? (l = g.x(d[3], d[4]), 
                c = g.y(d[3], d[4]), o.scale(d[1], d[2], l, c)) : o.scale(d[1], d[2], d[3], d[4])) : "m" == h && 7 == f && o.add(d[1], d[2], d[3], d[4], d[5], d[6]);
            }
            return o;
        }
        function f(e) {
            var t = e.node.ownerSVGElement && w(e.node.ownerSVGElement) || e.node.parentNode && w(e.node.parentNode) || n.select("svg") || n(0, 0), r = t.select("defs"), o = null != r && r.node;
            return o || (o = x("defs", t.node).node), o;
        }
        function h(e) {
            return e.node.ownerSVGElement && w(e.node.ownerSVGElement) || n.select("svg");
        }
        function m(e, t, n) {
            function o(e) {
                if (null == e) return O;
                if (e == +e) return e;
                r(l, {
                    width: e
                });
                try {
                    return l.getBBox().width;
                } catch (e) {
                    return 0;
                }
            }
            function i(e) {
                if (null == e) return O;
                if (e == +e) return e;
                r(l, {
                    height: e
                });
                try {
                    return l.getBBox().height;
                } catch (e) {
                    return 0;
                }
            }
            function a(r, o) {
                null == t ? u[r] = o(e.attr(r) || 0) : r == t && (u = o(null == n ? e.attr(r) || 0 : n));
            }
            var s = h(e).node, u = {}, l = s.querySelector(".svg---mgr");
            switch (l || (l = r("rect"), r(l, {
                x: -9e9,
                y: -9e9,
                width: 10,
                height: 10,
                class: "svg---mgr",
                fill: "none"
            }), s.appendChild(l)), e.type) {
              case "rect":
                a("rx", o), a("ry", i);

              case "image":
                a("width", o), a("height", i);

              case "text":
                a("x", o), a("y", i);
                break;

              case "circle":
                a("cx", o), a("cy", i), a("r", o);
                break;

              case "ellipse":
                a("cx", o), a("cy", i), a("rx", o), a("ry", i);
                break;

              case "line":
                a("x1", o), a("x2", o), a("y1", i), a("y2", i);
                break;

              case "marker":
                a("refX", o), a("markerWidth", o), a("refY", i), a("markerHeight", i);
                break;

              case "radialGradient":
                a("fx", o), a("fy", i);
                break;

              case "tspan":
                a("dx", o), a("dy", i);
                break;

              default:
                a(t, o);
            }
            return s.removeChild(l), u;
        }
        function v(e) {
            o(e, "array") || (e = Array.prototype.slice.call(arguments, 0));
            for (var t = 0, n = 0, r = this.node; this[t]; ) delete this[t++];
            for (t = 0; t < e.length; t++) "set" == e[t].type ? e[t].forEach(function(e) {
                r.appendChild(e.node);
            }) : r.appendChild(e[t].node);
            var i = r.childNodes;
            for (t = 0; t < i.length; t++) this[n++] = w(i[t]);
            return this;
        }
        function y(e) {
            if (e.snap in $) return $[e.snap];
            var t;
            try {
                t = e.ownerSVGElement;
            } catch (e) {}
            /*\
     * Element.node
     [ property (object) ]
     **
     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.
     > Usage
     | // draw a circle at coordinate 10,10 with radius of 10
     | var c = paper.circle(10, 10, 10);
     | c.node.onclick = function () {
     |     c.attr("fill", "red");
     | };
    \*/
            this.node = e, t && (this.paper = new C(t)), /*\
     * Element.type
     [ property (string) ]
     **
     * SVG tag name of the given element.
    \*/
            this.type = e.tagName || e.nodeName;
            var n = this.id = V(this);
            if (this.anims = {}, this._ = {
                transform: []
            }, e.snap = n, $[n] = this, "g" == this.type && (this.add = v), this.type in {
                g: 1,
                mask: 1,
                pattern: 1,
                symbol: 1
            }) for (var r in C.prototype) C.prototype[k](r) && (this[r] = C.prototype[r]);
        }
        function b(e) {
            this.node = e;
        }
        function x(e, t) {
            var n = r(e);
            return t.appendChild(n), w(n);
        }
        function C(e, t) {
            var n, o, i, a = C.prototype;
            if (e && e.tagName && "svg" == e.tagName.toLowerCase()) {
                if (e.snap in $) return $[e.snap];
                var s = e.ownerDocument;
                n = new y(e), o = e.getElementsByTagName("desc")[0], i = e.getElementsByTagName("defs")[0], 
                o || (o = r("desc"), o.appendChild(s.createTextNode("Created with Snap")), n.node.appendChild(o)), 
                i || (i = r("defs"), n.node.appendChild(i)), n.defs = i;
                for (var u in a) a[k](u) && (n[u] = a[u]);
                n.paper = n.root = n;
            } else n = x("svg", _.doc.body), r(n.node, {
                height: t,
                version: 1.1,
                width: e,
                xmlns: Y
            });
            return n;
        }
        function w(e) {
            return e ? e instanceof y || e instanceof b ? e : e.tagName && "svg" == e.tagName.toLowerCase() ? new C(e) : e.tagName && "object" == e.tagName.toLowerCase() && "image/svg+xml" == e.type ? new C(e.contentDocument.getElementsByTagName("svg")[0]) : new y(e) : e;
        }
        function E(e, t) {
            for (var n = 0, r = e.length; n < r; n++) {
                var o = {
                    type: e[n].type,
                    attr: e[n].attr()
                }, i = e[n].children();
                t.push(o), i.length && E(i, o.childNodes = []);
            }
        }
        n.version = "0.5.1", n.toString = function() {
            return "Snap v" + this.version;
        }, n._ = {};
        var _ = {
            win: e.window,
            doc: e.window.document
        };
        n._.glob = _;
        var k = "hasOwnProperty", T = String, S = parseFloat, N = parseInt, D = Math, I = D.max, R = D.min, A = D.abs, P = (D.pow, 
        D.PI), O = (D.round, ""), F = Object.prototype.toString, M = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\))\s*$/i, j = (n._.separator = /[,\s]+/, 
        /[\s]*,[\s]*/), L = {
            hs: 1,
            rg: 1
        }, U = /([a-z])[\s,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\s]*,?[\s]*)+)/gi, B = /([rstm])[\s,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\s]*,?[\s]*)+)/gi, q = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\s]*,?[\s]*/gi, H = 0, W = "S" + (+new Date()).toString(36), V = function(e) {
            return (e && e.type ? e.type : O) + W + (H++).toString(36);
        }, z = "http://www.w3.org/1999/xlink", Y = "http://www.w3.org/2000/svg", $ = {};
        n.url = function(e) {
            return "url('#" + e + "')";
        };
        n._.$ = r, n._.id = V, /*\
 * Snap.format
 [ method ]
 **
 * Replaces construction of type `{<name>}` to the corresponding argument
 **
 - token (string) string to format
 - json (object) object which properties are used as a replacement
 = (string) formatted string
 > Usage
 | // this draws a rectangular shape equivalent to "M10,20h40v50h-40z"
 | paper.path(Snap.format("M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z", {
 |     x: 10,
 |     y: 20,
 |     dim: {
 |         width: 40,
 |         height: 50,
 |         "negative width": -40
 |     }
 | }));
\*/
        n.format = function() {
            var e = /\{([^\}]+)\}/g, t = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g, // matches .xxxxx or ["xxxxx"] to run over object properties
            n = function(e, n, r) {
                var o = r;
                return n.replace(t, function(e, t, n, r, i) {
                    t = t || r, o && (t in o && (o = o[t]), "function" == typeof o && i && (o = o()));
                }), o = (null == o || o == r ? e : o) + "";
            };
            return function(t, r) {
                return T(t).replace(e, function(e, t) {
                    return n(e, t, r);
                });
            };
        }(), n._.clone = i, n._.cacher = s, /*\
 * Snap.rad
 [ method ]
 **
 * Transform angle to radians
 - deg (number) angle in degrees
 = (number) angle in radians
\*/
        n.rad = l, /*\
 * Snap.deg
 [ method ]
 **
 * Transform angle to degrees
 - rad (number) angle in radians
 = (number) angle in degrees
\*/
        n.deg = c, /*\
 * Snap.sin
 [ method ]
 **
 * Equivalent to `Math.sin()` only works with degrees, not radians.
 - angle (number) angle in degrees
 = (number) sin
\*/
        n.sin = function(e) {
            return D.sin(n.rad(e));
        }, /*\
 * Snap.tan
 [ method ]
 **
 * Equivalent to `Math.tan()` only works with degrees, not radians.
 - angle (number) angle in degrees
 = (number) tan
\*/
        n.tan = function(e) {
            return D.tan(n.rad(e));
        }, /*\
 * Snap.cos
 [ method ]
 **
 * Equivalent to `Math.cos()` only works with degrees, not radians.
 - angle (number) angle in degrees
 = (number) cos
\*/
        n.cos = function(e) {
            return D.cos(n.rad(e));
        }, /*\
 * Snap.asin
 [ method ]
 **
 * Equivalent to `Math.asin()` only works with degrees, not radians.
 - num (number) value
 = (number) asin in degrees
\*/
        n.asin = function(e) {
            return n.deg(D.asin(e));
        }, /*\
 * Snap.acos
 [ method ]
 **
 * Equivalent to `Math.acos()` only works with degrees, not radians.
 - num (number) value
 = (number) acos in degrees
\*/
        n.acos = function(e) {
            return n.deg(D.acos(e));
        }, /*\
 * Snap.atan
 [ method ]
 **
 * Equivalent to `Math.atan()` only works with degrees, not radians.
 - num (number) value
 = (number) atan in degrees
\*/
        n.atan = function(e) {
            return n.deg(D.atan(e));
        }, /*\
 * Snap.atan2
 [ method ]
 **
 * Equivalent to `Math.atan2()` only works with degrees, not radians.
 - num (number) value
 = (number) atan2 in degrees
\*/
        n.atan2 = function(e) {
            return n.deg(D.atan2(e));
        }, /*\
 * Snap.angle
 [ method ]
 **
 * Returns an angle between two or three points
 - x1 (number) x coord of first point
 - y1 (number) y coord of first point
 - x2 (number) x coord of second point
 - y2 (number) y coord of second point
 - x3 (number) #optional x coord of third point
 - y3 (number) #optional y coord of third point
 = (number) angle in degrees
\*/
        n.angle = u, /*\
 * Snap.len
 [ method ]
 **
 * Returns distance between two points
 - x1 (number) x coord of first point
 - y1 (number) y coord of first point
 - x2 (number) x coord of second point
 - y2 (number) y coord of second point
 = (number) distance
\*/
        n.len = function(e, t, r, o) {
            return Math.sqrt(n.len2(e, t, r, o));
        }, /*\
 * Snap.len2
 [ method ]
 **
 * Returns squared distance between two points
 - x1 (number) x coord of first point
 - y1 (number) y coord of first point
 - x2 (number) x coord of second point
 - y2 (number) y coord of second point
 = (number) distance
\*/
        n.len2 = function(e, t, n, r) {
            return (e - n) * (e - n) + (t - r) * (t - r);
        }, /*\
 * Snap.closestPoint
 [ method ]
 **
 * Returns closest point to a given one on a given path.
 - path (Element) path element
 - x (number) x coord of a point
 - y (number) y coord of a point
 = (object) in format
 {
    x (number) x coord of the point on the path
    y (number) y coord of the point on the path
    length (number) length of the path to the point
    distance (number) distance from the given point to the path
 }
\*/
        // Copied from http://bl.ocks.org/mbostock/8027637
        n.closestPoint = function(e, t, n) {
            function r(e) {
                var r = e.x - t, o = e.y - n;
                return r * r + o * o;
            }
            // linear scan for coarse approximation
            for (var o, i, a, s, u = e.node, l = u.getTotalLength(), c = l / u.pathSegList.numberOfItems * .125, p = 1 / 0, d = 0; d <= l; d += c) (s = r(a = u.getPointAtLength(d))) < p && (o = a, 
            i = d, p = s);
            for (// binary search for precise estimate
            c *= .5; c > .5; ) {
                var f, h, m, g, v, y;
                (m = i - c) >= 0 && (v = r(f = u.getPointAtLength(m))) < p ? (o = f, i = m, p = v) : (g = i + c) <= l && (y = r(h = u.getPointAtLength(g))) < p ? (o = h, 
                i = g, p = y) : c *= .5;
            }
            return o = {
                x: o.x,
                y: o.y,
                length: i,
                distance: Math.sqrt(p)
            };
        }, /*\
 * Snap.is
 [ method ]
 **
 * Handy replacement for the `typeof` operator
 - o (…) any object or primitive
 - type (string) name of the type, e.g., `string`, `function`, `number`, etc.
 = (boolean) `true` if given value is of given type
\*/
        n.is = o, /*\
 * Snap.snapTo
 [ method ]
 **
 * Snaps given value to given grid
 - values (array|number) given array of values or step of the grid
 - value (number) value to adjust
 - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.
 = (number) adjusted value
\*/
        n.snapTo = function(e, t, n) {
            if (n = o(n, "finite") ? n : 10, o(e, "array")) {
                for (var r = e.length; r--; ) if (A(e[r] - t) <= n) return e[r];
            } else {
                e = +e;
                var i = t % e;
                if (i < n) return t - i;
                if (i > e - n) return t - i + e;
            }
            return t;
        }, // Colour
        /*\
 * Snap.getRGB
 [ method ]
 **
 * Parses color string as RGB object
 - color (string) color string in one of the following formats:
 # <ul>
 #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>
 #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>
 #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>
 #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>
 #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>
 #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>
 #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>
 #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>
 #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>
 #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>
 #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>
 #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>
 #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>
 #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>
 #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>
 # </ul>
 * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.
 = (object) RGB object in the following format:
 o {
 o     r (number) red,
 o     g (number) green,
 o     b (number) blue,
 o     hex (string) color in HTML/CSS format: #••••••,
 o     error (boolean) true if string can't be parsed
 o }
\*/
        n.getRGB = s(function(e) {
            if (!e || (e = T(e)).indexOf("-") + 1) return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                error: 1,
                toString: Q
            };
            if ("none" == e) return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                toString: Q
            };
            if (!(L[k](e.toLowerCase().substring(0, 2)) || "#" == e.charAt()) && (e = X(e)), 
            !e) return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                error: 1,
                toString: Q
            };
            var t, r, i, a, s, u, l = e.match(M);
            return l ? (l[2] && (i = N(l[2].substring(5), 16), r = N(l[2].substring(3, 5), 16), 
            t = N(l[2].substring(1, 3), 16)), l[3] && (i = N((s = l[3].charAt(3)) + s, 16), 
            r = N((s = l[3].charAt(2)) + s, 16), t = N((s = l[3].charAt(1)) + s, 16)), l[4] && (u = l[4].split(j), 
            t = S(u[0]), "%" == u[0].slice(-1) && (t *= 2.55), r = S(u[1]), "%" == u[1].slice(-1) && (r *= 2.55), 
            i = S(u[2]), "%" == u[2].slice(-1) && (i *= 2.55), "rgba" == l[1].toLowerCase().slice(0, 4) && (a = S(u[3])), 
            u[3] && "%" == u[3].slice(-1) && (a /= 100)), l[5] ? (u = l[5].split(j), t = S(u[0]), 
            "%" == u[0].slice(-1) && (t /= 100), r = S(u[1]), "%" == u[1].slice(-1) && (r /= 100), 
            i = S(u[2]), "%" == u[2].slice(-1) && (i /= 100), ("deg" == u[0].slice(-3) || "°" == u[0].slice(-1)) && (t /= 360), 
            "hsba" == l[1].toLowerCase().slice(0, 4) && (a = S(u[3])), u[3] && "%" == u[3].slice(-1) && (a /= 100), 
            n.hsb2rgb(t, r, i, a)) : l[6] ? (u = l[6].split(j), t = S(u[0]), "%" == u[0].slice(-1) && (t /= 100), 
            r = S(u[1]), "%" == u[1].slice(-1) && (r /= 100), i = S(u[2]), "%" == u[2].slice(-1) && (i /= 100), 
            ("deg" == u[0].slice(-3) || "°" == u[0].slice(-1)) && (t /= 360), "hsla" == l[1].toLowerCase().slice(0, 4) && (a = S(u[3])), 
            u[3] && "%" == u[3].slice(-1) && (a /= 100), n.hsl2rgb(t, r, i, a)) : (t = R(D.round(t), 255), 
            r = R(D.round(r), 255), i = R(D.round(i), 255), a = R(I(a, 0), 1), l = {
                r: t,
                g: r,
                b: i,
                toString: Q
            }, l.hex = "#" + (16777216 | i | r << 8 | t << 16).toString(16).slice(1), l.opacity = o(a, "finite") ? a : 1, 
            l)) : {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                error: 1,
                toString: Q
            };
        }, n), /*\
 * Snap.hsb
 [ method ]
 **
 * Converts HSB values to a hex representation of the color
 - h (number) hue
 - s (number) saturation
 - b (number) value or brightness
 = (string) hex representation of the color
\*/
        n.hsb = s(function(e, t, r) {
            return n.hsb2rgb(e, t, r).hex;
        }), /*\
 * Snap.hsl
 [ method ]
 **
 * Converts HSL values to a hex representation of the color
 - h (number) hue
 - s (number) saturation
 - l (number) luminosity
 = (string) hex representation of the color
\*/
        n.hsl = s(function(e, t, r) {
            return n.hsl2rgb(e, t, r).hex;
        }), /*\
 * Snap.rgb
 [ method ]
 **
 * Converts RGB values to a hex representation of the color
 - r (number) red
 - g (number) green
 - b (number) blue
 = (string) hex representation of the color
\*/
        n.rgb = s(function(e, t, n, r) {
            if (o(r, "finite")) {
                var i = D.round;
                return "rgba(" + [ i(e), i(t), i(n), +r.toFixed(2) ] + ")";
            }
            return "#" + (16777216 | n | t << 8 | e << 16).toString(16).slice(1);
        });
        var X = function(e) {
            var t = _.doc.getElementsByTagName("head")[0] || _.doc.getElementsByTagName("svg")[0], n = "rgb(255, 0, 0)";
            return (X = s(function(e) {
                if ("red" == e.toLowerCase()) return n;
                t.style.color = n, t.style.color = e;
                var r = _.doc.defaultView.getComputedStyle(t, O).getPropertyValue("color");
                return r == n ? null : r;
            }))(e);
        }, K = function() {
            return "hsb(" + [ this.h, this.s, this.b ] + ")";
        }, G = function() {
            return "hsl(" + [ this.h, this.s, this.l ] + ")";
        }, Q = function() {
            return 1 == this.opacity || null == this.opacity ? this.hex : "rgba(" + [ this.r, this.g, this.b, this.opacity ] + ")";
        }, J = function(e, t, r) {
            if (null == t && o(e, "object") && "r" in e && "g" in e && "b" in e && (r = e.b, 
            t = e.g, e = e.r), null == t && o(e, string)) {
                var i = n.getRGB(e);
                e = i.r, t = i.g, r = i.b;
            }
            return (e > 1 || t > 1 || r > 1) && (e /= 255, t /= 255, r /= 255), [ e, t, r ];
        }, Z = function(e, t, r, i) {
            e = D.round(255 * e), t = D.round(255 * t), r = D.round(255 * r);
            var a = {
                r: e,
                g: t,
                b: r,
                opacity: o(i, "finite") ? i : 1,
                hex: n.rgb(e, t, r),
                toString: Q
            };
            return o(i, "finite") && (a.opacity = i), a;
        };
        /*\
 * Snap.color
 [ method ]
 **
 * Parses the color string and returns an object featuring the color's component values
 - clr (string) color string in one of the supported formats (see @Snap.getRGB)
 = (object) Combined RGB/HSB object in the following format:
 o {
 o     r (number) red,
 o     g (number) green,
 o     b (number) blue,
 o     hex (string) color in HTML/CSS format: #••••••,
 o     error (boolean) `true` if string can't be parsed,
 o     h (number) hue,
 o     s (number) saturation,
 o     v (number) value (brightness),
 o     l (number) lightness
 o }
\*/
        n.color = function(e) {
            var t;
            return o(e, "object") && "h" in e && "s" in e && "b" in e ? (t = n.hsb2rgb(e), e.r = t.r, 
            e.g = t.g, e.b = t.b, e.opacity = 1, e.hex = t.hex) : o(e, "object") && "h" in e && "s" in e && "l" in e ? (t = n.hsl2rgb(e), 
            e.r = t.r, e.g = t.g, e.b = t.b, e.opacity = 1, e.hex = t.hex) : (o(e, "string") && (e = n.getRGB(e)), 
            o(e, "object") && "r" in e && "g" in e && "b" in e && !("error" in e) ? (t = n.rgb2hsl(e), 
            e.h = t.h, e.s = t.s, e.l = t.l, t = n.rgb2hsb(e), e.v = t.b) : (e = {
                hex: "none"
            }, e.r = e.g = e.b = e.h = e.s = e.v = e.l = -1, e.error = 1)), e.toString = Q, 
            e;
        }, /*\
 * Snap.hsb2rgb
 [ method ]
 **
 * Converts HSB values to an RGB object
 - h (number) hue
 - s (number) saturation
 - v (number) value or brightness
 = (object) RGB object in the following format:
 o {
 o     r (number) red,
 o     g (number) green,
 o     b (number) blue,
 o     hex (string) color in HTML/CSS format: #••••••
 o }
\*/
        n.hsb2rgb = function(e, t, n, r) {
            o(e, "object") && "h" in e && "s" in e && "b" in e && (n = e.b, t = e.s, r = e.o, 
            e = e.h), e *= 360;
            var i, a, s, u, l;
            return e = e % 360 / 60, l = n * t, u = l * (1 - A(e % 2 - 1)), i = a = s = n - l, 
            e = ~~e, i += [ l, u, 0, 0, u, l ][e], a += [ u, l, l, u, 0, 0 ][e], s += [ 0, 0, u, l, l, u ][e], 
            Z(i, a, s, r);
        }, /*\
 * Snap.hsl2rgb
 [ method ]
 **
 * Converts HSL values to an RGB object
 - h (number) hue
 - s (number) saturation
 - l (number) luminosity
 = (object) RGB object in the following format:
 o {
 o     r (number) red,
 o     g (number) green,
 o     b (number) blue,
 o     hex (string) color in HTML/CSS format: #••••••
 o }
\*/
        n.hsl2rgb = function(e, t, n, r) {
            o(e, "object") && "h" in e && "s" in e && "l" in e && (n = e.l, t = e.s, e = e.h), 
            (e > 1 || t > 1 || n > 1) && (e /= 360, t /= 100, n /= 100), e *= 360;
            var i, a, s, u, l;
            return e = e % 360 / 60, l = 2 * t * (n < .5 ? n : 1 - n), u = l * (1 - A(e % 2 - 1)), 
            i = a = s = n - l / 2, e = ~~e, i += [ l, u, 0, 0, u, l ][e], a += [ u, l, l, u, 0, 0 ][e], 
            s += [ 0, 0, u, l, l, u ][e], Z(i, a, s, r);
        }, /*\
 * Snap.rgb2hsb
 [ method ]
 **
 * Converts RGB values to an HSB object
 - r (number) red
 - g (number) green
 - b (number) blue
 = (object) HSB object in the following format:
 o {
 o     h (number) hue,
 o     s (number) saturation,
 o     b (number) brightness
 o }
\*/
        n.rgb2hsb = function(e, t, n) {
            n = J(e, t, n), e = n[0], t = n[1], n = n[2];
            var r, o, i, a;
            return i = I(e, t, n), a = i - R(e, t, n), r = 0 == a ? null : i == e ? (t - n) / a : i == t ? (n - e) / a + 2 : (e - t) / a + 4, 
            r = (r + 360) % 6 * 60 / 360, o = 0 == a ? 0 : a / i, {
                h: r,
                s: o,
                b: i,
                toString: K
            };
        }, /*\
 * Snap.rgb2hsl
 [ method ]
 **
 * Converts RGB values to an HSL object
 - r (number) red
 - g (number) green
 - b (number) blue
 = (object) HSL object in the following format:
 o {
 o     h (number) hue,
 o     s (number) saturation,
 o     l (number) luminosity
 o }
\*/
        n.rgb2hsl = function(e, t, n) {
            n = J(e, t, n), e = n[0], t = n[1], n = n[2];
            var r, o, i, a, s, u;
            return a = I(e, t, n), s = R(e, t, n), u = a - s, r = 0 == u ? null : a == e ? (t - n) / u : a == t ? (n - e) / u + 2 : (e - t) / u + 4, 
            r = (r + 360) % 6 * 60 / 360, i = (a + s) / 2, o = 0 == u ? 0 : i < .5 ? u / (2 * i) : u / (2 - 2 * i), 
            {
                h: r,
                s: o,
                l: i,
                toString: G
            };
        }, // Transformations
        /*\
 * Snap.parsePathString
 [ method ]
 **
 * Utility method
 **
 * Parses given path string into an array of arrays of path segments
 - pathString (string|array) path string or array of segments (in the last case it is returned straight away)
 = (array) array of segments
\*/
        n.parsePathString = function(e) {
            if (!e) return null;
            var t = n.path(e);
            if (t.arr) return n.path.clone(t.arr);
            var r = {
                a: 7,
                c: 6,
                o: 2,
                h: 1,
                l: 2,
                m: 2,
                r: 4,
                q: 4,
                s: 4,
                t: 2,
                v: 1,
                u: 3,
                z: 0
            }, i = [];
            // rough assumption
            return o(e, "array") && o(e[0], "array") && (i = n.path.clone(e)), i.length || T(e).replace(U, function(e, t, n) {
                var o = [], a = t.toLowerCase();
                if (n.replace(q, function(e, t) {
                    t && o.push(+t);
                }), "m" == a && o.length > 2 && (i.push([ t ].concat(o.splice(0, 2))), a = "l", 
                t = "m" == t ? "l" : "L"), "o" == a && 1 == o.length && i.push([ t, o[0] ]), "r" == a) i.push([ t ].concat(o)); else for (;o.length >= r[a] && (i.push([ t ].concat(o.splice(0, r[a]))), 
                r[a]); ) ;
            }), i.toString = n.path.toString, t.arr = n.path.clone(i), i;
        };
        /*\
 * Snap.parseTransformString
 [ method ]
 **
 * Utility method
 **
 * Parses given transform string into an array of transformations
 - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)
 = (array) array of transformations
\*/
        var ee = n.parseTransformString = function(e) {
            if (!e) return null;
            var t = [];
            // rough assumption
            return o(e, "array") && o(e[0], "array") && (t = n.path.clone(e)), t.length || T(e).replace(B, function(e, n, r) {
                var o = [];
                n.toLowerCase();
                r.replace(q, function(e, t) {
                    t && o.push(+t);
                }), t.push([ n ].concat(o));
            }), t.toString = n.path.toString, t;
        };
        n._.svgTransform2string = p, n._.rgTransform = /^[a-z][\s]*-?\.?\d/i, n._.transform2matrix = d, 
        n._unit2px = m;
        _.doc.contains || _.doc.compareDocumentPosition;
        n._.getSomeDefs = f, n._.getSomeSVG = h, /*\
 * Snap.select
 [ method ]
 **
 * Wraps a DOM element specified by CSS selector as @Element
 - query (string) CSS selector of the element
 = (Element) the current element
\*/
        n.select = function(e) {
            return e = T(e).replace(/([^\\]):/g, "$1\\:"), w(_.doc.querySelector(e));
        }, /*\
 * Snap.selectAll
 [ method ]
 **
 * Wraps DOM elements specified by CSS selector as set or array of @Element
 - query (string) CSS selector of the element
 = (Element) the current element
\*/
        n.selectAll = function(e) {
            for (var t = _.doc.querySelectorAll(e), r = (n.set || Array)(), o = 0; o < t.length; o++) r.push(w(t[o]));
            return r;
        }, // Hub garbage collector every 10s
        setInterval(function() {
            for (var e in $) if ($[k](e)) {
                var t = $[e], n = t.node;
                ("svg" != t.type && !n.ownerSVGElement || "svg" == t.type && (!n.parentNode || "ownerSVGElement" in n.parentNode && !n.ownerSVGElement)) && delete $[e];
            }
        }, 1e4), /*\
     * Element.attr
     [ method ]
     **
     * Gets or sets given attributes of the element.
     **
     - params (object) contains key-value pairs of attributes you want to set
     * or
     - param (string) name of the attribute
     = (Element) the current element
     * or
     = (string) value of attribute
     > Usage
     | el.attr({
     |     fill: "#fc0",
     |     stroke: "#000",
     |     strokeWidth: 2, // CamelCase...
     |     "fill-opacity": 0.5, // or dash-separated names
     |     width: "*=2" // prefixed values
     | });
     | console.log(el.attr("fill")); // #fc0
     * Prefixed values in format `"+=10"` supported. All four operations
     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`
     * and `-`: `"+=2em"`.
    \*/
        y.prototype.attr = function(e, n) {
            var r = this, i = r.node;
            if (!e) {
                if (1 != i.nodeType) return {
                    text: i.nodeValue
                };
                for (var a = i.attributes, s = {}, u = 0, l = a.length; u < l; u++) s[a[u].nodeName] = a[u].nodeValue;
                return s;
            }
            if (o(e, "string")) {
                if (!(arguments.length > 1)) return t("snap.util.getattr." + e, r).firstDefined();
                var c = {};
                c[e] = n, e = c;
            }
            for (var p in e) e[k](p) && t("snap.util.attr." + p, r, e[p]);
            return r;
        }, /*\
 * Snap.parse
 [ method ]
 **
 * Parses SVG fragment and converts it into a @Fragment
 **
 - svg (string) SVG string
 = (Fragment) the @Fragment
\*/
        n.parse = function(e) {
            var t = _.doc.createDocumentFragment(), n = !0, r = _.doc.createElement("div");
            if (e = T(e), e.match(/^\s*<\s*svg(?:\s|>)/) || (e = "<svg>" + e + "</svg>", n = !1), 
            r.innerHTML = e, e = r.getElementsByTagName("svg")[0]) if (n) t = e; else for (;e.firstChild; ) t.appendChild(e.firstChild);
            return new b(t);
        }, /*\
 * Snap.fragment
 [ method ]
 **
 * Creates a DOM fragment from a given list of elements or strings
 **
 - varargs (…) SVG string
 = (Fragment) the @Fragment
\*/
        n.fragment = function() {
            for (var e = Array.prototype.slice.call(arguments, 0), t = _.doc.createDocumentFragment(), r = 0, o = e.length; r < o; r++) {
                var i = e[r];
                i.node && i.node.nodeType && t.appendChild(i.node), i.nodeType && t.appendChild(i), 
                "string" == typeof i && t.appendChild(n.parse(i).node);
            }
            return new b(t);
        }, n._.make = x, n._.wrap = w, /*\
 * Paper.el
 [ method ]
 **
 * Creates an element on paper with a given name and no attributes
 **
 - name (string) tag name
 - attr (object) attributes
 = (Element) the current element
 > Usage
 | var c = paper.circle(10, 10, 10); // is the same as...
 | var c = paper.el("circle").attr({
 |     cx: 10,
 |     cy: 10,
 |     r: 10
 | });
 | // and the same as
 | var c = paper.el("circle", {
 |     cx: 10,
 |     cy: 10,
 |     r: 10
 | });
\*/
        C.prototype.el = function(e, t) {
            var n = x(e, this.node);
            return t && n.attr(t), n;
        }, /*\
 * Element.children
 [ method ]
 **
 * Returns array of all the children of the element.
 = (array) array of Elements
\*/
        y.prototype.children = function() {
            for (var e = [], t = this.node.childNodes, r = 0, o = t.length; r < o; r++) e[r] = n(t[r]);
            return e;
        }, /*\
 * Element.toJSON
 [ method ]
 **
 * Returns object representation of the given element and all its children.
 = (object) in format
 o {
 o     type (string) this.type,
 o     attr (object) attributes map,
 o     childNodes (array) optional array of children in the same format
 o }
\*/
        y.prototype.toJSON = function() {
            var e = [];
            return E([ this ], e), e[0];
        }, // default
        t.on("snap.util.getattr", function() {
            var e = t.nt();
            e = e.substring(e.lastIndexOf(".") + 1);
            var n = e.replace(/[A-Z]/g, function(e) {
                return "-" + e.toLowerCase();
            });
            return te[k](n) ? this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(n) : r(this.node, e);
        });
        var te = {
            "alignment-baseline": 0,
            "baseline-shift": 0,
            clip: 0,
            "clip-path": 0,
            "clip-rule": 0,
            color: 0,
            "color-interpolation": 0,
            "color-interpolation-filters": 0,
            "color-profile": 0,
            "color-rendering": 0,
            cursor: 0,
            direction: 0,
            display: 0,
            "dominant-baseline": 0,
            "enable-background": 0,
            fill: 0,
            "fill-opacity": 0,
            "fill-rule": 0,
            filter: 0,
            "flood-color": 0,
            "flood-opacity": 0,
            font: 0,
            "font-family": 0,
            "font-size": 0,
            "font-size-adjust": 0,
            "font-stretch": 0,
            "font-style": 0,
            "font-variant": 0,
            "font-weight": 0,
            "glyph-orientation-horizontal": 0,
            "glyph-orientation-vertical": 0,
            "image-rendering": 0,
            kerning: 0,
            "letter-spacing": 0,
            "lighting-color": 0,
            marker: 0,
            "marker-end": 0,
            "marker-mid": 0,
            "marker-start": 0,
            mask: 0,
            opacity: 0,
            overflow: 0,
            "pointer-events": 0,
            "shape-rendering": 0,
            "stop-color": 0,
            "stop-opacity": 0,
            stroke: 0,
            "stroke-dasharray": 0,
            "stroke-dashoffset": 0,
            "stroke-linecap": 0,
            "stroke-linejoin": 0,
            "stroke-miterlimit": 0,
            "stroke-opacity": 0,
            "stroke-width": 0,
            "text-anchor": 0,
            "text-decoration": 0,
            "text-rendering": 0,
            "unicode-bidi": 0,
            visibility: 0,
            "word-spacing": 0,
            "writing-mode": 0
        };
        t.on("snap.util.attr", function(e) {
            var n = t.nt(), o = {};
            n = n.substring(n.lastIndexOf(".") + 1), o[n] = e;
            var i = n.replace(/-(\w)/gi, function(e, t) {
                return t.toUpperCase();
            }), a = n.replace(/[A-Z]/g, function(e) {
                return "-" + e.toLowerCase();
            });
            te[k](a) ? this.node.style[i] = null == e ? O : e : r(this.node, o);
        }), C.prototype, // simple ajax
        /*\
 * Snap.ajax
 [ method ]
 **
 * Simple implementation of Ajax
 **
 - url (string) URL
 - postData (object|string) data for post request
 - callback (function) callback
 - scope (object) #optional scope of callback
 * or
 - url (string) URL
 - callback (function) callback
 - scope (object) #optional scope of callback
 = (XMLHttpRequest) the XMLHttpRequest object, just in case
\*/
        n.ajax = function(e, n, r, i) {
            var a = new XMLHttpRequest(), s = V();
            if (a) {
                if (o(n, "function")) i = r, r = n, n = null; else if (o(n, "object")) {
                    var u = [];
                    for (var l in n) n.hasOwnProperty(l) && u.push(encodeURIComponent(l) + "=" + encodeURIComponent(n[l]));
                    n = u.join("&");
                }
                return a.open(n ? "POST" : "GET", e, !0), (n && (a.setRequestHeader("X-Requested-With", "XMLHttpRequest"), 
                a.setRequestHeader("Content-type", "application/x-www-form-urlencoded")), r && (t.once("snap.ajax." + s + ".0", r), 
                t.once("snap.ajax." + s + ".200", r), t.once("snap.ajax." + s + ".304", r)), a.onreadystatechange = function() {
                    4 == a.readyState && t("snap.ajax." + s + "." + a.status, i, a);
                }, 4 == a.readyState) ? a : (a.send(n), a);
            }
        }, /*\
 * Snap.load
 [ method ]
 **
 * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)
 **
 - url (string) URL
 - callback (function) callback
 - scope (object) #optional scope of callback
\*/
        n.load = function(e, t, r) {
            n.ajax(e, function(e) {
                var o = n.parse(e.responseText);
                r ? t.call(r, o) : t(o);
            });
        };
        var ne = function(e) {
            var t = e.getBoundingClientRect(), n = e.ownerDocument, r = n.body, o = n.documentElement, i = o.clientTop || r.clientTop || 0, a = o.clientLeft || r.clientLeft || 0;
            return {
                y: t.top + (g.win.pageYOffset || o.scrollTop || r.scrollTop) - i,
                x: t.left + (g.win.pageXOffset || o.scrollLeft || r.scrollLeft) - a
            };
        };
        /*\
 * Snap.getElementByPoint
 [ method ]
 **
 * Returns you topmost element under given point.
 **
 = (object) Snap element object
 - x (number) x coordinate from the top left corner of the window
 - y (number) y coordinate from the top left corner of the window
 > Usage
 | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: "#f00"});
\*/
        /*\
 * Snap.plugin
 [ method ]
 **
 * Let you write plugins. You pass in a function with five arguments, like this:
 | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {
 |     Snap.newmethod = function () {};
 |     Element.prototype.newmethod = function () {};
 |     Paper.prototype.newmethod = function () {};
 | });
 * Inside the function you have access to all main objects (and their
 * prototypes). This allow you to extend anything you want.
 **
 - f (function) your plugin body
\*/
        return n.getElementByPoint = function(e, t) {
            var n = this, r = (n.canvas, _.doc.elementFromPoint(e, t));
            if (_.win.opera && "svg" == r.tagName) {
                var o = ne(r), i = r.createSVGRect();
                i.x = e - o.x, i.y = t - o.y, i.width = i.height = 1;
                var a = r.getIntersectionList(i, null);
                a.length && (r = a[a.length - 1]);
            }
            return r ? w(r) : null;
        }, n.plugin = function(e) {
            e(n, y, C, _, b);
        }, _.win.Snap = n, n;
    }(e || this);
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    // 
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    // 
    // http://www.apache.org/licenses/LICENSE-2.0
    // 
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.
    //
    // Licensed under the Apache License, Version 2.0 (the "License");
    // you may not use this file except in compliance with the License.
    // You may obtain a copy of the License at
    //
    // http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software
    // distributed under the License is distributed on an "AS IS" BASIS,
    // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    // See the License for the specific language governing permissions and
    // limitations under the License.
    return r.plugin(function(n, r, o, i, a) {
        function s(e, t) {
            if (null == t) {
                var r = !0;
                if (!(t = "linearGradient" == e.type || "radialGradient" == e.type ? e.node.getAttribute("gradientTransform") : "pattern" == e.type ? e.node.getAttribute("patternTransform") : e.node.getAttribute("transform"))) return new n.Matrix();
                t = n._.svgTransform2string(t);
            } else t = n._.rgTransform.test(t) ? d(t).replace(/\.{3}|\u2026/g, e._.transform || "") : n._.svgTransform2string(t), 
            p(t, "array") && (t = n.path ? n.path.toString.call(t) : d(t)), e._.transform = t;
            var o = n._.transform2matrix(t, e.getBBox(1));
            if (r) return o;
            e.matrix = o;
        }
        function u(e) {
            function t(e, t) {
                var r = h(e.node, t);
                r = r && r.match(i), (r = r && r[2]) && "#" == r.charAt() && (r = r.substring(1)) && (s[r] = (s[r] || []).concat(function(r) {
                    var o = {};
                    o[t] = n.url(r), h(e.node, o);
                }));
            }
            for (var r, o = e.selectAll("*"), i = /^\s*url\(("|'|)(.*)\1\)\s*$/, a = [], s = {}, u = 0, l = o.length; u < l; u++) {
                r = o[u], t(r, "fill"), t(r, "stroke"), t(r, "filter"), t(r, "mask"), t(r, "clip-path"), 
                function(e) {
                    var t = h(e.node, "xlink:href");
                    t && "#" == t.charAt() && (t = t.substring(1)) && (s[t] = (s[t] || []).concat(function(t) {
                        e.attr("xlink:href", "#" + t);
                    }));
                }(r);
                var c = h(r.node, "id");
                c && (h(r.node, {
                    id: r.id
                }), a.push({
                    old: c,
                    id: r.id
                }));
            }
            for (u = 0, l = a.length; u < l; u++) {
                var p = s[a[u].old];
                if (p) for (var d = 0, f = p.length; d < f; d++) p[d](a[u].id);
            }
        }
        function l(e) {
            return function() {
                var t = e ? "<" + this.type : "", n = this.node.attributes, r = this.node.childNodes;
                if (e) for (var o = 0, i = n.length; o < i; o++) t += " " + n[o].name + '="' + n[o].value.replace(/"/g, '\\"') + '"';
                if (r.length) {
                    for (e && (t += ">"), o = 0, i = r.length; o < i; o++) 3 == r[o].nodeType ? t += r[o].nodeValue : 1 == r[o].nodeType && (t += v(r[o]).toString());
                    e && (t += "</" + this.type + ">");
                } else e && (t += "/>");
                return t;
            };
        }
        var c = r.prototype, p = n.is, d = String, f = n._unit2px, h = n._.$, m = n._.make, g = n._.getSomeDefs, v = n._.wrap;
        /*\
     * Element.getBBox
     [ method ]
     **
     * Returns the bounding box descriptor for the given element
     **
     = (object) bounding box descriptor:
     o {
     o     cx: (number) x of the center,
     o     cy: (number) x of the center,
     o     h: (number) height,
     o     height: (number) height,
     o     path: (string) path command for the box,
     o     r0: (number) radius of a circle that fully encloses the box,
     o     r1: (number) radius of the smallest circle that can be enclosed,
     o     r2: (number) radius of the largest circle that can be enclosed,
     o     vb: (string) box as a viewbox command,
     o     w: (number) width,
     o     width: (number) width,
     o     x2: (number) x of the right side,
     o     x: (number) x of the left side,
     o     y2: (number) y of the bottom edge,
     o     y: (number) y of the top edge
     o }
    \*/
        c.getBBox = function(e) {
            if ("tspan" == this.type) return n._.box(this.node.getClientRects().item(0));
            if (!n.Matrix || !n.path) return this.node.getBBox();
            var t = this, r = new n.Matrix();
            if (t.removed) return n._.box();
            for (;"use" == t.type; ) if (e || (r = r.add(t.transform().localMatrix.translate(t.attr("x") || 0, t.attr("y") || 0))), 
            t.original) t = t.original; else {
                var o = t.attr("xlink:href");
                t = t.original = t.node.ownerDocument.getElementById(o.substring(o.indexOf("#") + 1));
            }
            var i = t._, a = n.path.get[t.type] || n.path.get.deflt;
            try {
                return e ? (i.bboxwt = a ? n.path.getBBox(t.realPath = a(t)) : n._.box(t.node.getBBox()), 
                n._.box(i.bboxwt)) : (t.realPath = a(t), t.matrix = t.transform().localMatrix, i.bbox = n.path.getBBox(n.path.map(t.realPath, r.add(t.matrix))), 
                n._.box(i.bbox));
            } catch (e) {
                // Firefox doesn’t give you bbox of hidden element
                return n._.box();
            }
        };
        var y = function() {
            return this.string;
        };
        /*\
     * Element.transform
     [ method ]
     **
     * Gets or sets transformation of the element
     **
     - tstr (string) transform string in Snap or SVG format
     = (Element) the current element
     * or
     = (object) transformation descriptor:
     o {
     o     string (string) transform string,
     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,
     o     localMatrix (Matrix) matrix of transformations applied only to the element,
     o     diffMatrix (Matrix) matrix of difference between global and local transformations,
     o     global (string) global transformation as string,
     o     local (string) local transformation as string,
     o     toString (function) returns `string` property
     o }
    \*/
        c.transform = function(e) {
            var t = this._;
            if (null == e) {
                for (var r, o = this, i = new n.Matrix(this.node.getCTM()), a = s(this), u = [ a ], l = new n.Matrix(), c = a.toTransformString(), p = d(a) == d(this.matrix) ? d(t.transform) : c; "svg" != o.type && (o = o.parent()); ) u.push(s(o));
                for (r = u.length; r--; ) l.add(u[r]);
                return {
                    string: p,
                    globalMatrix: i,
                    totalMatrix: l,
                    localMatrix: a,
                    diffMatrix: i.clone().add(a.invert()),
                    global: i.toTransformString(),
                    total: l.toTransformString(),
                    local: c,
                    toString: y
                };
            }
            return e instanceof n.Matrix ? (this.matrix = e, this._.transform = e.toTransformString()) : s(this, e), 
            this.node && ("linearGradient" == this.type || "radialGradient" == this.type ? h(this.node, {
                gradientTransform: this.matrix
            }) : "pattern" == this.type ? h(this.node, {
                patternTransform: this.matrix
            }) : h(this.node, {
                transform: this.matrix
            })), this;
        }, /*\
     * Element.parent
     [ method ]
     **
     * Returns the element's parent
     **
     = (Element) the parent element
    \*/
        c.parent = function() {
            return v(this.node.parentNode);
        }, /*\
     * Element.append
     [ method ]
     **
     * Appends the given element to current one
     **
     - el (Element|Set) element to append
     = (Element) the parent element
    \*/
        /*\
     * Element.add
     [ method ]
     **
     * See @Element.append
    \*/
        c.append = c.add = function(e) {
            if (e) {
                if ("set" == e.type) {
                    var t = this;
                    return e.forEach(function(e) {
                        t.add(e);
                    }), this;
                }
                e = v(e), this.node.appendChild(e.node), e.paper = this.paper;
            }
            return this;
        }, /*\
     * Element.appendTo
     [ method ]
     **
     * Appends the current element to the given one
     **
     - el (Element) parent element to append to
     = (Element) the child element
    \*/
        c.appendTo = function(e) {
            return e && (e = v(e), e.append(this)), this;
        }, /*\
     * Element.prepend
     [ method ]
     **
     * Prepends the given element to the current one
     **
     - el (Element) element to prepend
     = (Element) the parent element
    \*/
        c.prepend = function(e) {
            if (e) {
                if ("set" == e.type) {
                    var t, n = this;
                    return e.forEach(function(e) {
                        t ? t.after(e) : n.prepend(e), t = e;
                    }), this;
                }
                e = v(e);
                var r = e.parent();
                this.node.insertBefore(e.node, this.node.firstChild), this.add && this.add(), e.paper = this.paper, 
                this.parent() && this.parent().add(), r && r.add();
            }
            return this;
        }, /*\
     * Element.prependTo
     [ method ]
     **
     * Prepends the current element to the given one
     **
     - el (Element) parent element to prepend to
     = (Element) the child element
    \*/
        c.prependTo = function(e) {
            return e = v(e), e.prepend(this), this;
        }, /*\
     * Element.before
     [ method ]
     **
     * Inserts given element before the current one
     **
     - el (Element) element to insert
     = (Element) the parent element
    \*/
        c.before = function(e) {
            if ("set" == e.type) {
                var t = this;
                return e.forEach(function(e) {
                    var n = e.parent();
                    t.node.parentNode.insertBefore(e.node, t.node), n && n.add();
                }), this.parent().add(), this;
            }
            e = v(e);
            var n = e.parent();
            return this.node.parentNode.insertBefore(e.node, this.node), this.parent() && this.parent().add(), 
            n && n.add(), e.paper = this.paper, this;
        }, /*\
     * Element.after
     [ method ]
     **
     * Inserts given element after the current one
     **
     - el (Element) element to insert
     = (Element) the parent element
    \*/
        c.after = function(e) {
            e = v(e);
            var t = e.parent();
            return this.node.nextSibling ? this.node.parentNode.insertBefore(e.node, this.node.nextSibling) : this.node.parentNode.appendChild(e.node), 
            this.parent() && this.parent().add(), t && t.add(), e.paper = this.paper, this;
        }, /*\
     * Element.insertBefore
     [ method ]
     **
     * Inserts the element after the given one
     **
     - el (Element) element next to whom insert to
     = (Element) the parent element
    \*/
        c.insertBefore = function(e) {
            e = v(e);
            var t = this.parent();
            return e.node.parentNode.insertBefore(this.node, e.node), this.paper = e.paper, 
            t && t.add(), e.parent() && e.parent().add(), this;
        }, /*\
     * Element.insertAfter
     [ method ]
     **
     * Inserts the element after the given one
     **
     - el (Element) element next to whom insert to
     = (Element) the parent element
    \*/
        c.insertAfter = function(e) {
            e = v(e);
            var t = this.parent();
            return e.node.parentNode.insertBefore(this.node, e.node.nextSibling), this.paper = e.paper, 
            t && t.add(), e.parent() && e.parent().add(), this;
        }, /*\
     * Element.remove
     [ method ]
     **
     * Removes element from the DOM
     = (Element) the detached element
    \*/
        c.remove = function() {
            var e = this.parent();
            return this.node.parentNode && this.node.parentNode.removeChild(this.node), delete this.paper, 
            this.removed = !0, e && e.add(), this;
        }, /*\
     * Element.select
     [ method ]
     **
     * Gathers the nested @Element matching the given set of CSS selectors
     **
     - query (string) CSS selector
     = (Element) result of query selection
    \*/
        c.select = function(e) {
            return v(this.node.querySelector(e));
        }, /*\
     * Element.selectAll
     [ method ]
     **
     * Gathers nested @Element objects matching the given set of CSS selectors
     **
     - query (string) CSS selector
     = (Set|array) result of query selection
    \*/
        c.selectAll = function(e) {
            for (var t = this.node.querySelectorAll(e), r = (n.set || Array)(), o = 0; o < t.length; o++) r.push(v(t[o]));
            return r;
        }, /*\
     * Element.asPX
     [ method ]
     **
     * Returns given attribute of the element as a `px` value (not %, em, etc.)
     **
     - attr (string) attribute name
     - value (string) #optional attribute value
     = (Element) result of query selection
    \*/
        c.asPX = function(e, t) {
            return null == t && (t = this.attr(e)), +f(this, e, t);
        }, // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.
        /*\
     * Element.use
     [ method ]
     **
     * Creates a `<use>` element linked to the current element
     **
     = (Element) the `<use>` element
    \*/
        c.use = function() {
            var e, t = this.node.id;
            return t || (t = this.id, h(this.node, {
                id: t
            })), e = "linearGradient" == this.type || "radialGradient" == this.type || "pattern" == this.type ? m(this.type, this.node.parentNode) : m("use", this.node.parentNode), 
            h(e.node, {
                "xlink:href": "#" + t
            }), e.original = this, e;
        }, /*\
     * Element.clone
     [ method ]
     **
     * Creates a clone of the element and inserts it after the element
     **
     = (Element) the clone
    \*/
        c.clone = function() {
            var e = v(this.node.cloneNode(!0));
            return h(e.node, "id") && h(e.node, {
                id: e.id
            }), u(e), e.insertAfter(this), e;
        }, /*\
     * Element.toDefs
     [ method ]
     **
     * Moves element to the shared `<defs>` area
     **
     = (Element) the element
    \*/
        c.toDefs = function() {
            return g(this).appendChild(this.node), this;
        }, /*\
     * Element.toPattern
     [ method ]
     **
     * Creates a `<pattern>` element from the current element
     **
     * To create a pattern you have to specify the pattern rect:
     - x (string|number)
     - y (string|number)
     - width (string|number)
     - height (string|number)
     = (Element) the `<pattern>` element
     * You can use pattern later on as an argument for `fill` attribute:
     | var p = paper.path("M10-5-10,15M15,0,0,15M0-5-20,15").attr({
     |         fill: "none",
     |         stroke: "#bada55",
     |         strokeWidth: 5
     |     }).pattern(0, 0, 10, 10),
     |     c = paper.circle(200, 200, 100);
     | c.attr({
     |     fill: p
     | });
    \*/
        c.pattern = c.toPattern = function(e, t, n, r) {
            var o = m("pattern", g(this));
            return null == e && (e = this.getBBox()), p(e, "object") && "x" in e && (t = e.y, 
            n = e.width, r = e.height, e = e.x), h(o.node, {
                x: e,
                y: t,
                width: n,
                height: r,
                patternUnits: "userSpaceOnUse",
                id: o.id,
                viewBox: [ e, t, n, r ].join(" ")
            }), o.node.appendChild(this.node), o;
        }, // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.
        // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?
        /*\
     * Element.marker
     [ method ]
     **
     * Creates a `<marker>` element from the current element
     **
     * To create a marker you have to specify the bounding rect and reference point:
     - x (number)
     - y (number)
     - width (number)
     - height (number)
     - refX (number)
     - refY (number)
     = (Element) the `<marker>` element
     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.
    \*/
        // TODO add usage for markers
        c.marker = function(e, t, n, r, o, i) {
            var a = m("marker", g(this));
            return null == e && (e = this.getBBox()), p(e, "object") && "x" in e && (t = e.y, 
            n = e.width, r = e.height, o = e.refX || e.cx, i = e.refY || e.cy, e = e.x), h(a.node, {
                viewBox: [ e, t, n, r ].join(" "),
                markerWidth: n,
                markerHeight: r,
                orient: "auto",
                refX: o || 0,
                refY: i || 0,
                id: a.id
            }), a.node.appendChild(this.node), a;
        };
        var b = {};
        /*\
     * Element.data
     [ method ]
     **
     * Adds or retrieves given value associated with given key. (Don’t confuse
     * with `data-` attributes)
     *
     * See also @Element.removeData
     - key (string) key to store data
     - value (any) #optional value to store
     = (object) @Element
     * or, if value is not specified:
     = (any) value
     > Usage
     | for (var i = 0, i < 5, i++) {
     |     paper.circle(10 + 15 * i, 10, 10)
     |          .attr({fill: "#000"})
     |          .data("i", i)
     |          .click(function () {
     |             alert(this.data("i"));
     |          });
     | }
    \*/
        c.data = function(e, r) {
            var o = b[this.id] = b[this.id] || {};
            if (0 == arguments.length) return t("snap.data.get." + this.id, this, o, null), 
            o;
            if (1 == arguments.length) {
                if (n.is(e, "object")) {
                    for (var i in e) e.hasOwnProperty(i) && this.data(i, e[i]);
                    return this;
                }
                return t("snap.data.get." + this.id, this, o[e], e), o[e];
            }
            return o[e] = r, t("snap.data.set." + this.id, this, r, e), this;
        }, /*\
     * Element.removeData
     [ method ]
     **
     * Removes value associated with an element by given key.
     * If key is not provided, removes all the data of the element.
     - key (string) #optional key
     = (object) @Element
    \*/
        c.removeData = function(e) {
            return null == e ? b[this.id] = {} : b[this.id] && delete b[this.id][e], this;
        }, /*\
     * Element.outerSVG
     [ method ]
     **
     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.
     *
     * See also @Element.innerSVG
     = (string) SVG code for the element
    \*/
        /*\
     * Element.toString
     [ method ]
     **
     * See @Element.outerSVG
    \*/
        c.outerSVG = c.toString = l(1), /*\
     * Element.innerSVG
     [ method ]
     **
     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`
     = (string) SVG code for the element
    \*/
        c.innerSVG = l(), c.toDataURL = function() {
            if (e && e.btoa) {
                var t = this.getBBox(), r = n.format('<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="{width}" height="{height}" viewBox="{x} {y} {width} {height}">{contents}</svg>', {
                    x: +t.x.toFixed(3),
                    y: +t.y.toFixed(3),
                    width: +t.width.toFixed(3),
                    height: +t.height.toFixed(3),
                    contents: this.outerSVG()
                });
                return "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(r)));
            }
        }, /*\
     * Fragment.select
     [ method ]
     **
     * See @Element.select
    \*/
        a.prototype.select = c.select, /*\
     * Fragment.selectAll
     [ method ]
     **
     * See @Element.selectAll
    \*/
        a.prototype.selectAll = c.selectAll;
    }), r.plugin(function(e, r, o, i, a) {
        function s(e, t, n) {
            return function(r) {
                var o = r.slice(e, t);
                return 1 == o.length && (o = o[0]), n ? n(o) : o;
            };
        }
        var u = r.prototype, l = e.is, c = String, p = "hasOwnProperty", d = function(e, t, r, o) {
            "function" != typeof r || r.length || (o = r, r = n.linear), this.attr = e, this.dur = t, 
            r && (this.easing = r), o && (this.callback = o);
        };
        e._.Animation = d, /*\
     * Snap.animation
     [ method ]
     **
     * Creates an animation object
     **
     - attr (object) attributes of final destination
     - duration (number) duration of the animation, in milliseconds
     - easing (function) #optional one of easing functions of @mina or custom one
     - callback (function) #optional callback function that fires when animation ends
     = (object) animation object
    \*/
        e.animation = function(e, t, n, r) {
            return new d(e, t, n, r);
        }, /*\
     * Element.inAnim
     [ method ]
     **
     * Returns a set of animations that may be able to manipulate the current element
     **
     = (object) in format:
     o {
     o     anim (object) animation object,
     o     mina (object) @mina object,
     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,
     o     status (function) gets or sets the status of the animation,
     o     stop (function) stops the animation
     o }
    \*/
        u.inAnim = function() {
            var e = this, t = [];
            for (var n in e.anims) e.anims[p](n) && function(e) {
                t.push({
                    anim: new d(e._attrs, e.dur, e.easing, e._callback),
                    mina: e,
                    curStatus: e.status(),
                    status: function(t) {
                        return e.status(t);
                    },
                    stop: function() {
                        e.stop();
                    }
                });
            }(e.anims[n]);
            return t;
        }, /*\
     * Snap.animate
     [ method ]
     **
     * Runs generic animation of one number into another with a caring function
     **
     - from (number|array) number or array of numbers
     - to (number|array) number or array of numbers
     - setter (function) caring function that accepts one number argument
     - duration (number) duration, in milliseconds
     - easing (function) #optional easing function from @mina or custom
     - callback (function) #optional callback function to execute when animation ends
     = (object) animation object in @mina format
     o {
     o     id (string) animation id, consider it read-only,
     o     duration (function) gets or sets the duration of the animation,
     o     easing (function) easing,
     o     speed (function) gets or sets the speed of the animation,
     o     status (function) gets or sets the status of the animation,
     o     stop (function) stops the animation
     o }
     | var rect = Snap().rect(0, 0, 10, 10);
     | Snap.animate(0, 10, function (val) {
     |     rect.attr({
     |         x: val
     |     });
     | }, 1000);
     | // in given context is equivalent to
     | rect.animate({x: 10}, 1000);
    \*/
        e.animate = function(e, r, o, i, a, s) {
            "function" != typeof a || a.length || (s = a, a = n.linear);
            var u = n.time(), l = n(e, r, u, u + i, n.time, o, a);
            return s && t.once("mina.finish." + l.id, s), l;
        }, /*\
     * Element.stop
     [ method ]
     **
     * Stops all the animations for the current element
     **
     = (Element) the current element
    \*/
        u.stop = function() {
            for (var e = this.inAnim(), t = 0, n = e.length; t < n; t++) e[t].stop();
            return this;
        }, /*\
     * Element.animate
     [ method ]
     **
     * Animates the given attributes of the element
     **
     - attrs (object) key-value pairs of destination attributes
     - duration (number) duration of the animation in milliseconds
     - easing (function) #optional easing function from @mina or custom
     - callback (function) #optional callback function that executes when the animation ends
     = (Element) the current element
    \*/
        u.animate = function(e, r, o, i) {
            "function" != typeof o || o.length || (i = o, o = n.linear), e instanceof d && (i = e.callback, 
            o = e.easing, r = e.dur, e = e.attr);
            var a, u, f, h, m = [], g = [], v = {}, y = this;
            for (var b in e) if (e[p](b)) {
                y.equal ? (h = y.equal(b, c(e[b])), a = h.from, u = h.to, f = h.f) : (a = +y.attr(b), 
                u = +e[b]);
                var x = l(a, "array") ? a.length : 1;
                v[b] = s(m.length, m.length + x, f), m = m.concat(a), g = g.concat(u);
            }
            var C = n.time(), w = n(m, g, C, C + r, n.time, function(e) {
                var t = {};
                for (var n in v) v[p](n) && (t[n] = v[n](e));
                y.attr(t);
            }, o);
            return y.anims[w.id] = w, w._attrs = e, w._callback = i, t("snap.animcreated." + y.id, w), 
            t.once("mina.finish." + w.id, function() {
                t.off("mina.*." + w.id), delete y.anims[w.id], i && i.call(y);
            }), t.once("mina.stop." + w.id, function() {
                t.off("mina.*." + w.id), delete y.anims[w.id];
            }), y;
        };
    }), r.plugin(function(e, t, n, r, o) {
        function i(e, t, n, r, o, i) {
            if (null == t && "[object SVGMatrix]" == a.call(e)) return this.a = e.a, this.b = e.b, 
            this.c = e.c, this.d = e.d, this.e = e.e, void (this.f = e.f);
            null != e ? (this.a = +e, this.b = +t, this.c = +n, this.d = +r, this.e = +o, this.f = +i) : (this.a = 1, 
            this.b = 0, this.c = 0, this.d = 1, this.e = 0, this.f = 0);
        }
        var a = Object.prototype.toString, s = String, u = Math;
        !function(t) {
            function n(e) {
                return e[0] * e[0] + e[1] * e[1];
            }
            function r(e) {
                var t = u.sqrt(n(e));
                e[0] && (e[0] /= t), e[1] && (e[1] /= t);
            }
            /*\
         * Matrix.add
         [ method ]
         **
         * Adds the given matrix to existing one
         - a (number)
         - b (number)
         - c (number)
         - d (number)
         - e (number)
         - f (number)
         * or
         - matrix (object) @Matrix
        \*/
            t.add = function(e, t, n, r, o, a) {
                if (e && e instanceof i) return this.add(e.a, e.b, e.c, e.d, e.e, e.f);
                var s = e * this.a + t * this.c, u = e * this.b + t * this.d;
                return this.e += o * this.a + a * this.c, this.f += o * this.b + a * this.d, this.c = n * this.a + r * this.c, 
                this.d = n * this.b + r * this.d, this.a = s, this.b = u, this;
            }, /*\
         * Matrix.multLeft
         [ method ]
         **
         * Multiplies a passed affine transform to the left: M * this.
         - a (number)
         - b (number)
         - c (number)
         - d (number)
         - e (number)
         - f (number)
         * or
         - matrix (object) @Matrix
        \*/
            i.prototype.multLeft = function(e, t, n, r, o, a) {
                if (e && e instanceof i) return this.multLeft(e.a, e.b, e.c, e.d, e.e, e.f);
                var s = e * this.a + n * this.b, u = e * this.c + n * this.d, l = e * this.e + n * this.f + o;
                return this.b = t * this.a + r * this.b, this.d = t * this.c + r * this.d, this.f = t * this.e + r * this.f + a, 
                this.a = s, this.c = u, this.e = l, this;
            }, /*\
         * Matrix.invert
         [ method ]
         **
         * Returns an inverted version of the matrix
         = (object) @Matrix
        \*/
            t.invert = function() {
                var e = this, t = e.a * e.d - e.b * e.c;
                return new i(e.d / t, -e.b / t, -e.c / t, e.a / t, (e.c * e.f - e.d * e.e) / t, (e.b * e.e - e.a * e.f) / t);
            }, /*\
         * Matrix.clone
         [ method ]
         **
         * Returns a copy of the matrix
         = (object) @Matrix
        \*/
            t.clone = function() {
                return new i(this.a, this.b, this.c, this.d, this.e, this.f);
            }, /*\
         * Matrix.translate
         [ method ]
         **
         * Translate the matrix
         - x (number) horizontal offset distance
         - y (number) vertical offset distance
        \*/
            t.translate = function(e, t) {
                return this.e += e * this.a + t * this.c, this.f += e * this.b + t * this.d, this;
            }, /*\
         * Matrix.scale
         [ method ]
         **
         * Scales the matrix
         - x (number) amount to be scaled, with `1` resulting in no change
         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)
         - cx (number) #optional horizontal origin point from which to scale
         - cy (number) #optional vertical origin point from which to scale
         * Default cx, cy is the middle point of the element.
        \*/
            t.scale = function(e, t, n, r) {
                return null == t && (t = e), (n || r) && this.translate(n, r), this.a *= e, this.b *= e, 
                this.c *= t, this.d *= t, (n || r) && this.translate(-n, -r), this;
            }, /*\
         * Matrix.rotate
         [ method ]
         **
         * Rotates the matrix
         - a (number) angle of rotation, in degrees
         - x (number) horizontal origin point from which to rotate
         - y (number) vertical origin point from which to rotate
        \*/
            t.rotate = function(t, n, r) {
                t = e.rad(t), n = n || 0, r = r || 0;
                var o = +u.cos(t).toFixed(9), i = +u.sin(t).toFixed(9);
                return this.add(o, i, -i, o, n, r), this.add(1, 0, 0, 1, -n, -r);
            }, /*\
         * Matrix.skewX
         [ method ]
         **
         * Skews the matrix along the x-axis
         - x (number) Angle to skew along the x-axis (in degrees).
        \*/
            t.skewX = function(e) {
                return this.skew(e, 0);
            }, /*\
         * Matrix.skewY
         [ method ]
         **
         * Skews the matrix along the y-axis
         - y (number) Angle to skew along the y-axis (in degrees).
        \*/
            t.skewY = function(e) {
                return this.skew(0, e);
            }, /*\
         * Matrix.skew
         [ method ]
         **
         * Skews the matrix
         - y (number) Angle to skew along the y-axis (in degrees).
         - x (number) Angle to skew along the x-axis (in degrees).
        \*/
            t.skew = function(t, n) {
                t = t || 0, n = n || 0, t = e.rad(t), n = e.rad(n);
                var r = u.tan(t).toFixed(9), o = u.tan(n).toFixed(9);
                return this.add(1, o, r, 1, 0, 0);
            }, /*\
         * Matrix.x
         [ method ]
         **
         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y
         - x (number)
         - y (number)
         = (number) x
        \*/
            t.x = function(e, t) {
                return e * this.a + t * this.c + this.e;
            }, /*\
         * Matrix.y
         [ method ]
         **
         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x
         - x (number)
         - y (number)
         = (number) y
        \*/
            t.y = function(e, t) {
                return e * this.b + t * this.d + this.f;
            }, t.get = function(e) {
                return +this[s.fromCharCode(97 + e)].toFixed(4);
            }, t.toString = function() {
                return "matrix(" + [ this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5) ].join() + ")";
            }, t.offset = function() {
                return [ this.e.toFixed(4), this.f.toFixed(4) ];
            }, /*\
         * Matrix.determinant
         [ method ]
         **
         * Finds determinant of the given matrix.
         = (number) determinant
        \*/
            t.determinant = function() {
                return this.a * this.d - this.b * this.c;
            }, /*\
         * Matrix.split
         [ method ]
         **
         * Splits matrix into primitive transformations
         = (object) in format:
         o dx (number) translation by x
         o dy (number) translation by y
         o scalex (number) scale by x
         o scaley (number) scale by y
         o shear (number) shear
         o rotate (number) rotation in deg
         o isSimple (boolean) could it be represented via simple transformations
        \*/
            t.split = function() {
                var t = {};
                // translation
                t.dx = this.e, t.dy = this.f;
                // scale and shear
                var o = [ [ this.a, this.b ], [ this.c, this.d ] ];
                t.scalex = u.sqrt(n(o[0])), r(o[0]), t.shear = o[0][0] * o[1][0] + o[0][1] * o[1][1], 
                o[1] = [ o[1][0] - o[0][0] * t.shear, o[1][1] - o[0][1] * t.shear ], t.scaley = u.sqrt(n(o[1])), 
                r(o[1]), t.shear /= t.scaley, this.determinant() < 0 && (t.scalex = -t.scalex);
                // rotation
                var i = o[0][1], a = o[1][1];
                return a < 0 ? (t.rotate = e.deg(u.acos(a)), i < 0 && (t.rotate = 360 - t.rotate)) : t.rotate = e.deg(u.asin(i)), 
                t.isSimple = !(+t.shear.toFixed(9) || t.scalex.toFixed(9) != t.scaley.toFixed(9) && t.rotate), 
                t.isSuperSimple = !+t.shear.toFixed(9) && t.scalex.toFixed(9) == t.scaley.toFixed(9) && !t.rotate, 
                t.noRotation = !+t.shear.toFixed(9) && !t.rotate, t;
            }, /*\
         * Matrix.toTransformString
         [ method ]
         **
         * Returns transform string that represents given matrix
         = (string) transform string
        \*/
            t.toTransformString = function(e) {
                var t = e || this.split();
                return +t.shear.toFixed(9) ? "m" + [ this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5) ] : (t.scalex = +t.scalex.toFixed(4), 
                t.scaley = +t.scaley.toFixed(4), t.rotate = +t.rotate.toFixed(4), (t.dx || t.dy ? "t" + [ +t.dx.toFixed(4), +t.dy.toFixed(4) ] : "") + (t.rotate ? "r" + [ +t.rotate.toFixed(4), 0, 0 ] : "") + (1 != t.scalex || 1 != t.scaley ? "s" + [ t.scalex, t.scaley, 0, 0 ] : ""));
            };
        }(i.prototype), /*\
     * Snap.Matrix
     [ method ]
     **
     * Matrix constructor, extend on your own risk.
     * To create matrices use @Snap.matrix.
    \*/
        e.Matrix = i, /*\
     * Snap.matrix
     [ method ]
     **
     * Utility method
     **
     * Returns a matrix based on the given parameters
     - a (number)
     - b (number)
     - c (number)
     - d (number)
     - e (number)
     - f (number)
     * or
     - svgMatrix (SVGMatrix)
     = (object) @Matrix
    \*/
        e.matrix = function(e, t, n, r, o, a) {
            return new i(e, t, n, r, o, a);
        };
    }), r.plugin(function(e, n, r, o, i) {
        function a(r) {
            return function(o) {
                if (t.stop(), o instanceof i && 1 == o.node.childNodes.length && ("radialGradient" == o.node.firstChild.tagName || "linearGradient" == o.node.firstChild.tagName || "pattern" == o.node.firstChild.tagName) && (o = o.node.firstChild, 
                f(this).appendChild(o), o = p(o)), o instanceof n) if ("radialGradient" == o.type || "linearGradient" == o.type || "pattern" == o.type) {
                    o.node.id || m(o.node, {
                        id: o.id
                    });
                    var a = g(o.node.id);
                } else a = o.attr(r); else if (a = e.color(o), a.error) {
                    var s = e(f(this).ownerSVGElement).gradient(o);
                    s ? (s.node.id || m(s.node, {
                        id: s.id
                    }), a = g(s.node.id)) : a = o;
                } else a = v(a);
                var u = {};
                u[r] = a, m(this.node, u), this.node.style[r] = b;
            };
        }
        function s(e) {
            t.stop(), e == +e && (e += "px"), this.node.style.fontSize = e;
        }
        function u(e) {
            for (var t = [], n = e.childNodes, r = 0, o = n.length; r < o; r++) {
                var i = n[r];
                3 == i.nodeType && t.push(i.nodeValue), "tspan" == i.tagName && (1 == i.childNodes.length && 3 == i.firstChild.nodeType ? t.push(i.firstChild.nodeValue) : t.push(u(i)));
            }
            return t;
        }
        function l() {
            return t.stop(), this.node.style.fontSize;
        }
        var c = e._.make, p = e._.wrap, d = e.is, f = e._.getSomeDefs, h = /^url\((['"]?)([^)]+)\1\)$/, m = e._.$, g = e.url, v = String, y = e._.separator, b = "";
        /*\
     * Snap.deurl
     [ method ]
     **
     * Unwraps path from `"url(<path>)"`.
     - value (string) url path
     = (string) unwrapped path
    \*/
        e.deurl = function(e) {
            var t = String(e).match(h);
            return t ? t[2] : e;
        }, // Attributes event handlers
        t.on("snap.util.attr.mask", function(e) {
            if (e instanceof n || e instanceof i) {
                if (t.stop(), e instanceof i && 1 == e.node.childNodes.length && (e = e.node.firstChild, 
                f(this).appendChild(e), e = p(e)), "mask" == e.type) var r = e; else r = c("mask", f(this)), 
                r.node.appendChild(e.node);
                !r.node.id && m(r.node, {
                    id: r.id
                }), m(this.node, {
                    mask: g(r.id)
                });
            }
        }), function(e) {
            t.on("snap.util.attr.clip", e), t.on("snap.util.attr.clip-path", e), t.on("snap.util.attr.clipPath", e);
        }(function(e) {
            if (e instanceof n || e instanceof i) {
                t.stop();
                for (var r, o = e.node; o; ) {
                    if ("clipPath" === o.nodeName) {
                        r = new n(o);
                        break;
                    }
                    if ("svg" === o.nodeName) {
                        r = void 0;
                        break;
                    }
                    o = o.parentNode;
                }
                r || (r = c("clipPath", f(this)), r.node.appendChild(e.node), !r.node.id && m(r.node, {
                    id: r.id
                })), m(this.node, {
                    "clip-path": g(r.node.id || r.id)
                });
            }
        }), t.on("snap.util.attr.fill", a("fill")), t.on("snap.util.attr.stroke", a("stroke"));
        var x = /^([lr])(?:\(([^)]*)\))?(.*)$/i;
        t.on("snap.util.grad.parse", function(e) {
            function t(e, t) {
                for (var n = (t - s) / (e - u), r = u; r < e; r++) i[r].offset = +(+s + n * (r - u)).toFixed(2);
                u = e, s = t;
            }
            e = v(e);
            var n = e.match(x);
            if (!n) return null;
            var r = n[1], o = n[2], i = n[3];
            o = o.split(/\s*,\s*/).map(function(e) {
                return +e == e ? +e : e;
            }), 1 == o.length && 0 == o[0] && (o = []), i = i.split("-"), i = i.map(function(e) {
                e = e.split(":");
                var t = {
                    color: e[0]
                };
                return e[1] && (t.offset = parseFloat(e[1])), t;
            });
            var a = i.length, s = 0, u = 0;
            a--;
            for (var l = 0; l < a; l++) "offset" in i[l] && t(l, i[l].offset);
            return i[a].offset = i[a].offset || 100, t(a, i[a].offset), {
                type: r,
                params: o,
                stops: i
            };
        }), t.on("snap.util.attr.d", function(n) {
            t.stop(), d(n, "array") && d(n[0], "array") && (n = e.path.toString.call(n)), n = v(n), 
            n.match(/[ruo]/i) && (n = e.path.toAbsolute(n)), m(this.node, {
                d: n
            });
        })(-1), t.on("snap.util.attr.#text", function(e) {
            t.stop(), e = v(e);
            for (var n = o.doc.createTextNode(e); this.node.firstChild; ) this.node.removeChild(this.node.firstChild);
            this.node.appendChild(n);
        })(-1), t.on("snap.util.attr.path", function(e) {
            t.stop(), this.attr({
                d: e
            });
        })(-1), t.on("snap.util.attr.class", function(e) {
            t.stop(), this.node.className.baseVal = e;
        })(-1), t.on("snap.util.attr.viewBox", function(e) {
            var n;
            n = d(e, "object") && "x" in e ? [ e.x, e.y, e.width, e.height ].join(" ") : d(e, "array") ? e.join(" ") : e, 
            m(this.node, {
                viewBox: n
            }), t.stop();
        })(-1), t.on("snap.util.attr.transform", function(e) {
            this.transform(e), t.stop();
        })(-1), t.on("snap.util.attr.r", function(e) {
            "rect" == this.type && (t.stop(), m(this.node, {
                rx: e,
                ry: e
            }));
        })(-1), t.on("snap.util.attr.textpath", function(e) {
            if (t.stop(), "text" == this.type) {
                var r, o, i;
                if (!e && this.textPath) {
                    for (o = this.textPath; o.node.firstChild; ) this.node.appendChild(o.node.firstChild);
                    return o.remove(), void delete this.textPath;
                }
                if (d(e, "string")) {
                    var a = f(this), s = p(a.parentNode).path(e);
                    a.appendChild(s.node), r = s.id, s.attr({
                        id: r
                    });
                } else (e = p(e)) instanceof n && ((r = e.attr("id")) || (r = e.id, e.attr({
                    id: r
                })));
                if (r) if (o = this.textPath, i = this.node, o) o.attr({
                    "xlink:href": "#" + r
                }); else {
                    for (o = m("textPath", {
                        "xlink:href": "#" + r
                    }); i.firstChild; ) o.appendChild(i.firstChild);
                    i.appendChild(o), this.textPath = p(o);
                }
            }
        })(-1), t.on("snap.util.attr.text", function(e) {
            if ("text" == this.type) {
                for (var n = this.node, r = function(e) {
                    var t = m("tspan");
                    if (d(e, "array")) for (var n = 0; n < e.length; n++) t.appendChild(r(e[n])); else t.appendChild(o.doc.createTextNode(e));
                    return t.normalize && t.normalize(), t;
                }; n.firstChild; ) n.removeChild(n.firstChild);
                for (var i = r(e); i.firstChild; ) n.appendChild(i.firstChild);
            }
            t.stop();
        })(-1), t.on("snap.util.attr.fontSize", s)(-1), t.on("snap.util.attr.font-size", s)(-1), 
        t.on("snap.util.getattr.transform", function() {
            return t.stop(), this.transform();
        })(-1), t.on("snap.util.getattr.textpath", function() {
            return t.stop(), this.textPath;
        })(-1), // Markers
        function() {
            function n(n) {
                return function() {
                    t.stop();
                    var r = o.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue("marker-" + n);
                    return "none" == r ? r : e(o.doc.getElementById(r.match(h)[1]));
                };
            }
            function r(e) {
                return function(n) {
                    t.stop();
                    var r = "marker" + e.charAt(0).toUpperCase() + e.substring(1);
                    if ("" == n || !n) return void (this.node.style[r] = "none");
                    if ("marker" == n.type) {
                        var o = n.node.id;
                        return o || m(n.node, {
                            id: n.id
                        }), void (this.node.style[r] = g(o));
                    }
                };
            }
            t.on("snap.util.getattr.marker-end", n("end"))(-1), t.on("snap.util.getattr.markerEnd", n("end"))(-1), 
            t.on("snap.util.getattr.marker-start", n("start"))(-1), t.on("snap.util.getattr.markerStart", n("start"))(-1), 
            t.on("snap.util.getattr.marker-mid", n("mid"))(-1), t.on("snap.util.getattr.markerMid", n("mid"))(-1), 
            t.on("snap.util.attr.marker-end", r("end"))(-1), t.on("snap.util.attr.markerEnd", r("end"))(-1), 
            t.on("snap.util.attr.marker-start", r("start"))(-1), t.on("snap.util.attr.markerStart", r("start"))(-1), 
            t.on("snap.util.attr.marker-mid", r("mid"))(-1), t.on("snap.util.attr.markerMid", r("mid"))(-1);
        }(), t.on("snap.util.getattr.r", function() {
            if ("rect" == this.type && m(this.node, "rx") == m(this.node, "ry")) return t.stop(), 
            m(this.node, "rx");
        })(-1), t.on("snap.util.getattr.text", function() {
            if ("text" == this.type || "tspan" == this.type) {
                t.stop();
                var e = u(this.node);
                return 1 == e.length ? e[0] : e;
            }
        })(-1), t.on("snap.util.getattr.#text", function() {
            return this.node.textContent;
        })(-1), t.on("snap.util.getattr.fill", function(n) {
            if (!n) {
                t.stop();
                var r = t("snap.util.getattr.fill", this, !0).firstDefined();
                return e(e.deurl(r)) || r;
            }
        })(-1), t.on("snap.util.getattr.stroke", function(n) {
            if (!n) {
                t.stop();
                var r = t("snap.util.getattr.stroke", this, !0).firstDefined();
                return e(e.deurl(r)) || r;
            }
        })(-1), t.on("snap.util.getattr.viewBox", function() {
            t.stop();
            var n = m(this.node, "viewBox");
            return n ? (n = n.split(y), e._.box(+n[0], +n[1], +n[2], +n[3])) : void 0;
        })(-1), t.on("snap.util.getattr.points", function() {
            var e = m(this.node, "points");
            return t.stop(), e ? e.split(y) : void 0;
        })(-1), t.on("snap.util.getattr.path", function() {
            var e = m(this.node, "d");
            return t.stop(), e;
        })(-1), t.on("snap.util.getattr.class", function() {
            return this.node.className.baseVal;
        })(-1), t.on("snap.util.getattr.fontSize", l)(-1), t.on("snap.util.getattr.font-size", l)(-1);
    }), r.plugin(function(e, t, n, r, o) {
        var i = /\S+/g, a = String, s = t.prototype;
        /*\
     * Element.addClass
     [ method ]
     **
     * Adds given class name or list of class names to the element.
     - value (string) class name or space separated list of class names
     **
     = (Element) original element.
    \*/
        s.addClass = function(e) {
            var t, n, r, o = a(e || "").match(i) || [], s = this.node, u = s.className.baseVal, l = u.match(i) || [];
            if (o.length) {
                for (t = 0; n = o[t++]; ) ~l.indexOf(n) || l.push(n);
                r = l.join(" "), u != r && (s.className.baseVal = r);
            }
            return this;
        }, /*\
     * Element.removeClass
     [ method ]
     **
     * Removes given class name or list of class names from the element.
     - value (string) class name or space separated list of class names
     **
     = (Element) original element.
    \*/
        s.removeClass = function(e) {
            var t, n, r, o, s = a(e || "").match(i) || [], u = this.node, l = u.className.baseVal, c = l.match(i) || [];
            if (c.length) {
                for (t = 0; r = s[t++]; ) ~(n = c.indexOf(r)) && c.splice(n, 1);
                o = c.join(" "), l != o && (u.className.baseVal = o);
            }
            return this;
        }, /*\
     * Element.hasClass
     [ method ]
     **
     * Checks if the element has a given class name in the list of class names applied to it.
     - value (string) class name
     **
     = (boolean) `true` if the element has given class
    \*/
        s.hasClass = function(e) {
            return !!~(this.node.className.baseVal.match(i) || []).indexOf(e);
        }, /*\
     * Element.toggleClass
     [ method ]
     **
     * Add or remove one or more classes from the element, depending on either
     * the class’s presence or the value of the `flag` argument.
     - value (string) class name or space separated list of class names
     - flag (boolean) value to determine whether the class should be added or removed
     **
     = (Element) original element.
    \*/
        s.toggleClass = function(e, t) {
            if (null != t) return t ? this.addClass(e) : this.removeClass(e);
            var n, r, o, a, s = (e || "").match(i) || [], u = this.node, l = u.className.baseVal, c = l.match(i) || [];
            for (n = 0; o = s[n++]; ) r = c.indexOf(o), ~r ? c.splice(r, 1) : c.push(o);
            return a = c.join(" "), l != a && (u.className.baseVal = a), this;
        };
    }), r.plugin(function(e, n, r, o, i) {
        function a(e) {
            return e;
        }
        function s(e) {
            return function(t) {
                return +t.toFixed(3) + e;
            };
        }
        var u = {
            "+": function(e, t) {
                return e + t;
            },
            "-": function(e, t) {
                return e - t;
            },
            "/": function(e, t) {
                return e / t;
            },
            "*": function(e, t) {
                return e * t;
            }
        }, l = String, c = /[a-z]+$/i, p = /^\s*([+\-\/*])\s*=\s*([\d.eE+\-]+)\s*([^\d\s]+)?\s*$/;
        t.on("snap.util.attr", function(e) {
            var n = l(e).match(p);
            if (n) {
                var r = t.nt(), o = r.substring(r.lastIndexOf(".") + 1), i = this.attr(o), a = {};
                t.stop();
                var s = n[3] || "", d = i.match(c), f = u[n[1]];
                if (d && d == s ? e = f(parseFloat(i), +n[2]) : (i = this.asPX(o), e = f(this.asPX(o), this.asPX(o, n[2] + s))), 
                isNaN(i) || isNaN(e)) return;
                a[o] = e, this.attr(a);
            }
        })(-10), t.on("snap.util.equal", function(e, n) {
            var r = l(this.attr(e) || ""), o = l(n).match(p);
            if (o) {
                t.stop();
                var i = o[3] || "", d = r.match(c), f = u[o[1]];
                return d && d == i ? {
                    from: parseFloat(r),
                    to: f(parseFloat(r), +o[2]),
                    f: s(d)
                } : (r = this.asPX(e), {
                    from: r,
                    to: f(r, this.asPX(e, o[2] + i)),
                    f: a
                });
            }
        })(-10);
    }), r.plugin(function(n, r, o, i, a) {
        var s = o.prototype, u = n.is;
        /*\
     * Paper.rect
     [ method ]
     *
     * Draws a rectangle
     **
     - x (number) x coordinate of the top left corner
     - y (number) y coordinate of the top left corner
     - width (number) width
     - height (number) height
     - rx (number) #optional horizontal radius for rounded corners, default is 0
     - ry (number) #optional vertical radius for rounded corners, default is rx or 0
     = (object) the `rect` element
     **
     > Usage
     | // regular rectangle
     | var c = paper.rect(10, 10, 50, 50);
     | // rectangle with rounded corners
     | var c = paper.rect(40, 40, 50, 50, 10);
    \*/
        s.rect = function(e, t, n, r, o, i) {
            var a;
            return null == i && (i = o), u(e, "object") && "[object Object]" == e ? a = e : null != e && (a = {
                x: e,
                y: t,
                width: n,
                height: r
            }, null != o && (a.rx = o, a.ry = i)), this.el("rect", a);
        }, /*\
     * Paper.circle
     [ method ]
     **
     * Draws a circle
     **
     - x (number) x coordinate of the centre
     - y (number) y coordinate of the centre
     - r (number) radius
     = (object) the `circle` element
     **
     > Usage
     | var c = paper.circle(50, 50, 40);
    \*/
        s.circle = function(e, t, n) {
            var r;
            return u(e, "object") && "[object Object]" == e ? r = e : null != e && (r = {
                cx: e,
                cy: t,
                r: n
            }), this.el("circle", r);
        };
        var l = function() {
            function e() {
                this.parentNode.removeChild(this);
            }
            return function(t, n) {
                var r = i.doc.createElement("img"), o = i.doc.body;
                r.style.cssText = "position:absolute;left:-9999em;top:-9999em", r.onload = function() {
                    n.call(r), r.onload = r.onerror = null, o.removeChild(r);
                }, r.onerror = e, o.appendChild(r), r.src = t;
            };
        }();
        /*\
     * Paper.image
     [ method ]
     **
     * Places an image on the surface
     **
     - src (string) URI of the source image
     - x (number) x offset position
     - y (number) y offset position
     - width (number) width of the image
     - height (number) height of the image
     = (object) the `image` element
     * or
     = (object) Snap element object with type `image`
     **
     > Usage
     | var c = paper.image("apple.png", 10, 10, 80, 80);
    \*/
        s.image = function(e, t, r, o, i) {
            var a = this.el("image");
            if (u(e, "object") && "src" in e) a.attr(e); else if (null != e) {
                var s = {
                    "xlink:href": e,
                    preserveAspectRatio: "none"
                };
                null != t && null != r && (s.x = t, s.y = r), null != o && null != i ? (s.width = o, 
                s.height = i) : l(e, function() {
                    n._.$(a.node, {
                        width: this.offsetWidth,
                        height: this.offsetHeight
                    });
                }), n._.$(a.node, s);
            }
            return a;
        }, /*\
     * Paper.ellipse
     [ method ]
     **
     * Draws an ellipse
     **
     - x (number) x coordinate of the centre
     - y (number) y coordinate of the centre
     - rx (number) horizontal radius
     - ry (number) vertical radius
     = (object) the `ellipse` element
     **
     > Usage
     | var c = paper.ellipse(50, 50, 40, 20);
    \*/
        s.ellipse = function(e, t, n, r) {
            var o;
            return u(e, "object") && "[object Object]" == e ? o = e : null != e && (o = {
                cx: e,
                cy: t,
                rx: n,
                ry: r
            }), this.el("ellipse", o);
        }, // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.
        /*\
     * Paper.path
     [ method ]
     **
     * Creates a `<path>` element using the given string as the path's definition
     - pathString (string) #optional path string in SVG format
     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:
     | "M10,20L30,40"
     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.
     *
     # <p>Here is short list of commands available, for more details see <a href="http://www.w3.org/TR/SVG/paths.html#PathData" title="Details of a path's data attribute's format are described in the SVG specification.">SVG path string format</a> or <a href="https://developer.mozilla.org/en/SVG/Tutorial/Paths">article about path strings at MDN</a>.</p>
     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>
     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>
     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>
     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>
     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>
     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>
     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>
     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>
     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>
     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>
     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>
     # <tr><td>R</td><td><a href="http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>
     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.
     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.
     > Usage
     | var c = paper.path("M10 10L90 90");
     | // draw a diagonal line:
     | // move to 10,10, line to 90,90
    \*/
        s.path = function(e) {
            var t;
            return u(e, "object") && !u(e, "array") ? t = e : e && (t = {
                d: e
            }), this.el("path", t);
        }, /*\
     * Paper.g
     [ method ]
     **
     * Creates a group element
     **
     - varargs (…) #optional elements to nest within the group
     = (object) the `g` element
     **
     > Usage
     | var c1 = paper.circle(),
     |     c2 = paper.rect(),
     |     g = paper.g(c2, c1); // note that the order of elements is different
     * or
     | var c1 = paper.circle(),
     |     c2 = paper.rect(),
     |     g = paper.g();
     | g.add(c2, c1);
    \*/
        /*\
     * Paper.group
     [ method ]
     **
     * See @Paper.g
    \*/
        s.group = s.g = function(e) {
            var t = this.el("g");
            return 1 == arguments.length && e && !e.type ? t.attr(e) : arguments.length && t.add(Array.prototype.slice.call(arguments, 0)), 
            t;
        }, /*\
     * Paper.svg
     [ method ]
     **
     * Creates a nested SVG element.
     - x (number) @optional X of the element
     - y (number) @optional Y of the element
     - width (number) @optional width of the element
     - height (number) @optional height of the element
     - vbx (number) @optional viewbox X
     - vby (number) @optional viewbox Y
     - vbw (number) @optional viewbox width
     - vbh (number) @optional viewbox height
     **
     = (object) the `svg` element
     **
    \*/
        s.svg = function(e, t, n, r, o, i, a, s) {
            var l = {};
            return u(e, "object") && null == t ? l = e : (null != e && (l.x = e), null != t && (l.y = t), 
            null != n && (l.width = n), null != r && (l.height = r), null != o && null != i && null != a && null != s && (l.viewBox = [ o, i, a, s ])), 
            this.el("svg", l);
        }, /*\
     * Paper.mask
     [ method ]
     **
     * Equivalent in behaviour to @Paper.g, except it’s a mask.
     **
     = (object) the `mask` element
     **
    \*/
        s.mask = function(e) {
            var t = this.el("mask");
            return 1 == arguments.length && e && !e.type ? t.attr(e) : arguments.length && t.add(Array.prototype.slice.call(arguments, 0)), 
            t;
        }, /*\
     * Paper.ptrn
     [ method ]
     **
     * Equivalent in behaviour to @Paper.g, except it’s a pattern.
     - x (number) @optional X of the element
     - y (number) @optional Y of the element
     - width (number) @optional width of the element
     - height (number) @optional height of the element
     - vbx (number) @optional viewbox X
     - vby (number) @optional viewbox Y
     - vbw (number) @optional viewbox width
     - vbh (number) @optional viewbox height
     **
     = (object) the `pattern` element
     **
    \*/
        s.ptrn = function(e, t, n, r, o, i, a, s) {
            if (u(e, "object")) var l = e; else l = {
                patternUnits: "userSpaceOnUse"
            }, e && (l.x = e), t && (l.y = t), null != n && (l.width = n), null != r && (l.height = r), 
            l.viewBox = null != o && null != i && null != a && null != s ? [ o, i, a, s ] : [ e || 0, t || 0, n || 0, r || 0 ];
            return this.el("pattern", l);
        }, /*\
     * Paper.use
     [ method ]
     **
     * Creates a <use> element.
     - id (string) @optional id of element to link
     * or
     - id (Element) @optional element to link
     **
     = (object) the `use` element
     **
    \*/
        s.use = function(e) {
            return null != e ? (e instanceof r && (e.attr("id") || e.attr({
                id: n._.id(e)
            }), e = e.attr("id")), "#" == String(e).charAt() && (e = e.substring(1)), this.el("use", {
                "xlink:href": "#" + e
            })) : r.prototype.use.call(this);
        }, /*\
     * Paper.symbol
     [ method ]
     **
     * Creates a <symbol> element.
     - vbx (number) @optional viewbox X
     - vby (number) @optional viewbox Y
     - vbw (number) @optional viewbox width
     - vbh (number) @optional viewbox height
     = (object) the `symbol` element
     **
    \*/
        s.symbol = function(e, t, n, r) {
            var o = {};
            return null != e && null != t && null != n && null != r && (o.viewBox = [ e, t, n, r ]), 
            this.el("symbol", o);
        }, /*\
     * Paper.text
     [ method ]
     **
     * Draws a text string
     **
     - x (number) x coordinate position
     - y (number) y coordinate position
     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements
     = (object) the `text` element
     **
     > Usage
     | var t1 = paper.text(50, 50, "Snap");
     | var t2 = paper.text(50, 50, ["S","n","a","p"]);
     | // Text path usage
     | t1.attr({textpath: "M10,10L100,100"});
     | // or
     | var pth = paper.path("M10,10L100,100");
     | t1.attr({textpath: pth});
    \*/
        s.text = function(e, t, n) {
            var r = {};
            return u(e, "object") ? r = e : null != e && (r = {
                x: e,
                y: t,
                text: n || ""
            }), this.el("text", r);
        }, /*\
     * Paper.line
     [ method ]
     **
     * Draws a line
     **
     - x1 (number) x coordinate position of the start
     - y1 (number) y coordinate position of the start
     - x2 (number) x coordinate position of the end
     - y2 (number) y coordinate position of the end
     = (object) the `line` element
     **
     > Usage
     | var t1 = paper.line(50, 50, 100, 100);
    \*/
        s.line = function(e, t, n, r) {
            var o = {};
            return u(e, "object") ? o = e : null != e && (o = {
                x1: e,
                x2: n,
                y1: t,
                y2: r
            }), this.el("line", o);
        }, /*\
     * Paper.polyline
     [ method ]
     **
     * Draws a polyline
     **
     - points (array) array of points
     * or
     - varargs (…) points
     = (object) the `polyline` element
     **
     > Usage
     | var p1 = paper.polyline([10, 10, 100, 100]);
     | var p2 = paper.polyline(10, 10, 100, 100);
    \*/
        s.polyline = function(e) {
            arguments.length > 1 && (e = Array.prototype.slice.call(arguments, 0));
            var t = {};
            return u(e, "object") && !u(e, "array") ? t = e : null != e && (t = {
                points: e
            }), this.el("polyline", t);
        }, /*\
     * Paper.polygon
     [ method ]
     **
     * Draws a polygon. See @Paper.polyline
    \*/
        s.polygon = function(e) {
            arguments.length > 1 && (e = Array.prototype.slice.call(arguments, 0));
            var t = {};
            return u(e, "object") && !u(e, "array") ? t = e : null != e && (t = {
                points: e
            }), this.el("polygon", t);
        }, // gradients
        function() {
            // gradients' helpers
            /*\
         * Element.stops
         [ method ]
         **
         * Only for gradients!
         * Returns array of gradient stops elements.
         = (array) the stops array.
        \*/
            function r() {
                return this.selectAll("stop");
            }
            /*\
         * Element.addStop
         [ method ]
         **
         * Only for gradients!
         * Adds another stop to the gradient.
         - color (string) stops color
         - offset (number) stops offset 0..100
         = (object) gradient element
        \*/
            function o(e, t) {
                var r = p("stop"), o = {
                    offset: +t + "%"
                };
                e = n.color(e), o["stop-color"] = e.hex, e.opacity < 1 && (o["stop-opacity"] = e.opacity), 
                p(r, o);
                for (var i, a = this.stops(), s = 0; s < a.length; s++) {
                    if (parseFloat(a[s].attr("offset")) > t) {
                        this.node.insertBefore(r, a[s].node), i = !0;
                        break;
                    }
                }
                return i || this.node.appendChild(r), this;
            }
            function i() {
                if ("linearGradient" == this.type) {
                    var e = p(this.node, "x1") || 0, t = p(this.node, "x2") || 1, r = p(this.node, "y1") || 0, o = p(this.node, "y2") || 0;
                    return n._.box(e, r, math.abs(t - e), math.abs(o - r));
                }
                var i = this.node.cx || .5, a = this.node.cy || .5, s = this.node.r || 0;
                return n._.box(i - s, a - s, 2 * s, 2 * s);
            }
            /*\
         * Element.setStops
         [ method ]
         **
         * Only for gradients!
         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient
         - str (string) gradient descriptor part after `()`.
         = (object) gradient element
         | var g = paper.gradient("l(0, 0, 1, 1)#000-#f00-#fff");
         | g.setStops("#fff-#000-#f00-#fc0");
        \*/
            function a(e) {
                var r = e, o = this.stops();
                if ("string" == typeof e && (r = t("snap.util.grad.parse", null, "l(0,0,0,1)" + e).firstDefined().stops), 
                n.is(r, "array")) {
                    for (var i = 0; i < o.length; i++) if (r[i]) {
                        var a = n.color(r[i].color), s = {
                            offset: r[i].offset + "%"
                        };
                        s["stop-color"] = a.hex, a.opacity < 1 && (s["stop-opacity"] = a.opacity), o[i].attr(s);
                    } else o[i].remove();
                    for (i = o.length; i < r.length; i++) this.addStop(r[i].color, r[i].offset);
                    return this;
                }
            }
            function u(e, n) {
                var r, o = t("snap.util.grad.parse", null, n).firstDefined();
                if (!o) return null;
                o.params.unshift(e), r = "l" == o.type.toLowerCase() ? l.apply(0, o.params) : c.apply(0, o.params), 
                o.type != o.type.toLowerCase() && p(r.node, {
                    gradientUnits: "userSpaceOnUse"
                });
                for (var i = o.stops, a = i.length, s = 0; s < a; s++) {
                    var u = i[s];
                    r.addStop(u.color, u.offset);
                }
                return r;
            }
            function l(e, t, s, u, l) {
                var c = n._.make("linearGradient", e);
                return c.stops = r, c.addStop = o, c.getBBox = i, c.setStops = a, null != t && p(c.node, {
                    x1: t,
                    y1: s,
                    x2: u,
                    y2: l
                }), c;
            }
            function c(e, t, a, s, u, l) {
                var c = n._.make("radialGradient", e);
                return c.stops = r, c.addStop = o, c.getBBox = i, null != t && p(c.node, {
                    cx: t,
                    cy: a,
                    r: s
                }), null != u && null != l && p(c.node, {
                    fx: u,
                    fy: l
                }), c;
            }
            var p = n._.$;
            /*\
         * Paper.gradient
         [ method ]
         **
         * Creates a gradient element
         **
         - gradient (string) gradient descriptor
         > Gradient Descriptor
         * The gradient descriptor is an expression formatted as
         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be
         * either linear or radial.  The uppercase `L` or `R` letters
         * indicate absolute coordinates offset from the SVG surface.
         * Lowercase `l` or `r` letters indicate coordinates
         * calculated relative to the element to which the gradient is
         * applied.  Coordinates specify a linear gradient vector as
         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,
         * `r` and optional `fx`, `fy` specifying a focal point away
         * from the center of the circle. Specify `<colors>` as a list
         * of dash-separated CSS color values.  Each color may be
         * followed by a custom offset value, separated with a colon
         * character.
         > Examples
         * Linear gradient, relative from top-left corner to bottom-right
         * corner, from black through red to white:
         | var g = paper.gradient("l(0, 0, 1, 1)#000-#f00-#fff");
         * Linear gradient, absolute from (0, 0) to (100, 100), from black
         * through red at 25% to white:
         | var g = paper.gradient("L(0, 0, 100, 100)#000-#f00:25-#fff");
         * Radial gradient, relative from the center of the element with radius
         * half the width, from black to white:
         | var g = paper.gradient("r(0.5, 0.5, 0.5)#000-#fff");
         * To apply the gradient:
         | paper.circle(50, 50, 40).attr({
         |     fill: g
         | });
         = (object) the `gradient` element
        \*/
            s.gradient = function(e) {
                return u(this.defs, e);
            }, s.gradientLinear = function(e, t, n, r) {
                return l(this.defs, e, t, n, r);
            }, s.gradientRadial = function(e, t, n, r, o) {
                return c(this.defs, e, t, n, r, o);
            }, /*\
         * Paper.toString
         [ method ]
         **
         * Returns SVG code for the @Paper
         = (string) SVG code for the @Paper
        \*/
            s.toString = function() {
                var e, t = this.node.ownerDocument, r = t.createDocumentFragment(), o = t.createElement("div"), i = this.node.cloneNode(!0);
                return r.appendChild(o), o.appendChild(i), n._.$(i, {
                    xmlns: "http://www.w3.org/2000/svg"
                }), e = o.innerHTML, r.removeChild(r.firstChild), e;
            }, /*\
         * Paper.toDataURL
         [ method ]
         **
         * Returns SVG code for the @Paper as Data URI string.
         = (string) Data URI string
        \*/
            s.toDataURL = function() {
                if (e && e.btoa) return "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(this)));
            }, /*\
         * Paper.clear
         [ method ]
         **
         * Removes all child nodes of the paper, except <defs>.
        \*/
            s.clear = function() {
                for (var e, t = this.node.firstChild; t; ) e = t.nextSibling, "defs" != t.tagName ? t.parentNode.removeChild(t) : s.clear.call({
                    node: t
                }), t = e;
            };
        }();
    }), r.plugin(function(e, t, n, r) {
        function o(e) {
            var t = o.ps = o.ps || {};
            return t[e] ? t[e].sleep = 100 : t[e] = {
                sleep: 100
            }, setTimeout(function() {
                for (var n in t) t[L](n) && n != e && !--t[n].sleep && delete t[n];
            }), t[e];
        }
        function i(e, t, n, r) {
            return null == e && (e = t = n = r = 0), null == t && (t = e.y, n = e.width, r = e.height, 
            e = e.x), {
                x: e,
                y: t,
                width: n,
                w: n,
                height: r,
                h: r,
                x2: e + n,
                y2: t + r,
                cx: e + n / 2,
                cy: t + r / 2,
                r1: q.min(n, r) / 2,
                r2: q.max(n, r) / 2,
                r0: q.sqrt(n * n + r * r) / 2,
                path: _(e, t, n, r),
                vb: [ e, t, n, r ].join(" ")
            };
        }
        function a() {
            return this.join(",").replace(U, "$1");
        }
        function s(e) {
            var t = j(e);
            return t.toString = a, t;
        }
        function u(e, t, n, r, o, i, a, s, u) {
            return null == u ? m(e, t, n, r, o, i, a, s) : c(e, t, n, r, o, i, a, s, g(e, t, n, r, o, i, a, s, u));
        }
        function l(n, r) {
            function o(e) {
                return +(+e).toFixed(3);
            }
            return e._.cacher(function(e, i, a) {
                e instanceof t && (e = e.attr("d")), e = A(e);
                for (var s, l, p, d, f, h = "", m = {}, g = 0, v = 0, y = e.length; v < y; v++) {
                    if (p = e[v], "M" == p[0]) s = +p[1], l = +p[2]; else {
                        if (d = u(s, l, p[1], p[2], p[3], p[4], p[5], p[6]), g + d > i) {
                            if (r && !m.start) {
                                if (f = u(s, l, p[1], p[2], p[3], p[4], p[5], p[6], i - g), h += [ "C" + o(f.start.x), o(f.start.y), o(f.m.x), o(f.m.y), o(f.x), o(f.y) ], 
                                a) return h;
                                m.start = h, h = [ "M" + o(f.x), o(f.y) + "C" + o(f.n.x), o(f.n.y), o(f.end.x), o(f.end.y), o(p[5]), o(p[6]) ].join(), 
                                g += d, s = +p[5], l = +p[6];
                                continue;
                            }
                            if (!n && !r) return f = u(s, l, p[1], p[2], p[3], p[4], p[5], p[6], i - g);
                        }
                        g += d, s = +p[5], l = +p[6];
                    }
                    h += p.shift() + p;
                }
                return m.end = h, f = n ? g : r ? m : c(s, l, p[0], p[1], p[2], p[3], p[4], p[5], 1);
            }, null, e._.clone);
        }
        function c(e, t, n, r, o, i, a, s, u) {
            var l = 1 - u, c = z(l, 3), p = z(l, 2), d = u * u, f = d * u, h = c * e + 3 * p * u * n + 3 * l * u * u * o + f * a, m = c * t + 3 * p * u * r + 3 * l * u * u * i + f * s, g = e + 2 * u * (n - e) + d * (o - 2 * n + e), v = t + 2 * u * (r - t) + d * (i - 2 * r + t), y = n + 2 * u * (o - n) + d * (a - 2 * o + n), b = r + 2 * u * (i - r) + d * (s - 2 * i + r);
            // (mx > nx || my < ny) && (alpha += 180);
            return {
                x: h,
                y: m,
                m: {
                    x: g,
                    y: v
                },
                n: {
                    x: y,
                    y: b
                },
                start: {
                    x: l * e + u * n,
                    y: l * t + u * r
                },
                end: {
                    x: l * o + u * a,
                    y: l * i + u * s
                },
                alpha: 90 - 180 * q.atan2(g - y, v - b) / H
            };
        }
        function p(t, n, r, o, a, s, u, l) {
            e.is(t, "array") || (t = [ t, n, r, o, a, s, u, l ]);
            var c = R.apply(null, t);
            return i(c.min.x, c.min.y, c.max.x - c.min.x, c.max.y - c.min.y);
        }
        function d(e, t, n) {
            return t >= e.x && t <= e.x + e.width && n >= e.y && n <= e.y + e.height;
        }
        function f(e, t) {
            return e = i(e), t = i(t), d(t, e.x, e.y) || d(t, e.x2, e.y) || d(t, e.x, e.y2) || d(t, e.x2, e.y2) || d(e, t.x, t.y) || d(e, t.x2, t.y) || d(e, t.x, t.y2) || d(e, t.x2, t.y2) || (e.x < t.x2 && e.x > t.x || t.x < e.x2 && t.x > e.x) && (e.y < t.y2 && e.y > t.y || t.y < e.y2 && t.y > e.y);
        }
        function h(e, t, n, r, o) {
            return e * (e * (-3 * t + 9 * n - 9 * r + 3 * o) + 6 * t - 12 * n + 6 * r) - 3 * t + 3 * n;
        }
        function m(e, t, n, r, o, i, a, s, u) {
            null == u && (u = 1), u = u > 1 ? 1 : u < 0 ? 0 : u;
            for (var l = u / 2, c = [ -.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816 ], p = [ .2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472 ], d = 0, f = 0; f < 12; f++) {
                var m = l * c[f] + l, g = h(m, e, n, o, a), v = h(m, t, r, i, s), y = g * g + v * v;
                d += p[f] * q.sqrt(y);
            }
            return l * d;
        }
        function g(e, t, n, r, o, i, a, s, u) {
            if (!(u < 0 || m(e, t, n, r, o, i, a, s) < u)) {
                var l, c = .5, p = 1 - c;
                for (l = m(e, t, n, r, o, i, a, s, p); Y(l - u) > .01; ) c /= 2, p += (l < u ? 1 : -1) * c, 
                l = m(e, t, n, r, o, i, a, s, p);
                return p;
            }
        }
        function v(e, t, n, r, o, i, a, s) {
            if (!(V(e, n) < W(o, a) || W(e, n) > V(o, a) || V(t, r) < W(i, s) || W(t, r) > V(i, s))) {
                var u = (e * r - t * n) * (o - a) - (e - n) * (o * s - i * a), l = (e * r - t * n) * (i - s) - (t - r) * (o * s - i * a), c = (e - n) * (i - s) - (t - r) * (o - a);
                if (c) {
                    var p = u / c, d = l / c, f = +p.toFixed(2), h = +d.toFixed(2);
                    if (!(f < +W(e, n).toFixed(2) || f > +V(e, n).toFixed(2) || f < +W(o, a).toFixed(2) || f > +V(o, a).toFixed(2) || h < +W(t, r).toFixed(2) || h > +V(t, r).toFixed(2) || h < +W(i, s).toFixed(2) || h > +V(i, s).toFixed(2))) return {
                        x: p,
                        y: d
                    };
                }
            }
        }
        function y(e, t, n) {
            if (!f(p(e), p(t))) return n ? 0 : [];
            for (var r = m.apply(0, e), o = m.apply(0, t), i = ~~(r / 8), a = ~~(o / 8), s = [], u = [], l = {}, d = n ? 0 : [], h = 0; h < i + 1; h++) {
                var g = c.apply(0, e.concat(h / i));
                s.push({
                    x: g.x,
                    y: g.y,
                    t: h / i
                });
            }
            for (h = 0; h < a + 1; h++) g = c.apply(0, t.concat(h / a)), u.push({
                x: g.x,
                y: g.y,
                t: h / a
            });
            for (h = 0; h < i; h++) for (var y = 0; y < a; y++) {
                var b = s[h], x = s[h + 1], C = u[y], w = u[y + 1], E = Y(x.x - b.x) < .001 ? "y" : "x", _ = Y(w.x - C.x) < .001 ? "y" : "x", k = v(b.x, b.y, x.x, x.y, C.x, C.y, w.x, w.y);
                if (k) {
                    if (l[k.x.toFixed(4)] == k.y.toFixed(4)) continue;
                    l[k.x.toFixed(4)] = k.y.toFixed(4);
                    var T = b.t + Y((k[E] - b[E]) / (x[E] - b[E])) * (x.t - b.t), S = C.t + Y((k[_] - C[_]) / (w[_] - C[_])) * (w.t - C.t);
                    T >= 0 && T <= 1 && S >= 0 && S <= 1 && (n ? d++ : d.push({
                        x: k.x,
                        y: k.y,
                        t1: T,
                        t2: S
                    }));
                }
            }
            return d;
        }
        function b(e, t) {
            return C(e, t);
        }
        function x(e, t) {
            return C(e, t, 1);
        }
        function C(e, t, n) {
            e = A(e), t = A(t);
            for (var r, o, i, a, s, u, l, c, p, d, f = n ? 0 : [], h = 0, m = e.length; h < m; h++) {
                var g = e[h];
                if ("M" == g[0]) r = s = g[1], o = u = g[2]; else {
                    "C" == g[0] ? (p = [ r, o ].concat(g.slice(1)), r = p[6], o = p[7]) : (p = [ r, o, r, o, s, u, s, u ], 
                    r = s, o = u);
                    for (var v = 0, b = t.length; v < b; v++) {
                        var x = t[v];
                        if ("M" == x[0]) i = l = x[1], a = c = x[2]; else {
                            "C" == x[0] ? (d = [ i, a ].concat(x.slice(1)), i = d[6], a = d[7]) : (d = [ i, a, i, a, l, c, l, c ], 
                            i = l, a = c);
                            var C = y(p, d, n);
                            if (n) f += C; else {
                                for (var w = 0, E = C.length; w < E; w++) C[w].segment1 = h, C[w].segment2 = v, 
                                C[w].bez1 = p, C[w].bez2 = d;
                                f = f.concat(C);
                            }
                        }
                    }
                }
            }
            return f;
        }
        function w(e, t, n) {
            var r = E(e);
            return d(r, t, n) && C(e, [ [ "M", t, n ], [ "H", r.x2 + 10 ] ], 1) % 2 == 1;
        }
        function E(e) {
            var t = o(e);
            if (t.bbox) return j(t.bbox);
            if (!e) return i();
            e = A(e);
            for (var n, r = 0, a = 0, s = [], u = [], l = 0, c = e.length; l < c; l++) if (n = e[l], 
            "M" == n[0]) r = n[1], a = n[2], s.push(r), u.push(a); else {
                var p = R(r, a, n[1], n[2], n[3], n[4], n[5], n[6]);
                s = s.concat(p.min.x, p.max.x), u = u.concat(p.min.y, p.max.y), r = n[5], a = n[6];
            }
            var d = W.apply(0, s), f = W.apply(0, u), h = V.apply(0, s), m = V.apply(0, u), g = i(d, f, h - d, m - f);
            return t.bbox = j(g), g;
        }
        function _(e, t, n, r, o) {
            if (o) return [ [ "M", +e + +o, t ], [ "l", n - 2 * o, 0 ], [ "a", o, o, 0, 0, 1, o, o ], [ "l", 0, r - 2 * o ], [ "a", o, o, 0, 0, 1, -o, o ], [ "l", 2 * o - n, 0 ], [ "a", o, o, 0, 0, 1, -o, -o ], [ "l", 0, 2 * o - r ], [ "a", o, o, 0, 0, 1, o, -o ], [ "z" ] ];
            var i = [ [ "M", e, t ], [ "l", n, 0 ], [ "l", 0, r ], [ "l", -n, 0 ], [ "z" ] ];
            return i.toString = a, i;
        }
        function k(e, t, n, r, o) {
            if (null == o && null == r && (r = n), e = +e, t = +t, n = +n, r = +r, null != o) var i = Math.PI / 180, s = e + n * Math.cos(-r * i), u = e + n * Math.cos(-o * i), l = t + n * Math.sin(-r * i), c = t + n * Math.sin(-o * i), p = [ [ "M", s, l ], [ "A", n, n, 0, +(o - r > 180), 0, u, c ] ]; else p = [ [ "M", e, t ], [ "m", 0, -r ], [ "a", n, r, 0, 1, 1, 0, 2 * r ], [ "a", n, r, 0, 1, 1, 0, -2 * r ], [ "z" ] ];
            return p.toString = a, p;
        }
        function T(t) {
            var n = o(t), r = String.prototype.toLowerCase;
            if (n.rel) return s(n.rel);
            e.is(t, "array") && e.is(t && t[0], "array") || (t = e.parsePathString(t));
            var i = [], u = 0, l = 0, c = 0, p = 0, d = 0;
            "M" == t[0][0] && (u = t[0][1], l = t[0][2], c = u, p = l, d++, i.push([ "M", u, l ]));
            for (var f = d, h = t.length; f < h; f++) {
                var m = i[f] = [], g = t[f];
                if (g[0] != r.call(g[0])) switch (m[0] = r.call(g[0]), m[0]) {
                  case "a":
                    m[1] = g[1], m[2] = g[2], m[3] = g[3], m[4] = g[4], m[5] = g[5], m[6] = +(g[6] - u).toFixed(3), 
                    m[7] = +(g[7] - l).toFixed(3);
                    break;

                  case "v":
                    m[1] = +(g[1] - l).toFixed(3);
                    break;

                  case "m":
                    c = g[1], p = g[2];

                  default:
                    for (var v = 1, y = g.length; v < y; v++) m[v] = +(g[v] - (v % 2 ? u : l)).toFixed(3);
                } else {
                    m = i[f] = [], "m" == g[0] && (c = g[1] + u, p = g[2] + l);
                    for (var b = 0, x = g.length; b < x; b++) i[f][b] = g[b];
                }
                var C = i[f].length;
                switch (i[f][0]) {
                  case "z":
                    u = c, l = p;
                    break;

                  case "h":
                    u += +i[f][C - 1];
                    break;

                  case "v":
                    l += +i[f][C - 1];
                    break;

                  default:
                    u += +i[f][C - 2], l += +i[f][C - 1];
                }
            }
            return i.toString = a, n.rel = s(i), i;
        }
        function S(t) {
            var n = o(t);
            if (n.abs) return s(n.abs);
            if (M(t, "array") && M(t && t[0], "array") || (// rough assumption
            t = e.parsePathString(t)), !t || !t.length) return [ [ "M", 0, 0 ] ];
            var r, i = [], u = 0, l = 0, c = 0, p = 0, d = 0;
            "M" == t[0][0] && (u = +t[0][1], l = +t[0][2], c = u, p = l, d++, i[0] = [ "M", u, l ]);
            for (var f, h, m = 3 == t.length && "M" == t[0][0] && "R" == t[1][0].toUpperCase() && "Z" == t[2][0].toUpperCase(), g = d, v = t.length; g < v; g++) {
                if (i.push(f = []), h = t[g], (r = h[0]) != r.toUpperCase()) switch (f[0] = r.toUpperCase(), 
                f[0]) {
                  case "A":
                    f[1] = h[1], f[2] = h[2], f[3] = h[3], f[4] = h[4], f[5] = h[5], f[6] = +h[6] + u, 
                    f[7] = +h[7] + l;
                    break;

                  case "V":
                    f[1] = +h[1] + l;
                    break;

                  case "H":
                    f[1] = +h[1] + u;
                    break;

                  case "R":
                    for (var y = [ u, l ].concat(h.slice(1)), b = 2, x = y.length; b < x; b++) y[b] = +y[b] + u, 
                    y[++b] = +y[b] + l;
                    i.pop(), i = i.concat(O(y, m));
                    break;

                  case "O":
                    i.pop(), y = k(u, l, h[1], h[2]), y.push(y[0]), i = i.concat(y);
                    break;

                  case "U":
                    i.pop(), i = i.concat(k(u, l, h[1], h[2], h[3])), f = [ "U" ].concat(i[i.length - 1].slice(-2));
                    break;

                  case "M":
                    c = +h[1] + u, p = +h[2] + l;

                  default:
                    for (b = 1, x = h.length; b < x; b++) f[b] = +h[b] + (b % 2 ? u : l);
                } else if ("R" == r) y = [ u, l ].concat(h.slice(1)), i.pop(), i = i.concat(O(y, m)), 
                f = [ "R" ].concat(h.slice(-2)); else if ("O" == r) i.pop(), y = k(u, l, h[1], h[2]), 
                y.push(y[0]), i = i.concat(y); else if ("U" == r) i.pop(), i = i.concat(k(u, l, h[1], h[2], h[3])), 
                f = [ "U" ].concat(i[i.length - 1].slice(-2)); else for (var C = 0, w = h.length; C < w; C++) f[C] = h[C];
                if ("O" != (r = r.toUpperCase())) switch (f[0]) {
                  case "Z":
                    u = +c, l = +p;
                    break;

                  case "H":
                    u = f[1];
                    break;

                  case "V":
                    l = f[1];
                    break;

                  case "M":
                    c = f[f.length - 2], p = f[f.length - 1];

                  default:
                    u = f[f.length - 2], l = f[f.length - 1];
                }
            }
            return i.toString = a, n.abs = s(i), i;
        }
        function N(e, t, n, r) {
            return [ e, t, n, r, n, r ];
        }
        function D(e, t, n, r, o, i) {
            return [ 1 / 3 * e + 2 / 3 * n, 1 / 3 * t + 2 / 3 * r, 1 / 3 * o + 2 / 3 * n, 1 / 3 * i + 2 / 3 * r, o, i ];
        }
        function I(t, n, r, o, i, a, s, u, l, c) {
            // for more information of where this math came from visit:
            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
            var p, d = 120 * H / 180, f = H / 180 * (+i || 0), h = [], m = e._.cacher(function(e, t, n) {
                return {
                    x: e * q.cos(n) - t * q.sin(n),
                    y: e * q.sin(n) + t * q.cos(n)
                };
            });
            if (!r || !o) return [ t, n, u, l, u, l ];
            if (c) _ = c[0], k = c[1], w = c[2], E = c[3]; else {
                p = m(t, n, -f), t = p.x, n = p.y, p = m(u, l, -f), u = p.x, l = p.y;
                var g = (q.cos(H / 180 * i), q.sin(H / 180 * i), (t - u) / 2), v = (n - l) / 2, y = g * g / (r * r) + v * v / (o * o);
                y > 1 && (y = q.sqrt(y), r *= y, o *= y);
                var b = r * r, x = o * o, C = (a == s ? -1 : 1) * q.sqrt(Y((b * x - b * v * v - x * g * g) / (b * v * v + x * g * g))), w = C * r * v / o + (t + u) / 2, E = C * -o * g / r + (n + l) / 2, _ = q.asin(((n - E) / o).toFixed(9)), k = q.asin(((l - E) / o).toFixed(9));
                _ = t < w ? H - _ : _, k = u < w ? H - k : k, _ < 0 && (_ = 2 * H + _), k < 0 && (k = 2 * H + k), 
                s && _ > k && (_ -= 2 * H), !s && k > _ && (k -= 2 * H);
            }
            var T = k - _;
            if (Y(T) > d) {
                var S = k, N = u, D = l;
                k = _ + d * (s && k > _ ? 1 : -1), u = w + r * q.cos(k), l = E + o * q.sin(k), h = I(u, l, r, o, i, 0, s, N, D, [ k, S, w, E ]);
            }
            T = k - _;
            var R = q.cos(_), A = q.sin(_), P = q.cos(k), O = q.sin(k), F = q.tan(T / 4), M = 4 / 3 * r * F, j = 4 / 3 * o * F, L = [ t, n ], U = [ t + M * A, n - j * R ], B = [ u + M * O, l - j * P ], W = [ u, l ];
            if (U[0] = 2 * L[0] - U[0], U[1] = 2 * L[1] - U[1], c) return [ U, B, W ].concat(h);
            h = [ U, B, W ].concat(h).join().split(",");
            for (var V = [], z = 0, $ = h.length; z < $; z++) V[z] = z % 2 ? m(h[z - 1], h[z], f).y : m(h[z], h[z + 1], f).x;
            return V;
        }
        // Returns bounding box of cubic bezier curve.
        // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html
        // Original version: NISHIO Hirokazu
        // Modifications: https://github.com/timo22345
        function R(e, t, n, r, o, i, a, s) {
            for (var u, l, c, p, d, f, h, m, g = [], v = [ [], [] ], y = 0; y < 2; ++y) if (0 == y ? (l = 6 * e - 12 * n + 6 * o, 
            u = -3 * e + 9 * n - 9 * o + 3 * a, c = 3 * n - 3 * e) : (l = 6 * t - 12 * r + 6 * i, 
            u = -3 * t + 9 * r - 9 * i + 3 * s, c = 3 * r - 3 * t), Y(u) < 1e-12) {
                if (Y(l) < 1e-12) continue;
                0 < (p = -c / l) && p < 1 && g.push(p);
            } else h = l * l - 4 * c * u, m = q.sqrt(h), h < 0 || (d = (-l + m) / (2 * u), 0 < d && d < 1 && g.push(d), 
            0 < (f = (-l - m) / (2 * u)) && f < 1 && g.push(f));
            for (var b, x = g.length, C = x; x--; ) p = g[x], b = 1 - p, v[0][x] = b * b * b * e + 3 * b * b * p * n + 3 * b * p * p * o + p * p * p * a, 
            v[1][x] = b * b * b * t + 3 * b * b * p * r + 3 * b * p * p * i + p * p * p * s;
            return v[0][C] = e, v[1][C] = t, v[0][C + 1] = a, v[1][C + 1] = s, v[0].length = v[1].length = C + 2, 
            {
                min: {
                    x: W.apply(0, v[0]),
                    y: W.apply(0, v[1])
                },
                max: {
                    x: V.apply(0, v[0]),
                    y: V.apply(0, v[1])
                }
            };
        }
        function A(e, t) {
            var n = !t && o(e);
            if (!t && n.curve) return s(n.curve);
            // holder for previous path command of original path
            for (var r = S(e), i = t && S(t), a = {
                x: 0,
                y: 0,
                bx: 0,
                by: 0,
                X: 0,
                Y: 0,
                qx: null,
                qy: null
            }, u = {
                x: 0,
                y: 0,
                bx: 0,
                by: 0,
                X: 0,
                Y: 0,
                qx: null,
                qy: null
            }, l = (function(e, t, n) {
                var r, o;
                if (!e) return [ "C", t.x, t.y, t.x, t.y, t.x, t.y ];
                switch (!(e[0] in {
                    T: 1,
                    Q: 1
                }) && (t.qx = t.qy = null), e[0]) {
                  case "M":
                    t.X = e[1], t.Y = e[2];
                    break;

                  case "A":
                    e = [ "C" ].concat(I.apply(0, [ t.x, t.y ].concat(e.slice(1))));
                    break;

                  case "S":
                    "C" == n || "S" == n ? (// In "S" case we have to take into account, if the previous command is C/S.
                    r = 2 * t.x - t.bx, // And reflect the previous
                    o = 2 * t.y - t.by) : (// or some else or nothing
                    r = t.x, o = t.y), e = [ "C", r, o ].concat(e.slice(1));
                    break;

                  case "T":
                    "Q" == n || "T" == n ? (// In "T" case we have to take into account, if the previous command is Q/T.
                    t.qx = 2 * t.x - t.qx, // And make a reflection similar
                    t.qy = 2 * t.y - t.qy) : (// or something else or nothing
                    t.qx = t.x, t.qy = t.y), e = [ "C" ].concat(D(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                    break;

                  case "Q":
                    t.qx = e[1], t.qy = e[2], e = [ "C" ].concat(D(t.x, t.y, e[1], e[2], e[3], e[4]));
                    break;

                  case "L":
                    e = [ "C" ].concat(N(t.x, t.y, e[1], e[2]));
                    break;

                  case "H":
                    e = [ "C" ].concat(N(t.x, t.y, e[1], t.y));
                    break;

                  case "V":
                    e = [ "C" ].concat(N(t.x, t.y, t.x, e[1]));
                    break;

                  case "Z":
                    e = [ "C" ].concat(N(t.x, t.y, t.X, t.Y));
                }
                return e;
            }), c = function(e, t) {
                if (e[t].length > 7) {
                    e[t].shift();
                    for (var n = e[t]; n.length; ) d[t] = "A", // if created multiple C:s, their original seg is saved
                    i && (f[t] = "A"), // the same as above
                    e.splice(t++, 0, [ "C" ].concat(n.splice(0, 6)));
                    e.splice(t, 1), v = V(r.length, i && i.length || 0);
                }
            }, p = function(e, t, n, o, a) {
                e && t && "M" == e[a][0] && "M" != t[a][0] && (t.splice(a, 0, [ "M", o.x, o.y ]), 
                n.bx = 0, n.by = 0, n.x = e[a][1], n.y = e[a][2], v = V(r.length, i && i.length || 0));
            }, d = [], // path commands of original path p
            f = [], // path commands of original path p2
            h = "", // temporary holder for original path command
            m = "", g = 0, v = V(r.length, i && i.length || 0); g < v; g++) {
                r[g] && (h = r[g][0]), // save current path command
                "C" != h && (d[g] = h, // Save current path command
                g && (m = d[g - 1])), r[g] = l(r[g], a, m), // Previous path command is inputted to processPath
                "A" != d[g] && "C" == h && (d[g] = "C"), // A is the only command
                // which may produce multiple C:s
                // so we have to make sure that C is also C in original path
                c(r, g), // fixArc adds also the right amount of A:s to pcoms1
                i && (// the same procedures is done to p2
                i[g] && (h = i[g][0]), "C" != h && (f[g] = h, g && (m = f[g - 1])), i[g] = l(i[g], u, m), 
                "A" != f[g] && "C" == h && (f[g] = "C"), c(i, g)), p(r, i, a, u, g), p(i, r, u, a, g);
                var y = r[g], b = i && i[g], x = y.length, C = i && b.length;
                a.x = y[x - 2], a.y = y[x - 1], a.bx = B(y[x - 4]) || a.x, a.by = B(y[x - 3]) || a.y, 
                u.bx = i && (B(b[C - 4]) || u.x), u.by = i && (B(b[C - 3]) || u.y), u.x = i && b[C - 2], 
                u.y = i && b[C - 1];
            }
            return i || (n.curve = s(r)), i ? [ r, i ] : r;
        }
        function P(e, t) {
            if (!t) return e;
            var n, r, o, i, a, s, u;
            for (e = A(e), o = 0, a = e.length; o < a; o++) for (u = e[o], i = 1, s = u.length; i < s; i += 2) n = t.x(u[i], u[i + 1]), 
            r = t.y(u[i], u[i + 1]), u[i] = n, u[i + 1] = r;
            return e;
        }
        // http://schepers.cc/getting-to-the-point
        function O(e, t) {
            for (var n = [], r = 0, o = e.length; o - 2 * !t > r; r += 2) {
                var i = [ {
                    x: +e[r - 2],
                    y: +e[r - 1]
                }, {
                    x: +e[r],
                    y: +e[r + 1]
                }, {
                    x: +e[r + 2],
                    y: +e[r + 3]
                }, {
                    x: +e[r + 4],
                    y: +e[r + 5]
                } ];
                t ? r ? o - 4 == r ? i[3] = {
                    x: +e[0],
                    y: +e[1]
                } : o - 2 == r && (i[2] = {
                    x: +e[0],
                    y: +e[1]
                }, i[3] = {
                    x: +e[2],
                    y: +e[3]
                }) : i[0] = {
                    x: +e[o - 2],
                    y: +e[o - 1]
                } : o - 4 == r ? i[3] = i[2] : r || (i[0] = {
                    x: +e[r],
                    y: +e[r + 1]
                }), n.push([ "C", (-i[0].x + 6 * i[1].x + i[2].x) / 6, (-i[0].y + 6 * i[1].y + i[2].y) / 6, (i[1].x + 6 * i[2].x - i[3].x) / 6, (i[1].y + 6 * i[2].y - i[3].y) / 6, i[2].x, i[2].y ]);
            }
            return n;
        }
        var F = t.prototype, M = e.is, j = e._.clone, L = "hasOwnProperty", U = /,?([a-z]),?/gi, B = parseFloat, q = Math, H = q.PI, W = q.min, V = q.max, z = q.pow, Y = q.abs, $ = l(1), X = l(), K = l(0, 1), G = e._unit2px, Q = {
            path: function(e) {
                return e.attr("path");
            },
            circle: function(e) {
                var t = G(e);
                return k(t.cx, t.cy, t.r);
            },
            ellipse: function(e) {
                var t = G(e);
                return k(t.cx || 0, t.cy || 0, t.rx, t.ry);
            },
            rect: function(e) {
                var t = G(e);
                return _(t.x || 0, t.y || 0, t.width, t.height, t.rx, t.ry);
            },
            image: function(e) {
                var t = G(e);
                return _(t.x || 0, t.y || 0, t.width, t.height);
            },
            line: function(e) {
                return "M" + [ e.attr("x1") || 0, e.attr("y1") || 0, e.attr("x2"), e.attr("y2") ];
            },
            polyline: function(e) {
                return "M" + e.attr("points");
            },
            polygon: function(e) {
                return "M" + e.attr("points") + "z";
            },
            deflt: function(e) {
                var t = e.node.getBBox();
                return _(t.x, t.y, t.width, t.height);
            }
        };
        // export
        e.path = o, /*\
     * Snap.path.getTotalLength
     [ method ]
     **
     * Returns the length of the given path in pixels
     **
     - path (string) SVG path string
     **
     = (number) length
    \*/
        e.path.getTotalLength = $, /*\
     * Snap.path.getPointAtLength
     [ method ]
     **
     * Returns the coordinates of the point located at the given length along the given path
     **
     - path (string) SVG path string
     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps
     **
     = (object) representation of the point:
     o {
     o     x: (number) x coordinate,
     o     y: (number) y coordinate,
     o     alpha: (number) angle of derivative
     o }
    \*/
        e.path.getPointAtLength = X, /*\
     * Snap.path.getSubpath
     [ method ]
     **
     * Returns the subpath of a given path between given start and end lengths
     **
     - path (string) SVG path string
     - from (number) length, in pixels, from the start of the path to the start of the segment
     - to (number) length, in pixels, from the start of the path to the end of the segment
     **
     = (string) path string definition for the segment
    \*/
        e.path.getSubpath = function(e, t, n) {
            if (this.getTotalLength(e) - n < 1e-6) return K(e, t).end;
            var r = K(e, n, 1);
            return t ? K(r, t).end : r;
        }, /*\
     * Element.getTotalLength
     [ method ]
     **
     * Returns the length of the path in pixels (only works for `path` elements)
     = (number) length
    \*/
        F.getTotalLength = function() {
            if (this.node.getTotalLength) return this.node.getTotalLength();
        }, // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?
        /*\
     * Element.getPointAtLength
     [ method ]
     **
     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)
     **
     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps
     **
     = (object) representation of the point:
     o {
     o     x: (number) x coordinate,
     o     y: (number) y coordinate,
     o     alpha: (number) angle of derivative
     o }
    \*/
        F.getPointAtLength = function(e) {
            return X(this.attr("d"), e);
        }, // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.
        /*\
     * Element.getSubpath
     [ method ]
     **
     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)
     **
     - from (number) length, in pixels, from the start of the path to the start of the segment
     - to (number) length, in pixels, from the start of the path to the end of the segment
     **
     = (string) path string definition for the segment
    \*/
        F.getSubpath = function(t, n) {
            return e.path.getSubpath(this.attr("d"), t, n);
        }, e._.box = i, /*\
     * Snap.path.findDotsAtSegment
     [ method ]
     **
     * Utility method
     **
     * Finds dot coordinates on the given cubic beziér curve at the given t
     - p1x (number) x of the first point of the curve
     - p1y (number) y of the first point of the curve
     - c1x (number) x of the first anchor of the curve
     - c1y (number) y of the first anchor of the curve
     - c2x (number) x of the second anchor of the curve
     - c2y (number) y of the second anchor of the curve
     - p2x (number) x of the second point of the curve
     - p2y (number) y of the second point of the curve
     - t (number) position on the curve (0..1)
     = (object) point information in format:
     o {
     o     x: (number) x coordinate of the point,
     o     y: (number) y coordinate of the point,
     o     m: {
     o         x: (number) x coordinate of the left anchor,
     o         y: (number) y coordinate of the left anchor
     o     },
     o     n: {
     o         x: (number) x coordinate of the right anchor,
     o         y: (number) y coordinate of the right anchor
     o     },
     o     start: {
     o         x: (number) x coordinate of the start of the curve,
     o         y: (number) y coordinate of the start of the curve
     o     },
     o     end: {
     o         x: (number) x coordinate of the end of the curve,
     o         y: (number) y coordinate of the end of the curve
     o     },
     o     alpha: (number) angle of the curve derivative at the point
     o }
    \*/
        e.path.findDotsAtSegment = c, /*\
     * Snap.path.bezierBBox
     [ method ]
     **
     * Utility method
     **
     * Returns the bounding box of a given cubic beziér curve
     - p1x (number) x of the first point of the curve
     - p1y (number) y of the first point of the curve
     - c1x (number) x of the first anchor of the curve
     - c1y (number) y of the first anchor of the curve
     - c2x (number) x of the second anchor of the curve
     - c2y (number) y of the second anchor of the curve
     - p2x (number) x of the second point of the curve
     - p2y (number) y of the second point of the curve
     * or
     - bez (array) array of six points for beziér curve
     = (object) bounding box
     o {
     o     x: (number) x coordinate of the left top point of the box,
     o     y: (number) y coordinate of the left top point of the box,
     o     x2: (number) x coordinate of the right bottom point of the box,
     o     y2: (number) y coordinate of the right bottom point of the box,
     o     width: (number) width of the box,
     o     height: (number) height of the box
     o }
    \*/
        e.path.bezierBBox = p, /*\
     * Snap.path.isPointInsideBBox
     [ method ]
     **
     * Utility method
     **
     * Returns `true` if given point is inside bounding box
     - bbox (string) bounding box
     - x (string) x coordinate of the point
     - y (string) y coordinate of the point
     = (boolean) `true` if point is inside
    \*/
        e.path.isPointInsideBBox = d, e.closest = function(t, n, r, o) {
            for (var a = 100, s = i(t - a / 2, n - a / 2, a, a), u = [], l = r[0].hasOwnProperty("x") ? function(e) {
                return {
                    x: r[e].x,
                    y: r[e].y
                };
            } : function(e) {
                return {
                    x: r[e],
                    y: o[e]
                };
            }, c = 0; a <= 1e6 && !c; ) {
                for (var p = 0, f = r.length; p < f; p++) {
                    var h = l(p);
                    if (d(s, h.x, h.y)) {
                        c++, u.push(h);
                        break;
                    }
                }
                c || (a *= 2, s = i(t - a / 2, n - a / 2, a, a));
            }
            if (1e6 != a) {
                var m, g = 1 / 0;
                for (p = 0, f = u.length; p < f; p++) {
                    var v = e.len(t, n, u[p].x, u[p].y);
                    g > v && (g = v, u[p].len = v, m = u[p]);
                }
                return m;
            }
        }, /*\
     * Snap.path.isBBoxIntersect
     [ method ]
     **
     * Utility method
     **
     * Returns `true` if two bounding boxes intersect
     - bbox1 (string) first bounding box
     - bbox2 (string) second bounding box
     = (boolean) `true` if bounding boxes intersect
    \*/
        e.path.isBBoxIntersect = f, /*\
     * Snap.path.intersection
     [ method ]
     **
     * Utility method
     **
     * Finds intersections of two paths
     - path1 (string) path string
     - path2 (string) path string
     = (array) dots of intersection
     o [
     o     {
     o         x: (number) x coordinate of the point,
     o         y: (number) y coordinate of the point,
     o         t1: (number) t value for segment of path1,
     o         t2: (number) t value for segment of path2,
     o         segment1: (number) order number for segment of path1,
     o         segment2: (number) order number for segment of path2,
     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,
     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2
     o     }
     o ]
    \*/
        e.path.intersection = b, e.path.intersectionNumber = x, /*\
     * Snap.path.isPointInside
     [ method ]
     **
     * Utility method
     **
     * Returns `true` if given point is inside a given closed path.
     *
     * Note: fill mode doesn’t affect the result of this method.
     - path (string) path string
     - x (number) x of the point
     - y (number) y of the point
     = (boolean) `true` if point is inside the path
    \*/
        e.path.isPointInside = w, /*\
     * Snap.path.getBBox
     [ method ]
     **
     * Utility method
     **
     * Returns the bounding box of a given path
     - path (string) path string
     = (object) bounding box
     o {
     o     x: (number) x coordinate of the left top point of the box,
     o     y: (number) y coordinate of the left top point of the box,
     o     x2: (number) x coordinate of the right bottom point of the box,
     o     y2: (number) y coordinate of the right bottom point of the box,
     o     width: (number) width of the box,
     o     height: (number) height of the box
     o }
    \*/
        e.path.getBBox = E, e.path.get = Q, /*\
     * Snap.path.toRelative
     [ method ]
     **
     * Utility method
     **
     * Converts path coordinates into relative values
     - path (string) path string
     = (array) path string
    \*/
        e.path.toRelative = T, /*\
     * Snap.path.toAbsolute
     [ method ]
     **
     * Utility method
     **
     * Converts path coordinates into absolute values
     - path (string) path string
     = (array) path string
    \*/
        e.path.toAbsolute = S, /*\
     * Snap.path.toCubic
     [ method ]
     **
     * Utility method
     **
     * Converts path to a new path where all segments are cubic beziér curves
     - pathString (string|array) path string or array of segments
     = (array) array of segments
    \*/
        e.path.toCubic = A, /*\
     * Snap.path.map
     [ method ]
     **
     * Transform the path string with the given matrix
     - path (string) path string
     - matrix (object) see @Matrix
     = (string) transformed path string
    \*/
        e.path.map = P, e.path.toString = a, e.path.clone = s;
    }), r.plugin(function(e, r, o, i) {
        var a = Math.max, s = Math.min, u = function(e) {
            if (this.items = [], this.bindings = {}, this.length = 0, this.type = "set", e) for (var t = 0, n = e.length; t < n; t++) e[t] && (this[this.items.length] = this.items[this.items.length] = e[t], 
            this.length++);
        }, l = u.prototype;
        /*\
     * Set.push
     [ method ]
     **
     * Adds each argument to the current set
     = (object) original element
    \*/
        l.push = function() {
            for (var e, t, n = 0, r = arguments.length; n < r; n++) (e = arguments[n]) && (t = this.items.length, 
            this[t] = this.items[t] = e, this.length++);
            return this;
        }, /*\
     * Set.pop
     [ method ]
     **
     * Removes last element and returns it
     = (object) element
    \*/
        l.pop = function() {
            return this.length && delete this[this.length--], this.items.pop();
        }, /*\
     * Set.forEach
     [ method ]
     **
     * Executes given function for each element in the set
     *
     * If the function returns `false`, the loop stops running.
     **
     - callback (function) function to run
     - thisArg (object) context object for the callback
     = (object) Set object
    \*/
        l.forEach = function(e, t) {
            for (var n = 0, r = this.items.length; n < r; n++) if (!1 === e.call(t, this.items[n], n)) return this;
            return this;
        }, /*\
     * Set.animate
     [ method ]
     **
     * Animates each element in set in sync.
     *
     **
     - attrs (object) key-value pairs of destination attributes
     - duration (number) duration of the animation in milliseconds
     - easing (function) #optional easing function from @mina or custom
     - callback (function) #optional callback function that executes when the animation ends
     * or
     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`
     > Usage
     | // animate all elements in set to radius 10
     | set.animate({r: 10}, 500, mina.easein);
     | // or
     | // animate first element to radius 10, but second to radius 20 and in different time
     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);
     = (Element) the current element
    \*/
        l.animate = function(r, o, i, a) {
            "function" != typeof i || i.length || (a = i, i = n.linear), r instanceof e._.Animation && (a = r.callback, 
            i = r.easing, o = i.dur, r = r.attr);
            var s = arguments;
            if (e.is(r, "array") && e.is(s[s.length - 1], "array")) var u = !0;
            var l, c = function() {
                l ? this.b = l : l = this.b;
            }, p = 0, d = this, f = a && function() {
                ++p == d.length && a.call(this);
            };
            return this.forEach(function(e, n) {
                t.once("snap.animcreated." + e.id, c), u ? s[n] && e.animate.apply(e, s[n]) : e.animate(r, o, i, f);
            });
        }, /*\
     * Set.remove
     [ method ]
     **
     * Removes all children of the set.
     *
     = (object) Set object
    \*/
        l.remove = function() {
            for (;this.length; ) this.pop().remove();
            return this;
        }, /*\
     * Set.bind
     [ method ]
     **
     * Specifies how to handle a specific attribute when applied
     * to a set.
     *
     **
     - attr (string) attribute name
     - callback (function) function to run
     * or
     - attr (string) attribute name
     - element (Element) specific element in the set to apply the attribute to
     * or
     - attr (string) attribute name
     - element (Element) specific element in the set to apply the attribute to
     - eattr (string) attribute on the element to bind the attribute to
     = (object) Set object
    \*/
        l.bind = function(e, t, n) {
            var r = {};
            if ("function" == typeof t) this.bindings[e] = t; else {
                var o = n || e;
                this.bindings[e] = function(e) {
                    r[o] = e, t.attr(r);
                };
            }
            return this;
        }, /*\
     * Set.attr
     [ method ]
     **
     * Equivalent of @Element.attr.
     = (object) Set object
    \*/
        l.attr = function(e) {
            var t = {};
            for (var n in e) this.bindings[n] ? this.bindings[n](e[n]) : t[n] = e[n];
            for (var r = 0, o = this.items.length; r < o; r++) this.items[r].attr(t);
            return this;
        }, /*\
     * Set.clear
     [ method ]
     **
     * Removes all elements from the set
    \*/
        l.clear = function() {
            for (;this.length; ) this.pop();
        }, /*\
     * Set.splice
     [ method ]
     **
     * Removes range of elements from the set
     **
     - index (number) position of the deletion
     - count (number) number of element to remove
     - insertion… (object) #optional elements to insert
     = (object) set elements that were deleted
    \*/
        l.splice = function(e, t, n) {
            e = e < 0 ? a(this.length + e, 0) : e, t = a(0, s(this.length - e, t));
            var r, o = [], i = [], l = [];
            for (r = 2; r < arguments.length; r++) l.push(arguments[r]);
            for (r = 0; r < t; r++) i.push(this[e + r]);
            for (;r < this.length - e; r++) o.push(this[e + r]);
            var c = l.length;
            for (r = 0; r < c + o.length; r++) this.items[e + r] = this[e + r] = r < c ? l[r] : o[r - c];
            for (r = this.items.length = this.length -= t - c; this[r]; ) delete this[r++];
            return new u(i);
        }, /*\
     * Set.exclude
     [ method ]
     **
     * Removes given element from the set
     **
     - element (object) element to remove
     = (boolean) `true` if object was found and removed from the set
    \*/
        l.exclude = function(e) {
            for (var t = 0, n = this.length; t < n; t++) if (this[t] == e) return this.splice(t, 1), 
            !0;
            return !1;
        }, /*\
     * Set.insertAfter
     [ method ]
     **
     * Inserts set elements after given element.
     **
     - element (object) set will be inserted after this element
     = (object) Set object
    \*/
        l.insertAfter = function(e) {
            for (var t = this.items.length; t--; ) this.items[t].insertAfter(e);
            return this;
        }, /*\
     * Set.getBBox
     [ method ]
     **
     * Union of all bboxes of the set. See @Element.getBBox.
     = (object) bounding box descriptor. See @Element.getBBox.
    \*/
        l.getBBox = function() {
            for (var e = [], t = [], n = [], r = [], o = this.items.length; o--; ) if (!this.items[o].removed) {
                var i = this.items[o].getBBox();
                e.push(i.x), t.push(i.y), n.push(i.x + i.width), r.push(i.y + i.height);
            }
            return e = s.apply(0, e), t = s.apply(0, t), n = a.apply(0, n), r = a.apply(0, r), 
            {
                x: e,
                y: t,
                x2: n,
                y2: r,
                width: n - e,
                height: r - t,
                cx: e + (n - e) / 2,
                cy: t + (r - t) / 2
            };
        }, /*\
     * Set.insertAfter
     [ method ]
     **
     * Creates a clone of the set.
     **
     = (object) New Set object
    \*/
        l.clone = function(e) {
            e = new u();
            for (var t = 0, n = this.items.length; t < n; t++) e.push(this.items[t].clone());
            return e;
        }, l.toString = function() {
            return "Snap‘s set";
        }, l.type = "set", // export
        /*\
     * Snap.Set
     [ property ]
     **
     * Set constructor.
    \*/
        e.Set = u, /*\
     * Snap.set
     [ method ]
     **
     * Creates a set and fills it with list of arguments.
     **
     = (object) New Set object
     | var r = paper.rect(0, 0, 10, 10),
     |     s1 = Snap.set(), // empty set
     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set
    \*/
        e.set = function() {
            var e = new u();
            return arguments.length && e.push.apply(e, Array.prototype.slice.call(arguments, 0)), 
            e;
        };
    }), r.plugin(function(e, n, r, o) {
        function i(e) {
            var t = e[0];
            switch (t.toLowerCase()) {
              case "t":
                return [ t, 0, 0 ];

              case "m":
                return [ t, 1, 0, 0, 1, 0, 0 ];

              case "r":
                return 4 == e.length ? [ t, 0, e[2], e[3] ] : [ t, 0 ];

              case "s":
                return 5 == e.length ? [ t, 1, 1, e[3], e[4] ] : 3 == e.length ? [ t, 1, 1 ] : [ t, 1 ];
            }
        }
        function a(t, n, r) {
            t = t || new e.Matrix(), n = n || new e.Matrix(), t = e.parseTransformString(t.toTransformString()) || [], 
            n = e.parseTransformString(n.toTransformString()) || [];
            for (var o, a, s, u, l = Math.max(t.length, n.length), c = [], f = [], h = 0; h < l; h++) {
                if (s = t[h] || i(n[h]), u = n[h] || i(s), s[0] != u[0] || "r" == s[0].toLowerCase() && (s[2] != u[2] || s[3] != u[3]) || "s" == s[0].toLowerCase() && (s[3] != u[3] || s[4] != u[4])) {
                    t = e._.transform2matrix(t, r()), n = e._.transform2matrix(n, r()), c = [ [ "m", t.a, t.b, t.c, t.d, t.e, t.f ] ], 
                    f = [ [ "m", n.a, n.b, n.c, n.d, n.e, n.f ] ];
                    break;
                }
                for (c[h] = [], f[h] = [], o = 0, a = Math.max(s.length, u.length); o < a; o++) o in s && (c[h][o] = s[o]), 
                o in u && (f[h][o] = u[o]);
            }
            return {
                from: d(c),
                to: d(f),
                f: p(c)
            };
        }
        function s(e) {
            return e;
        }
        function u(e) {
            return function(t) {
                return +t.toFixed(3) + e;
            };
        }
        function l(e) {
            return e.join(" ");
        }
        function c(t) {
            return e.rgb(t[0], t[1], t[2], t[3]);
        }
        function p(e) {
            var t, n, r, o, i, a, s = 0, u = [];
            for (t = 0, n = e.length; t < n; t++) {
                for (i = "[", a = [ '"' + e[t][0] + '"' ], r = 1, o = e[t].length; r < o; r++) a[r] = "val[" + s++ + "]";
                i += a + "]", u[t] = i;
            }
            return Function("val", "return Snap.path.toString.call([" + u + "])");
        }
        function d(e) {
            for (var t = [], n = 0, r = e.length; n < r; n++) for (var o = 1, i = e[n].length; o < i; o++) t.push(e[n][o]);
            return t;
        }
        function f(e) {
            return isFinite(e);
        }
        function h(t, n) {
            return !(!e.is(t, "array") || !e.is(n, "array")) && t.toString() == n.toString();
        }
        var m = {}, g = /[%a-z]+$/i, v = String;
        m.stroke = m.fill = "colour", n.prototype.equal = function(e, n) {
            return t("snap.util.equal", this, e, n).firstDefined();
        }, t.on("snap.util.equal", function(t, n) {
            var r, o, i = v(this.attr(t) || ""), y = this;
            if ("colour" == m[t]) return r = e.color(i), o = e.color(n), {
                from: [ r.r, r.g, r.b, r.opacity ],
                to: [ o.r, o.g, o.b, o.opacity ],
                f: c
            };
            if ("viewBox" == t) return r = this.attr(t).vb.split(" ").map(Number), o = n.split(" ").map(Number), 
            {
                from: r,
                to: o,
                f: l
            };
            if ("transform" == t || "gradientTransform" == t || "patternTransform" == t) return "string" == typeof n && (n = v(n).replace(/\.{3}|\u2026/g, i)), 
            i = this.matrix, n = e._.rgTransform.test(n) ? e._.transform2matrix(n, this.getBBox()) : e._.transform2matrix(e._.svgTransform2string(n), this.getBBox()), 
            a(i, n, function() {
                return y.getBBox(1);
            });
            if ("d" == t || "path" == t) return r = e.path.toCubic(i, n), {
                from: d(r[0]),
                to: d(r[1]),
                f: p(r[0])
            };
            if ("points" == t) return r = v(i).split(e._.separator), o = v(n).split(e._.separator), 
            {
                from: r,
                to: o,
                f: function(e) {
                    return e;
                }
            };
            if (f(i) && f(n)) return {
                from: parseFloat(i),
                to: parseFloat(n),
                f: s
            };
            var b = i.match(g), x = v(n).match(g);
            return b && h(b, x) ? {
                from: parseFloat(i),
                to: parseFloat(n),
                f: u(b)
            } : {
                from: this.asPX(t),
                to: this.asPX(t, n),
                f: s
            };
        });
    }), r.plugin(function(e, n, r, o) {
        /*\
     * Element.click
     [ method ]
     **
     * Adds a click event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unclick
     [ method ]
     **
     * Removes a click event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.dblclick
     [ method ]
     **
     * Adds a double click event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.undblclick
     [ method ]
     **
     * Removes a double click event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.mousedown
     [ method ]
     **
     * Adds a mousedown event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unmousedown
     [ method ]
     **
     * Removes a mousedown event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.mousemove
     [ method ]
     **
     * Adds a mousemove event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unmousemove
     [ method ]
     **
     * Removes a mousemove event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.mouseout
     [ method ]
     **
     * Adds a mouseout event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unmouseout
     [ method ]
     **
     * Removes a mouseout event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.mouseover
     [ method ]
     **
     * Adds a mouseover event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unmouseover
     [ method ]
     **
     * Removes a mouseover event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.mouseup
     [ method ]
     **
     * Adds a mouseup event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.unmouseup
     [ method ]
     **
     * Removes a mouseup event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.touchstart
     [ method ]
     **
     * Adds a touchstart event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.untouchstart
     [ method ]
     **
     * Removes a touchstart event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.touchmove
     [ method ]
     **
     * Adds a touchmove event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.untouchmove
     [ method ]
     **
     * Removes a touchmove event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.touchend
     [ method ]
     **
     * Adds a touchend event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.untouchend
     [ method ]
     **
     * Removes a touchend event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.touchcancel
     [ method ]
     **
     * Adds a touchcancel event handler to the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        /*\
     * Element.untouchcancel
     [ method ]
     **
     * Removes a touchcancel event handler from the element
     - handler (function) handler for the event
     = (object) @Element
    \*/
        for (var i = n.prototype, a = ("createTouch" in o.doc), s = [ "click", "dblclick", "mousedown", "mousemove", "mouseout", "mouseover", "mouseup", "touchstart", "touchmove", "touchend", "touchcancel" ], u = {
            mousedown: "touchstart",
            mousemove: "touchmove",
            mouseup: "touchend"
        }, l = (function(e, t) {
            var n = "y" == e ? "scrollTop" : "scrollLeft", r = t && t.node ? t.node.ownerDocument : o.doc;
            return r[n in r.documentElement ? "documentElement" : "body"][n];
        }), c = function() {
            return this.originalEvent.preventDefault();
        }, p = function() {
            return this.originalEvent.stopPropagation();
        }, d = function(e, t, n, r) {
            var o = a && u[t] ? u[t] : t, i = function(o) {
                var i = l("y", r), s = l("x", r);
                if (a && u.hasOwnProperty(t)) for (var d = 0, f = o.targetTouches && o.targetTouches.length; d < f; d++) if (o.targetTouches[d].target == e || e.contains(o.targetTouches[d].target)) {
                    var h = o;
                    o = o.targetTouches[d], o.originalEvent = h, o.preventDefault = c, o.stopPropagation = p;
                    break;
                }
                var m = o.clientX + s, g = o.clientY + i;
                return n.call(r, o, m, g);
            };
            return t !== o && e.addEventListener(t, i, !1), e.addEventListener(o, i, !1), function() {
                return t !== o && e.removeEventListener(t, i, !1), e.removeEventListener(o, i, !1), 
                !0;
            };
        }, f = [], h = function(e) {
            for (var n, r = e.clientX, o = e.clientY, i = l("y"), s = l("x"), u = f.length; u--; ) {
                if (n = f[u], a) {
                    for (var c, p = e.touches && e.touches.length; p--; ) if (c = e.touches[p], c.identifier == n.el._drag.id || n.el.node.contains(c.target)) {
                        r = c.clientX, o = c.clientY, (e.originalEvent ? e.originalEvent : e).preventDefault();
                        break;
                    }
                } else e.preventDefault();
                var d = n.el.node;
                d.nextSibling, d.parentNode, d.style.display;
                // glob.win.opera && parent.removeChild(node);
                // node.style.display = "none";
                // o = dragi.el.paper.getElementByPoint(x, y);
                // node.style.display = display;
                // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));
                // o && eve("snap.drag.over." + dragi.el.id, dragi.el, o);
                r += s, o += i, t("snap.drag.move." + n.el.id, n.move_scope || n.el, r - n.el._drag.x, o - n.el._drag.y, r, o, e);
            }
        }, m = function(n) {
            e.unmousemove(h).unmouseup(m);
            for (var r, o = f.length; o--; ) r = f[o], r.el._drag = {}, t("snap.drag.end." + r.el.id, r.end_scope || r.start_scope || r.move_scope || r.el, n), 
            t.off("snap.drag.*." + r.el.id);
            f = [];
        }, g = s.length; g--; ) !function(t) {
            e[t] = i[t] = function(n, r) {
                if (e.is(n, "function")) this.events = this.events || [], this.events.push({
                    name: t,
                    f: n,
                    unbind: d(this.node || document, t, n, r || this)
                }); else for (var o = 0, i = this.events.length; o < i; o++) if (this.events[o].name == t) try {
                    this.events[o].f.call(this);
                } catch (e) {}
                return this;
            }, e["un" + t] = i["un" + t] = function(e) {
                for (var n = this.events || [], r = n.length; r--; ) if (n[r].name == t && (n[r].f == e || !e)) return n[r].unbind(), 
                n.splice(r, 1), !n.length && delete this.events, this;
                return this;
            };
        }(s[g]);
        /*\
     * Element.hover
     [ method ]
     **
     * Adds hover event handlers to the element
     - f_in (function) handler for hover in
     - f_out (function) handler for hover out
     - icontext (object) #optional context for hover in handler
     - ocontext (object) #optional context for hover out handler
     = (object) @Element
    \*/
        i.hover = function(e, t, n, r) {
            return this.mouseover(e, n).mouseout(t, r || n);
        }, /*\
     * Element.unhover
     [ method ]
     **
     * Removes hover event handlers from the element
     - f_in (function) handler for hover in
     - f_out (function) handler for hover out
     = (object) @Element
    \*/
        i.unhover = function(e, t) {
            return this.unmouseover(e).unmouseout(t);
        };
        var v = [];
        // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.
        // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?
        // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.
        // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?
        /*\
     * Element.drag
     [ method ]
     **
     * Adds event handlers for an element's drag gesture
     **
     - onmove (function) handler for moving
     - onstart (function) handler for drag start
     - onend (function) handler for drag end
     - mcontext (object) #optional context for moving handler
     - scontext (object) #optional context for drag start handler
     - econtext (object) #optional context for drag end handler
     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, 
     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element 
     * `drag.over.<id>` fires as well.
     *
     * Start event and start handler are called in specified context or in context of the element with following parameters:
     o x (number) x position of the mouse
     o y (number) y position of the mouse
     o event (object) DOM event object
     * Move event and move handler are called in specified context or in context of the element with following parameters:
     o dx (number) shift by x from the start point
     o dy (number) shift by y from the start point
     o x (number) x position of the mouse
     o y (number) y position of the mouse
     o event (object) DOM event object
     * End event and end handler are called in specified context or in context of the element with following parameters:
     o event (object) DOM event object
     = (object) @Element
    \*/
        i.drag = function(n, r, o, i, a, s) {
            function u(u, l, p) {
                (u.originalEvent || u).preventDefault(), c._drag.x = l, c._drag.y = p, c._drag.id = u.identifier, 
                !f.length && e.mousemove(h).mouseup(m), f.push({
                    el: c,
                    move_scope: i,
                    start_scope: a,
                    end_scope: s
                }), r && t.on("snap.drag.start." + c.id, r), n && t.on("snap.drag.move." + c.id, n), 
                o && t.on("snap.drag.end." + c.id, o), t("snap.drag.start." + c.id, a || i || c, l, p, u);
            }
            function l(e, n, r) {
                t("snap.draginit." + c.id, c, e, n, r);
            }
            var c = this;
            if (!arguments.length) {
                var p;
                return c.drag(function(e, t) {
                    this.attr({
                        transform: p + (p ? "T" : "t") + [ e, t ]
                    });
                }, function() {
                    p = this.transform().local;
                });
            }
            return t.on("snap.draginit." + c.id, u), c._drag = {}, v.push({
                el: c,
                start: u,
                init: l
            }), c.mousedown(l), c;
        }, /*
     * Element.onDragOver
     [ method ]
     **
     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)
     - f (function) handler for event, first argument would be the element you are dragging over
    \*/
        // elproto.onDragOver = function (f) {
        //     f ? eve.on("snap.drag.over." + this.id, f) : eve.unbind("snap.drag.over." + this.id);
        // };
        /*\
     * Element.undrag
     [ method ]
     **
     * Removes all drag event handlers from the given element
    \*/
        i.undrag = function() {
            for (var n = v.length; n--; ) v[n].el == this && (this.unmousedown(v[n].init), v.splice(n, 1), 
            t.unbind("snap.drag.*." + this.id), t.unbind("snap.draginit." + this.id));
            return !v.length && e.unmousemove(h).unmouseup(m), this;
        };
    }), r.plugin(function(e, n, r, o) {
        var i = (n.prototype, r.prototype), a = /^\s*url\((.+)\)/, s = String, u = e._.$;
        e.filter = {}, /*\
     * Paper.filter
     [ method ]
     **
     * Creates a `<filter>` element
     **
     - filstr (string) SVG fragment of filter provided as a string
     = (object) @Element
     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.
     > Usage
     | var f = paper.filter('<feGaussianBlur stdDeviation="2"/>'),
     |     c = paper.circle(10, 10, 10).attr({
     |         filter: f
     |     });
    \*/
        i.filter = function(t) {
            var r = this;
            "svg" != r.type && (r = r.paper);
            var o = e.parse(s(t)), i = e._.id(), a = (r.node.offsetWidth, r.node.offsetHeight, 
            u("filter"));
            return u(a, {
                id: i,
                filterUnits: "userSpaceOnUse"
            }), a.appendChild(o.node), r.defs.appendChild(a), new n(a);
        }, t.on("snap.util.getattr.filter", function() {
            t.stop();
            var n = u(this.node, "filter");
            if (n) {
                var r = s(n).match(a);
                return r && e.select(r[1]);
            }
        }), t.on("snap.util.attr.filter", function(r) {
            if (r instanceof n && "filter" == r.type) {
                t.stop();
                var o = r.node.id;
                o || (u(r.node, {
                    id: r.id
                }), o = r.id), u(this.node, {
                    filter: e.url(o)
                });
            }
            r && "none" != r || (t.stop(), this.node.removeAttribute("filter"));
        }), /*\
     * Snap.filter.blur
     [ method ]
     **
     * Returns an SVG markup string for the blur filter
     **
     - x (number) amount of horizontal blur, in pixels
     - y (number) #optional amount of vertical blur, in pixels
     = (string) filter representation
     > Usage
     | var f = paper.filter(Snap.filter.blur(5, 10)),
     |     c = paper.circle(10, 10, 10).attr({
     |         filter: f
     |     });
    \*/
        e.filter.blur = function(t, n) {
            null == t && (t = 2);
            var r = null == n ? t : [ t, n ];
            return e.format('<feGaussianBlur stdDeviation="{def}"/>', {
                def: r
            });
        }, e.filter.blur.toString = function() {
            return this();
        }, /*\
     * Snap.filter.shadow
     [ method ]
     **
     * Returns an SVG markup string for the shadow filter
     **
     - dx (number) #optional horizontal shift of the shadow, in pixels
     - dy (number) #optional vertical shift of the shadow, in pixels
     - blur (number) #optional amount of blur
     - color (string) #optional color of the shadow
     - opacity (number) #optional `0..1` opacity of the shadow
     * or
     - dx (number) #optional horizontal shift of the shadow, in pixels
     - dy (number) #optional vertical shift of the shadow, in pixels
     - color (string) #optional color of the shadow
     - opacity (number) #optional `0..1` opacity of the shadow
     * which makes blur default to `4`. Or
     - dx (number) #optional horizontal shift of the shadow, in pixels
     - dy (number) #optional vertical shift of the shadow, in pixels
     - opacity (number) #optional `0..1` opacity of the shadow
     = (string) filter representation
     > Usage
     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),
     |     c = paper.circle(10, 10, 10).attr({
     |         filter: f
     |     });
    \*/
        e.filter.shadow = function(t, n, r, o, i) {
            return null == i && (null == o ? (i = r, r = 4, o = "#000") : (i = o, o = r, r = 4)), 
            null == r && (r = 4), null == i && (i = 1), null == t && (t = 0, n = 2), null == n && (n = t), 
            o = e.color(o), e.format('<feGaussianBlur in="SourceAlpha" stdDeviation="{blur}"/><feOffset dx="{dx}" dy="{dy}" result="offsetblur"/><feFlood flood-color="{color}"/><feComposite in2="offsetblur" operator="in"/><feComponentTransfer><feFuncA type="linear" slope="{opacity}"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge>', {
                color: o,
                dx: t,
                dy: n,
                blur: r,
                opacity: i
            });
        }, e.filter.shadow.toString = function() {
            return this();
        }, /*\
     * Snap.filter.grayscale
     [ method ]
     **
     * Returns an SVG markup string for the grayscale filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.grayscale = function(t) {
            return null == t && (t = 1), e.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0"/>', {
                a: .2126 + .7874 * (1 - t),
                b: .7152 - .7152 * (1 - t),
                c: .0722 - .0722 * (1 - t),
                d: .2126 - .2126 * (1 - t),
                e: .7152 + .2848 * (1 - t),
                f: .0722 - .0722 * (1 - t),
                g: .2126 - .2126 * (1 - t),
                h: .0722 + .9278 * (1 - t)
            });
        }, e.filter.grayscale.toString = function() {
            return this();
        }, /*\
     * Snap.filter.sepia
     [ method ]
     **
     * Returns an SVG markup string for the sepia filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.sepia = function(t) {
            return null == t && (t = 1), e.format('<feColorMatrix type="matrix" values="{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0"/>', {
                a: .393 + .607 * (1 - t),
                b: .769 - .769 * (1 - t),
                c: .189 - .189 * (1 - t),
                d: .349 - .349 * (1 - t),
                e: .686 + .314 * (1 - t),
                f: .168 - .168 * (1 - t),
                g: .272 - .272 * (1 - t),
                h: .534 - .534 * (1 - t),
                i: .131 + .869 * (1 - t)
            });
        }, e.filter.sepia.toString = function() {
            return this();
        }, /*\
     * Snap.filter.saturate
     [ method ]
     **
     * Returns an SVG markup string for the saturate filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.saturate = function(t) {
            return null == t && (t = 1), e.format('<feColorMatrix type="saturate" values="{amount}"/>', {
                amount: 1 - t
            });
        }, e.filter.saturate.toString = function() {
            return this();
        }, /*\
     * Snap.filter.hueRotate
     [ method ]
     **
     * Returns an SVG markup string for the hue-rotate filter
     **
     - angle (number) angle of rotation
     = (string) filter representation
    \*/
        e.filter.hueRotate = function(t) {
            return t = t || 0, e.format('<feColorMatrix type="hueRotate" values="{angle}"/>', {
                angle: t
            });
        }, e.filter.hueRotate.toString = function() {
            return this();
        }, /*\
     * Snap.filter.invert
     [ method ]
     **
     * Returns an SVG markup string for the invert filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.invert = function(t) {
            //        <feColorMatrix type="matrix" values="-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0" color-interpolation-filters="sRGB"/>
            return null == t && (t = 1), e.format('<feComponentTransfer><feFuncR type="table" tableValues="{amount} {amount2}"/><feFuncG type="table" tableValues="{amount} {amount2}"/><feFuncB type="table" tableValues="{amount} {amount2}"/></feComponentTransfer>', {
                amount: t,
                amount2: 1 - t
            });
        }, e.filter.invert.toString = function() {
            return this();
        }, /*\
     * Snap.filter.brightness
     [ method ]
     **
     * Returns an SVG markup string for the brightness filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.brightness = function(t) {
            return null == t && (t = 1), e.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}"/><feFuncG type="linear" slope="{amount}"/><feFuncB type="linear" slope="{amount}"/></feComponentTransfer>', {
                amount: t
            });
        }, e.filter.brightness.toString = function() {
            return this();
        }, /*\
     * Snap.filter.contrast
     [ method ]
     **
     * Returns an SVG markup string for the contrast filter
     **
     - amount (number) amount of filter (`0..1`)
     = (string) filter representation
    \*/
        e.filter.contrast = function(t) {
            return null == t && (t = 1), e.format('<feComponentTransfer><feFuncR type="linear" slope="{amount}" intercept="{amount2}"/><feFuncG type="linear" slope="{amount}" intercept="{amount2}"/><feFuncB type="linear" slope="{amount}" intercept="{amount2}"/></feComponentTransfer>', {
                amount: t,
                amount2: .5 - t / 2
            });
        }, e.filter.contrast.toString = function() {
            return this();
        };
    }), r.plugin(function(e, t, n, r, o) {
        var i = e._.box, a = e.is, s = /^[^a-z]*([tbmlrc])/i, u = function() {
            return "T" + this.dx + "," + this.dy;
        };
        /*\
     * Element.getAlign
     [ method ]
     **
     * Returns shift needed to align the element relatively to given element.
     * If no elements specified, parent `<svg>` container will be used.
     - el (object) @optional alignment element
     - way (string) one of six values: `"top"`, `"middle"`, `"bottom"`, `"left"`, `"center"`, `"right"`
     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string
     > Usage
     | el.transform(el.getAlign(el2, "top"));
     * or
     | var dy = el.getAlign(el2, "top").dy;
    \*/
        t.prototype.getAlign = function(e, t) {
            null == t && a(e, "string") && (t = e, e = null), e = e || this.paper;
            var n = e.getBBox ? e.getBBox() : i(e), r = this.getBBox(), o = {};
            switch (t = t && t.match(s), t = t ? t[1].toLowerCase() : "c") {
              case "t":
                o.dx = 0, o.dy = n.y - r.y;
                break;

              case "b":
                o.dx = 0, o.dy = n.y2 - r.y2;
                break;

              case "m":
                o.dx = 0, o.dy = n.cy - r.cy;
                break;

              case "l":
                o.dx = n.x - r.x, o.dy = 0;
                break;

              case "r":
                o.dx = n.x2 - r.x2, o.dy = 0;
                break;

              default:
                o.dx = n.cx - r.cx, o.dy = 0;
            }
            return o.toString = u, o;
        }, /*\
     * Element.align
     [ method ]
     **
     * Aligns the element relatively to given one via transformation.
     * If no elements specified, parent `<svg>` container will be used.
     - el (object) @optional alignment element
     - way (string) one of six values: `"top"`, `"middle"`, `"bottom"`, `"left"`, `"center"`, `"right"`
     = (object) this element
     > Usage
     | el.align(el2, "top");
     * or
     | el.align("middle");
    \*/
        t.prototype.align = function(e, t) {
            return this.transform("..." + this.getAlign(e, t));
        };
    }), r.plugin(function(t, n, r, o) {
        function i(e) {
            e = e.split(/(?=#)/);
            var t = new String(e[5]);
            return t[50] = e[0], t[100] = e[1], t[200] = e[2], t[300] = e[3], t[400] = e[4], 
            t[500] = e[5], t[600] = e[6], t[700] = e[7], t[800] = e[8], t[900] = e[9], e[10] && (t.A100 = e[10], 
            t.A200 = e[11], t.A400 = e[12], t.A700 = e[13]), t;
        }
        /*\
     * Snap.mui
     [ property ]
     **
     * Contain Material UI colours.
     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});
     # For colour reference: <a href="https://www.materialui.co">https://www.materialui.co</a>.
    \*/
        t.mui = {}, /*\
     * Snap.flat
     [ property ]
     **
     * Contain Flat UI colours.
     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});
     # For colour reference: <a href="https://www.materialui.co">https://www.materialui.co</a>.
    \*/
        t.flat = {}, t.mui.red = i("#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000"), 
        t.mui.pink = i("#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162"), 
        t.mui.purple = i("#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF"), 
        t.mui.deeppurple = i("#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA"), 
        t.mui.indigo = i("#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE"), 
        t.mui.blue = i("#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF"), 
        t.mui.lightblue = i("#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA"), 
        t.mui.cyan = i("#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4"), 
        t.mui.teal = i("#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5"), 
        t.mui.green = i("#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853"), 
        t.mui.lightgreen = i("#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17"), 
        t.mui.lime = i("#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00"), 
        t.mui.yellow = i("#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600"), 
        t.mui.amber = i("#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00"), 
        t.mui.orange = i("#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00"), 
        t.mui.deeporange = i("#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00"), 
        t.mui.brown = i("#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723"), 
        t.mui.grey = i("#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121"), 
        t.mui.bluegrey = i("#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238"), 
        t.flat.turquoise = "#1abc9c", t.flat.greensea = "#16a085", t.flat.sunflower = "#f1c40f", 
        t.flat.orange = "#f39c12", t.flat.emerland = "#2ecc71", t.flat.nephritis = "#27ae60", 
        t.flat.carrot = "#e67e22", t.flat.pumpkin = "#d35400", t.flat.peterriver = "#3498db", 
        t.flat.belizehole = "#2980b9", t.flat.alizarin = "#e74c3c", t.flat.pomegranate = "#c0392b", 
        t.flat.amethyst = "#9b59b6", t.flat.wisteria = "#8e44ad", t.flat.clouds = "#ecf0f1", 
        t.flat.silver = "#bdc3c7", t.flat.wetasphalt = "#34495e", t.flat.midnightblue = "#2c3e50", 
        t.flat.concrete = "#95a5a6", t.flat.asbestos = "#7f8c8d", /*\
     * Snap.importMUIColors
     [ method ]
     **
     * Imports Material UI colours into global object.
     | Snap.importMUIColors();
     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});
     # For colour reference: <a href="https://www.materialui.co">https://www.materialui.co</a>.
    \*/
        t.importMUIColors = function() {
            for (var n in t.mui) t.mui.hasOwnProperty(n) && (e[n] = t.mui[n]);
        };
    }), r;
}), /*! wot */
"localhost" != window.location.hostname && (wplocal.basePathURL = window.location.origin);

// interaction
var nav = {
    init: function() {
        this.anchor.init(), this.travelOnRdy();
    },
    static: function() {
        $body.attr("static", "");
    },
    fluid: function() {
        $body.attr("static", null);
    },
    travelOnRdy: function() {
        var e, t = window.location.href.replace(wplocal.basePathURL, ""), n = t.slice(1).split("/");
        if (n[0] && "" !== n[0]) {
            switch (n[0]) {
              case "portfolio":
                e = "projects";
                break;

              case "connect":
                e = "contact";
                break;

              default:
                e = n[0];
            }
            nav.anchor.travelingpants("#" + e);
        }
    },
    anchor: {
        init: function() {
            $a = document.getElementsByTagName("a"), this.loop($a);
        },
        loop: function(e) {
            for (var t = 0; t < e.length; ++t) "" !== e[t].hash && nav.anchor.bind(e[t]);
        },
        travelingpants: function(e) {
            // if (popup)
            //   popup.close();
            e = document.getElementById(e.substring(1)), $("body, html").animate({
                scrollTop: e.offsetTop
            }, 400);
        },
        bind: function(e) {
            e.onclick = function() {
                return nav.anchor.travelingpants(this.hash), !1;
            };
        }
    },
    intervalwcount: {
        interval: [],
        loop: function(e, t) {
            this.interval = setInterval(t, e);
        },
        clear: function() {
            clearInterval(nav.intervalwcount.interval);
        }
    },
    slidetoSection: function(e) {
        e = e || 0, // where to scroll
        sectionYOffset = $sections.eq(e).offset().top, // class name toggle  
        $sections.removeClass("current-slide"), $sections.eq(e).addClass("current-slide");
    },
    lazyload: function() {}
}, ohSnap = {
    counter: 0,
    loop: {
        run: function(e) {
            id = e.substring(1);
            var t = ohSnap.settings.speed[id], n = ohSnap.counter, r = Object.keys(ohSnap.vectorPoints[id]).length;
            ohSnap.go(id, n), n++, looping = window.setInterval(function() {
                n = n >= r ? 0 : n, ohSnap.go(e, n), n++;
            }, t);
        },
        destroy: function() {
            clearInterval(looping);
        }
    },
    go: function(e, t) {
        id = "string" == typeof e ? e.substring(1) : e.className || e.id;
        // console.log(identifier);
        // count objects length
        // check if has multiple polygons
        var n, r, o, a = jQuery(e).find("polygon"), s = this.settings.speed[id], u = this.settings.easing[id];
        if (a.length > 1) // preparing loops
        for (i = 0; i < a.length; i++) n = jQuery(e).find("polygon").get(i), r = this.vectorPoints[id][t][i], 
        o = Snap(n), o.stop().animate({
            points: r
        }, s, u); else // console.log(jQuery(identifier).find('polygon'));      
        n = jQuery(e).find("polygon").get(0), r = this.vectorPoints[id][t], // console.log(vp);
        o = Snap(n), o.stop().animate({
            points: r
        }, s, u);
    },
    settings: {
        speed: {
            branding: 800,
            logo: 1e4,
            loader: 800,
            thumb: 200
        },
        easing: {
            branding: mina.easout,
            logo: mina.easout,
            loader: mina.easein,
            thumb: mina.easeout
        }
    },
    vectorPoints: {
        branding: {
            // splash
            0: [ "0,0 189.3,0 39.4,69.4 0,152.5 60.6,360.5 119.3,649.8 133.2,725.4 71.8,899.8 0,899.8", "167.4,629.6 128.9,459.2 52.9,130 180.9,59.2 348.8,0 189.3,0 39.4,69.4 0,152.5 60.6,360.5 119.3,649.8 133.2,725.4 71.8,899.8 97.6,899.8 149.9,815.2", "516.1,0 189.3,122.7 100.9,165.4 140.9,389.8 167.4,629.6 149.9,815.2 97.6,899.8 97.6,899.8 149.9,815.2 167.4,629.6 128.9,459.2 52.9,130 180.9,59.2 348.8,0" ],
            // about
            4: [ "0,0 124.3,0 86.2,114.9 21.3,203.7 36.5,480.1 65.6,538.7 89.7,660.2 11.7,899.8 0,899.8", "106,555.2 100.7,547.3 50.8,228.2 118.8,134 140.9,0 113,0 75,114.9 10.1,203.7 25.2,480.1 54.3,538.7 78.5,660.2 0.5,899.8 25.3,899.8 133.6,644", "140.9,0 125.2,95.2 122.7,160 84.6,255.8 148.9,518.7 185.1,570.6 40,899.8 25.3,899.8 133.6,644 106,555.2 100.7,547.3 50.9,228.2 118.8,134 140.9,0" ],
            // projects
            2: [ "0,0 63.4,0 36.6,87.3 0,131.8 52.9,394.9 134.3,639.1 156.1,789.1 176,899.8 0,899.8", "163.4,513.4 90.1,382.6 52.9,130 71.1,71.8 89.7,0 63.4,0 36.6,87.3 0,131.8 52.9,394.9 134.3,639.1 156.1,789.1 176,899.8 201.8,899.8 183.4,744.2", "112.8,0 104.9,53.4 88,153.4 140.9,389.8 215.7,482.6 215.7,625.7 201.8,899.8 201.8,899.8 183.4,744.2 163.4,513.4 90.1,382.6 52.9,130 71.1,71.8 89.7,0" ],
            // blog
            3: [ "0,0 0,0 62.1,217.6 62.1,307.6 12.3,545.7 58,678.2 66.4,817 212.7,899.8 0,899.8", "110.7,755.6 73.3,559.3 103.2,324.3 92.5,153 12.3,0 0,0 62.1,217.6 62.1,307.6 12.3,545.7 58,678.2 66.4,817 212.7,899.8 242.5,899.8 112.6,780.2", "12.3,0 127.4,188.1 160.7,319 126.8,540.6 130,765.6 170.1,829.6 242.5,899.8 242.5,900 112.6,780.2 110.7,755.6 73.3,559.3 103.2,324.3 92.5,153 12.3,0" ],
            // contact
            1: [ "0,0 54.9,0 16.5,226.2 53.2,293.8 123.5,464.1 153.5,549 142.7,674.6 60.8,899.8 0,899.8", "186.7,496.4 176,469 103,269.3 44.5,196 65.4,0 54.9,0 16.5,226.2 53.2,293.8 123.5,464.1 153.5,549 142.7,674.6 60.8,899.8 67.6,899.8 164.4,701", "79.6,0 75.8,148.7 201.7,373.9 240,478.6 185.9,702.5 124.7,798.4 67.6,899.8 67.6,899.8 164.4,701 186.7,496.4 176,469 103,269.3 44.5,196 65.4,0" ],
            5: [ "0,0 202,0 116.1,111.8 26.1,129.1 32.9,480.4 75.6,566.1 18.6,723.6 254.2,899.8 0,899.8", "85,617 93.1,547.6 58.6,133.6 136,134 219.3,0 202,0 116.1,111.8 26.1,129.1 32.9,480.4 75.6,566.1 18.6,723.6 254.2,899.8 270.6,899.8 72.8,705.8", "219.3,0 151.3,166.1 104.5,170.3 104.5,548.1 126,711.6 194.1,805.4 309.6,899.8 270.6,899.8 72.8,705.8 85,617 93.1,547.6 58.7,133.6 136,134 219.3,0" ]
        },
        logo: {
            0: [ "115.75,122.5 167.5,132 180,127.7 79.3,69 27.8,70.3 27.8,51.7 0,69.9 12.9,100.6 101.5,96", "170.7,32 81.5,0 73.2,24.4 27.8,51.7 27.8,70.3 79.3,69 180,127.7", "167.5,132 115.75,122.5 101.5,96 12.9,100.6 54.5,200" ],
            1: [ "117,122 167.5,132 180,127.7 103.9,76.5 46.4,81.7 27.8,51.7 0,69.9 12.9,100.6 64.5,125.2", "170.7,32 81.5,0 73.2,24.4 27.8,51.7 46.4,81.7 103.9,76.5 180,127.7", "167.5,132 117,122 64.5,125.2 12.9,100.6 54.5,200" ],
            2: [ "122.26,71.85 167.5,132 180,127.7 163,77 82.85,48.25 27.8,51.7 0,69.9 12.9,100.6 67,74", "170.7,32 81.5,0 73.2,24.4 27.8,51.7 82.85,48.25 163,77 180,127.7", "167.5,132 122.26,71.85 67,74 12.9,100.6 54.5,200" ]
        },
        loader: {
            0: "7.4,44 40.8,48.2 42.3,21.9 34.6,2.8 23.2,36.5",
            1: "17.9,43.8 24.8,30.2 42.3,21.9 34.6,2.8 7.2,18.5",
            2: "26.3,45.3 45,13.5 29.2,15.1 23,1.2 9.4,19.9"
        },
        thumb: {
            0: "57,199 1,72 113,1 163,30 161,113",
            1: "105.8,188.8 32.3,147.5 51.4,13 90,3.9 171.1,92.8 105.8,188.8"
        }
    }
};

jQuery(function() {
    nav.init();
});

var route = {
    init: function() {
        this.bind(), this.detect();
    },
    go: function(e) {
        history.pushState(null, null, wplocal.basePathURL + "/" + e + "/");
    },
    detect: function() {
        var e = window.location.href.replace(wplocal.basePathURL, "");
        e = e.split("/").filter(function(e) {
            return String(e).trim();
        }), "blog" == e[0] && (e[0] = "posts"), restPath = wplocal.basePathURL + "/wp-json/wp/v2/" + e[0] + "?slug=" + e[1], 
        document.location.href != wplocal.basePathURL + "/" && REST.get(restPath).done(function(e) {
            var t = e[0];
            // Switching between postType
            if ("gallery" == t.format) {
                var n = wplocal.basePathURL + "/wp-json/wp/v2/media?parent=" + t.id;
                REST.get(n).done(function(e) {
                    popup.populate(e, "gallery");
                });
            } else "video" == t.format ? popup.populate(t.fields, "video") : // article
            popup.populate(t, "article");
        });
    },
    bind: function() {
        window.onpopstate = function(e) {
            document.location.href == wplocal.basePathURL + "/" ? popup.close() : route.detect();
        };
    }
}, $body = jQuery("body"), $section = $body.find("section"), $nav = $body.find("nav"), $blog = $body.find("#blog"), $project = $body.find("#projects"), $thumbs = $body.find(".thumb"), $popup, scrollspy = {
    sectionOffsets: [],
    index: 0,
    init: function() {
        this.calcPositions(), this.bind();
    },
    calcPositions: function() {
        jQuery(document).find("section").each(function(e) {
            scrollspy.sectionOffsets[e] = this.offsetTop;
        });
    },
    bind: function() {
        window.addEventListener("scroll", function() {
            var e = this.pageYOffset, t = scrollspy.sectionOffsets, n = 0;
            // console.log(yPos);
            for (var r in t) e >= t[r] && (n = r);
            /* Only apply rules and styles in between sections:
       * value of positions changed
       */
            n != scrollspy.index && (scrollspy.index = n, scrollspy.nav(scrollspy.index), scrollspy.brand(scrollspy.index));
        });
    },
    nav: function(e) {
        e--, $nav.find("li").removeClass("active"), e >= 0 && // only do it if needed
        $nav.find("li").eq(e).addClass("active");
    },
    brand: function(e) {
        ohSnap.go("#branding", e);
    }
}, REST = {
    json: {},
    get: function(e) {
        return jQuery.ajax({
            url: e,
            context: document.body,
            dataType: "json"
        });
    },
    store: function(e, t) {
        REST.json[t] = [], e.constructor === Array ? e.map(function(e, n) {
            // push data to parent object
            REST.json[t].push(e);
        }) : REST.json[t] = e;
    }
}, rekt = {
    render: function(e, t) {
        var n = this.component[e](t);
        ReactDOM.render(React.createElement(n, null), document.getElementById(e));
    },
    component: {
        danger: function(e) {
            return {
                __html: e
            };
        },
        projects: function(e) {
            return React.createClass({
                displayName: "Project",
                getInitialState: function() {
                    return null;
                },
                componentWillMount: function() {
                    var t = this;
                    REST.get(e).done(function(e) {
                        t.setState({
                            posts: e
                        });
                    });
                },
                componentDidUpdate: function() {
                    // adding gallery
                    this.state.posts.length && (this.state.posts.map(this.gallery), scrollspy.calcPositions()), 
                    nav.travelOnRdy();
                },
                gallery: function(e, t) {
                    var n = this;
                    if (!e.gallery) {
                        // console.log(v);
                        // console.log(i);
                        var r = wplocal.basePathURL + "/wp-json/wp/v2/media?parent=" + e.id;
                        // console.log(gallery_path);
                        REST.get(r).done(function(e) {
                            // console.log(data);
                            n.state.posts[t].gallery = e;
                        });
                    }
                },
                handleClick: function(e, t, n) {
                    /* Preventing preventDefault on new tab click */
                    if (!n.ctrlKey || !n.shiftKey || !n.metaKey || n.button && 1 != n.button) {
                        // console.log(this.state.posts[i]); 
                        var r = (this.state.posts[e].gallery, t.type + "/" + t.slug);
                        popup.run(this, e), route.go(r), n.preventDefault(), n.stopPropagation();
                    }
                },
                render: function() {
                    var e = this, t = function(t, n) {
                        var r = e.handleClick.bind(e, n, t);
                        return React.createElement("div", {
                            className: "slide",
                            key: "project-" + n
                        }, React.createElement("div", {
                            className: "wrapper"
                        }, React.createElement("h1", null, t.title.rendered), React.createElement("div", {
                            className: "copy",
                            dangerouslySetInnerHTML: rekt.component.danger(t.content.rendered)
                        }), React.createElement("div", {
                            className: "expand"
                        }, React.createElement("a", {
                            href: t.link,
                            onClick: r
                        }, React.createElement("svg", {
                            x: "0px",
                            y: "0px",
                            viewBox: "0 0 40 40"
                        }, React.createElement("line", {
                            x1: "25.3",
                            y1: "20",
                            x2: "14.7",
                            y2: "20"
                        }), React.createElement("line", {
                            x1: "20",
                            y1: "14.7",
                            x2: "20",
                            y2: "25.3"
                        }), React.createElement("circle", {
                            fill: "none",
                            cx: "20",
                            cy: "20",
                            r: "12"
                        })), React.createElement("span", {
                            className: "hero smler"
                        }, "Learn more")))));
                    };
                    return this.state ? React.createElement("div", {
                        className: "slider noslide"
                    }, React.createElement("div", {
                        className: "slides"
                    }, this.state.posts.map(t))) : null;
                }
            });
        },
        blog: function(e) {
            return React.createClass({
                displayName: "Blog",
                getInitialState: function() {
                    return null;
                },
                componentWillMount: function() {
                    var t = this;
                    REST.get(e).done(function(e) {
                        t.setState({
                            posts: e,
                            expanded: null
                        });
                    });
                },
                handleClick: function(e, t, n) {
                    /* Preventing preventDefault on new tab click */
                    n.ctrlKey && n.shiftKey && n.metaKey && (!n.button || 1 == n.button) || (popup.run(this, e), 
                    pathSlug = "blog/" + t.slug, route.go(pathSlug), n.preventDefault(), n.stopPropagation());
                },
                handleHover: {
                    enter: function(e) {
                        ohSnap.go(e.currentTarget, 1);
                    },
                    leave: function(e) {
                        ohSnap.go(e.currentTarget, 0);
                    }
                },
                componentDidMount: function() {
                    nav.travelOnRdy(), scrollspy.calcPositions();
                },
                metas: {
                    counter: 0
                },
                expandSection: function() {
                    this.setState({
                        expanded: !this.state.expanded
                    }), setTimeout(function() {
                        scrollspy.calcPositions();
                    }, 350);
                },
                render: function() {
                    var e = [], t = [], n = 0, r = 1, o = this;
                    this.metas.counter = 0;
                    var i = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ], a = function(a, s) {
                        var u = s;
                        u++;
                        var l = new Date(a.date), c = l.getMonth(), p = l.getFullYear();
                        p -= 2e3;
                        var d = "";
                        a.better_featured_image && a.better_featured_image.media_details.sizes.thumbnail && (d = a.better_featured_image.media_details.sizes.thumbnail.source_url);
                        var f = o.handleClick.bind(o, s, a), h = React.createElement("div", {
                            className: "post",
                            key: "blog" + s
                        }, React.createElement("a", {
                            href: a.link,
                            onClick: f
                        }, React.createElement("div", {
                            className: "thumb",
                            onMouseEnter: o.handleHover.enter,
                            onMouseLeave: o.handleHover.leave
                        }, React.createElement("svg", {
                            x: "0px",
                            y: "0px",
                            viewBox: "0 0 180 200"
                        }, React.createElement("g", {
                            fillRule: "evenodd",
                            clipRule: "evenodd"
                        }, React.createElement("defs", null, React.createElement("polygon", {
                            id: "SVGID_14" + n + "_",
                            points: "57,199,1,72,113,1,163,30,161,113"
                        })), React.createElement("clipPath", {
                            id: "SVGID_14" + r + "_"
                        }, React.createElement("use", {
                            xlinkHref: "#SVGID_14" + n + "_",
                            overflow: "visible"
                        }), "}"), React.createElement("g", {
                            clipPath: "url(#SVGID_14" + r + "_)"
                        }, React.createElement("image", {
                            overflow: "visible",
                            width: "300",
                            height: "300",
                            xlinkHref: d,
                            transform: "matrix(0.6666666666666666,0,0,0.6666666666666666,-10,0)"
                        }))))), React.createElement("div", {
                            className: "excerpt"
                        }, React.createElement("h2", null, i[c], " ", p, React.createElement("span", null, a.title.rendered)))));
                        t.push(h), n += 2, r += 2, e.push(React.createElement("li", {
                            key: "divider" + o.metas.counter
                        }, t)), t = [], o.metas.counter++;
                    };
                    if (this.state) {
                        // console.log(this.state);
                        this.state.posts.map(a);
                        // console.log(output);
                        return React.createElement("div", {
                            className: "slider noslide",
                            "data-expanded": this.state.expanded
                        }, React.createElement("div", {
                            className: "slides",
                            ref: "blogDOM"
                        }, React.createElement("div", {
                            className: "slide"
                        }, React.createElement("div", {
                            className: "wrapper"
                        }, React.createElement("ul", null, e), React.createElement("div", {
                            className: "expand",
                            onClick: this.expandSection
                        }, React.createElement("a", null, React.createElement("svg", {
                            x: "0px",
                            y: "0px",
                            viewBox: "0 0 40 40"
                        }, React.createElement("line", {
                            x1: "25.3",
                            y1: "20",
                            x2: "14.7",
                            y2: "20"
                        }), React.createElement("line", {
                            x1: "20",
                            y1: "14.7",
                            x2: "20",
                            y2: "25.3"
                        }), React.createElement("circle", {
                            fill: "none",
                            cx: "20",
                            cy: "20",
                            r: "12"
                        })), React.createElement("span", {
                            className: "hero smler"
                        }, this.state.expanded ? "Hide posts" : "More posts")))))));
                    }
                    // console.log('render null');
                    return null;
                }
            });
        }
    }
}, popup = {
    plyr: {
        obj: null,
        rektObj: null,
        init: function(e) {
            this.obj = plyr.setup(), this.rektObj = e, this.responsive();
            var t = this.rektObj.state.currentslide, n = this.obj[t];
            n.on("ready", function(e) {
                console.log(n), n.isMuted() || n.toggleMute(), n.play();
            });
        },
        destroy: function() {
            this.obj.map(function(e) {
                e.destroy();
            });
        },
        mathematics: function(e) {
            // console.log('calculating');
            var t = e.height ? e.height : e.videoHeight, n = e.width ? e.width : e.videoWidth, r = n / t, o = window.innerHeight;
            realWidth = o * r, $(e).css("width", realWidth);
        },
        responsive: function() {
            var e = this.rektObj.state.currentslide, t = this.obj[e];
            t.on("ready", function(e) {
                var n = t.getEmbed() ? t.getEmbed().a : t.getMedia();
                "VIDEO" == n.tagName ? // waiting for all the metadatas load to determine height x width
                n.addEventListener("loadedmetadata", function(e) {
                    popup.plyr.mathematics(n);
                }) : popup.plyr.mathematics(n);
            });
        }
    },
    popupdom: document.createElement("div"),
    init: function(e) {
        this.popupdom.id = "popup", document.body.appendChild(this.popupdom), $popup = document.getElementById("popup");
    },
    gallery: function(e, t) {
        return React.createClass({
            getInitialState: function() {
                return null;
            },
            componentDidMount: function() {
                "video" == t.state.datatype && popup.plyr.init(t);
            },
            componentWillUnmount: function() {
                "video" == t.state.datatype && popup.plyr.destroy();
            },
            imgAttr: function(e) {
                var t = {
                    sizes: [ "gallery-medium-large", "gallery-medium", "gallery-small" ],
                    breakpoints: [ 1440, 768, 320 ]
                }, n = {
                    srcset: [],
                    sizes: []
                }, r = !0;
                /** Build srcset
         *  Collecting assets
         *  srcset="http://matheus.li/wp-content/uploads/2017/08/disney-jr-768x914.jpg 768w,
                    http://matheus.li/wp-content/uploads/2017/08/disney-jr-1400x1666.jpg 1400w"
         *
         ** Build sizes
         *  setting attribute for viewport sizes
         *  sizes="(min-width: 1400px) 2560px,
                   (min-width: 768px) 1400px,
                   (min-width: 320px) 768px, 100vw"
         *
         ** Saving sizes for later, @TODO: can't get it to work,
         *  Chrome is already smart enough to switch with 100vw
         */
                // looking for imagesets.sizes matched key strings
                for (var o in e.sizes) {
                    if (t.sizes.indexOf(o) >= 0) {
                        var i = e.sizes[o].source_url + " " + e.sizes[o].width + "w";
                        // sizesOut  = `(min-width: ${imagesets.breakpoints[index]}px) ${obj.sizes[key].width}px`;
                        // determine the biggest size
                        if (e.sizes.full.width > e.sizes[o].width && 1 == r) {
                            var a = e.sizes.full.source_url + " " + e.sizes.full.width + "w";
                            // biggestSize   = `${obj.sizes.full.width}px`;
                            r = !1;
                        }
                        // populate
                        n.srcset.push(i);
                    }
                }
                // populate the biggest srcset attr
                // output.sizes.reverse();
                // output['sizes'].push(biggestSize);
                // output['sizes'].push('100vw');
                return n.srcset.push(a), n.srcset.reverse(), n.sizes = [ "100vw" ], n;
            },
            slide: function(e, n) {
                if (e.media_details) {
                    var r = this.imgAttr(e.media_details), o = r.sizes.join(", "), i = r.srcset.join(", ");
                    // console.log(srcsetSizes);
                    return React.createElement("li", {
                        "data-show": n == t.state.currentslide ? "" : null,
                        "data-transitioning": n == t.state.previouslide ? "" : null,
                        className: e.media_details.height > e.media_details.width ? "portrait" : null,
                        key: "popup" + n
                    }, React.createElement("img", {
                        src: e.source_url,
                        width: e.media_details.width,
                        height: e.media_details.height,
                        srcSet: i,
                        sizes: o
                    }));
                }
                if (e.youtube_id || e.vimeo_id) {
                    var a = e.youtube_id ? "youtube" : "vimeo", s = a ? e.youtube_id : e.vimeo_id;
                    return React.createElement("li", {
                        "data-show": n == t.state.currentslide ? "" : null,
                        "data-transitioning": n == t.state.previouslide ? "" : null,
                        key: "popup" + n
                    }, React.createElement("div", {
                        "data-type": a,
                        "data-video-id": s
                    }));
                }
                return e.video_url ? React.createElement("li", {
                    "data-show": n == t.state.currentslide ? "" : null,
                    "data-transitioning": n == t.state.previouslide ? "" : null,
                    key: "popup" + n
                }, React.createElement("video", {
                    controls: !0
                }, React.createElement("source", {
                    src: e.video_url,
                    type: "video/mp4"
                }))) : "standard" == e.format ? React.createElement("li", {
                    className: "article portrait",
                    "data-show": !0,
                    key: "popup" + n
                }, React.createElement("div", {
                    className: "wrapper",
                    dangerouslySetInnerHTML: rekt.component.danger(e.content.rendered)
                })) : void 0;
            },
            render: function() {
                return React.createElement("ul", null, e.map(this.slide));
            }
        });
    },
    depopulate: function(e) {
        ReactDOM.unmountComponentAtNode($popup), nav.fluid();
    },
    spinner: React.createClass({
        displayName: "spinner",
        render: function() {
            return React.createElement("div", {
                className: "spinner"
            }, React.createElement("svg", {
                x: "0px",
                y: "0px",
                viewBox: "0 0 50 50",
                enableBackground: "new 0 0 50 50"
            }, React.createElement("defs", null, React.createElement("polygon", {
                id: "spinner1",
                points: "11.8,2.8 16,30.5 31.7,45.3 41,35.8 43,23.3"
            })), React.createElement("clipPath", {
                id: "spinner2"
            }, React.createElement("use", {
                xlinkHref: "#spinner1",
                overflow: "visible"
            })), React.createElement("g", {
                transform: "matrix(1 0 0 1 0 0)",
                clipPath: "url(#spinner2)"
            }, React.createElement("image", {
                overflow: "visible",
                width: "2179",
                height: "2967",
                xlinkHref: wplocal.templateURL + "/assets/images/wood.jpg"
            }))), React.createElement("span", null, "loading post"));
        }
    }),
    run: function(e, t) {
        var n = this, r = e.state.posts[t], o = r.format;
        // Switching between postType
        if ("gallery" == o) {
            var i = wplocal.basePathURL + "/wp-json/wp/v2/media?parent=" + e.state.posts[t].id;
            REST.get(i).done(function(r) {
                e.state.posts[t].gallery = r, n.populate(r, "gallery");
            });
        } else if ("video" == o) n.populate(e.state.posts[t].fields, "video"); else {
            // article
            var a = [];
            a[0] = e.state.posts[t], n.populate(a, "article");
        }
    },
    populate: function(e, t) {
        "video" == t && (e = e.videos);
        var n = this, r = this.spinner, o = React.createClass({
            displayName: "Popup",
            getInitialState: function() {
                return {
                    portrait: null,
                    currentslide: 0,
                    previouslide: 0,
                    fetching: null,
                    totalslide: e.length,
                    datatype: t
                };
            },
            componentWillMount: function() {
                var e = this.portraitvslandscape(this.state.currentslide);
                this.setState({
                    portrait: e
                });
            },
            componentDidMount: function() {
                nav.static();
            },
            portraitvslandscape: function(n) {
                return !("video" == t || !e[n].media_details) && e[n].media_details.height > e[n].media_details.width;
            },
            render: function() {
                var t = n.gallery(e, this), o = n.controller.dom(this);
                return React.createElement("div", {
                    className: "slider",
                    "data-fetching": this.state.fetching
                }, React.createElement("div", {
                    className: "content"
                }, React.createElement(t, null)), React.createElement(o, null), React.createElement(r, null));
            }
        });
        ReactDOM.render(React.createElement(o, null), $popup), this.show();
    },
    show: function() {
        $popup.dataset.active = !0;
    },
    close: function() {
        this.depopulate(), $popup.dataset.active = !1, document.location.href != wplocal.basePathURL + "/" && history.pushState(null, null, wplocal.basePathURL + "/");
    },
    controller: {
        dom: function(e) {
            return React.createClass({
                displayName: "PopupNav",
                getInitialState: function() {
                    return {
                        muted: !0
                    };
                },
                handleClick: function(e) {
                    var t = e.currentTarget.dataset.control;
                    this.navigate[t](this);
                },
                navigate: {
                    mute: function(t) {
                        popup.plyr.obj.length && popup.plyr.obj[e.state.currentslide].toggleMute(), t.setState({
                            muted: !!popup.plyr.obj[e.state.currentslide].isMuted()
                        });
                    },
                    fullscreen: function() {
                        popup.plyr.obj[e.state.currentslide].toggleFullscreen();
                    },
                    prev: function() {
                        var t = e.state.currentslide;
                        if (t > 0) {
                            t--;
                            var n = e.portraitvslandscape(t);
                            e.setState({
                                currentslide: t,
                                previouslide: e.state.currentslide,
                                portrait: n
                            });
                        }
                    },
                    next: function() {
                        var t = e.state.currentslide, n = e.state.totalslide;
                        if (n--, t < n) {
                            t++;
                            var r = e.portraitvslandscape(t);
                            e.setState({
                                currentslide: t,
                                previouslide: e.state.currentslide,
                                portrait: r
                            });
                        }
                    },
                    close: function() {
                        popup.close();
                    }
                },
                render: function() {
                    var t = e.state.currentslide;
                    return t++, React.createElement("div", {
                        className: "controller",
                        "data-video": "video" == e.state.datatype ? "" : null,
                        "data-single": 1 == e.state.totalslide ? "" : null
                    }, React.createElement("span", {
                        "data-control": "close",
                        onClick: this.handleClick
                    }, "close"), React.createElement("i", null, t), React.createElement("divider", null, " / "), React.createElement("c", null, e.state.totalslide), React.createElement("t", null, e.state.datatype), React.createElement("span", {
                        "data-control": "prev",
                        onClick: this.handleClick
                    }, "prev"), React.createElement("span", {
                        "data-control": "next",
                        onClick: this.handleClick
                    }, "next"), React.createElement("mute", {
                        "data-control": "mute",
                        onClick: this.handleClick
                    }, this.state.muted ? "unmute" : "mute"), React.createElement("fs", {
                        "data-control": "fullscreen",
                        onClick: this.handleClick
                    }, "fullscreen"), React.createElement("scroll", {
                        "data-hidden": 0 == e.state.portrait ? "" : null
                    }, "scroll"));
                }
            });
        }
    }
}, contact = {
    init: function() {
        var e = document.getElementById("contact"), t = React.createClass({
            displayName: "Thanks",
            getInitialState: function() {
                return {
                    sent: ""
                };
            },
            render: function() {
                return React.createElement("div", {
                    className: "thanks"
                }, React.createElement("h2", null, "I receive your message"), React.createElement("p", null, "Will get back to you shortly."));
            }
        }), n = React.createClass({
            displayName: "Online",
            render: function() {
                return React.createElement("div", null, React.createElement("label", null, "Online"), React.createElement("span", null, React.createElement("a", {
                    href: "https://www.facebook.com/pages/matheusli/177957308894747",
                    target: "_blank"
                }, "facebook")), React.createElement("span", null, React.createElement("a", {
                    href: "https://instagram.com/mathiouchio/",
                    target: "_blank"
                }, "instagram")), React.createElement("span", null, React.createElement("a", {
                    href: "https://dribbble.com/mathiouchio",
                    target: "_blank"
                }, "dribbble")));
            }
        }), r = React.createClass({
            displayName: "Submission",
            render: function() {
                return React.createElement("div", {
                    className: "expand",
                    onClick: this.props.onSubmission
                }, React.createElement("a", {
                    id: "formsubmit"
                }, React.createElement("svg", {
                    x: "0px",
                    y: "0px",
                    viewBox: "0 0 40 40"
                }, React.createElement("line", {
                    x1: "25.3",
                    y1: "20",
                    x2: "14.7",
                    y2: "20"
                }), React.createElement("line", {
                    x1: "20",
                    y1: "14.7",
                    x2: "20",
                    y2: "25.3"
                }), React.createElement("circle", {
                    fill: "none",
                    cx: "20",
                    cy: "20",
                    r: "12"
                })), React.createElement("span", {
                    className: "hero smler"
                }, "Send")));
            }
        }), o = React.createClass({
            displayName: "Forms",
            handleChange: function() {
                this.props.onUserInput(this.refs.emailInput.value, this.refs.messageInput.value);
            },
            checker: [ !1, !1 ],
            validate: function(e) {
                var t = e.currentTarget, n = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
                "email" == t.type && n.test($.trim(t.value)) ? (this.checker[0] = !0, delete t.dataset.invalid) : "textarea" == t.type && $.trim(t.value) ? (this.checker[1] = !0, 
                delete t.dataset.invalid) : t.dataset.invalid = "", // console.log(this.checker);
                this.props.onValidate(this.checker[0], this.checker[1]);
            },
            render: function() {
                return React.createElement("div", {
                    className: "copy"
                }, React.createElement("form", {
                    id: "contactform",
                    action: "http://matheus.li/blog/wp-content/themes/matheus/contact.php",
                    method: "post"
                }, React.createElement("div", null, React.createElement("label", null, "email"), React.createElement("input", {
                    type: "email",
                    name: "email",
                    required: !0,
                    ref: "emailInput",
                    onBlur: this.validate,
                    value: this.props.email,
                    placeholder: "type your email",
                    onChange: this.handleChange
                })), React.createElement("div", null, React.createElement("label", null, "message"), React.createElement("textarea", {
                    type: "text",
                    name: "message",
                    onBlur: this.validate,
                    required: !0,
                    ref: "messageInput",
                    value: this.props.message,
                    placeholder: "type message ...",
                    onChange: this.handleChange
                }))));
            }
        }), i = React.createClass({
            displayName: "Email",
            getInitialState: function() {
                return {
                    sent: null,
                    message: "",
                    email: "",
                    validate: !1,
                    response: null
                };
            },
            handleValidate: function(e, t) {
                // console.log(validateEmail, validateMessage); 
                e && t && this.setState({
                    validate: !0
                });
            },
            handleUserInput: function(e, t) {
                this.setState({
                    email: e,
                    message: t
                });
            },
            handleSubmission: function(e) {
                var t = this;
                // console.log('click');
                if (1 == this.state.validate) {
                    // var dataString = $(dom).find('form').serialize();
                    // var dom = ReactDOM.findDOMNode(this),
                    var n = jQuery.trim(encodeURIComponent(this.state.email)), r = "email=" + n + "&message=" + this.state.message;
                    // console.log(dataString);
                    // console.log($(dom));
                    // console.log('validet');
                    jQuery.ajax({
                        type: "POST",
                        dataType: "text",
                        url: "/blog/wp-content/themes/matheus/contact.php",
                        data: r
                    }).done(function(e) {
                        // console.log(data);
                        t.setState({
                            sent: ""
                        });
                    }).fail(function(e) {
                        // console.log(data.status);
                        t.setState({
                            response: e.status
                        });
                    });
                }
                return !1;
            },
            render: function() {
                return React.createElement("div", {
                    className: "wrapper",
                    "data-sent": this.state.sent
                }, React.createElement(n, null), React.createElement(o, {
                    email: this.state.email,
                    message: this.state.message,
                    onValidate: this.handleValidate,
                    onUserInput: this.handleUserInput
                }), React.createElement(t, {
                    response: this.state.response
                }), React.createElement(r, {
                    onSubmission: this.handleSubmission
                }));
            }
        });
        ReactDOM.render(React.createElement(i, null), e);
    }
};

!function() {
    route.init(), popup.init(), scrollspy.init(), rekt.render("projects", wplocal.basePathURL + "/wp-json/wp/v2/portfolio"), 
    rekt.render("blog", wplocal.basePathURL + "/wp-json/wp/v2/posts?per_page=100"), 
    contact.init();
}();