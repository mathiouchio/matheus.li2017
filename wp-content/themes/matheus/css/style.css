@charset "UTF-8";
@import url(https://fonts.googleapis.com/css?family=Questrial);
/* line 5, scss/compass/reset/_utilities.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

/* line 22, scss/compass/reset/_utilities.scss */
html {
  line-height: 1;
}

/* line 24, scss/compass/reset/_utilities.scss */
ol, ul {
  list-style: none;
}

/* line 26, scss/compass/reset/_utilities.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 28, scss/compass/reset/_utilities.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

/* line 30, scss/compass/reset/_utilities.scss */
q, blockquote {
  quotes: none;
}

/* line 103, scss/compass/reset/_utilities.scss */
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

/* line 32, scss/compass/reset/_utilities.scss */
a img {
  border: none;
}

/* line 116, scss/compass/reset/_utilities.scss */
elements-of-type(html5-block) {
  display: block;
}

/* line 1, scss/partials/_reset.scss */
.clearfix {
  clear: both;
  display: block;
  float: none;
}

/* line 2, scss/partials/_reset.scss */
a {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
}

/* line 1, scss/partials/_extend.scss */
body,
textarea,
input {
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
  font-smoothing: antialised !important;
  -webkit-text-rendering: geometricPrecision !important;
  -moz-text-rendering: geometricPrecision !important;
  text-rendering: geometricPrecision !important;
}

/* line 11, scss/partials/_extend.scss */
section,
.slides > div,
video, #about .thumb img,
#about .thumb svg, #ðŸŒ¶ .slides .slider img,
#projects .slides .slider img, .controller li a {
  height: 100vh;
  width: 100vw;
}

/* line 16, scss/partials/_extend.scss */
#popup .content,
#popup .content ul,
#popup > * {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

@-webkit-keyframes popupenter {
  from {
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@keyframes popupenter {
  from {
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@-webkit-keyframes slideenter {
  from {
    top: 20px;
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    top: 0px;
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@keyframes slideenter {
  from {
    top: 20px;
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    top: 0px;
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@-webkit-keyframes slideout {
  from {
    top: 0px;
    opacity: 1;
  }
  to {
    top: 20px;
    opacity: 0;
  }
}

@keyframes slideout {
  from {
    top: 0px;
    opacity: 1;
  }
  to {
    top: 20px;
    opacity: 0;
  }
}

@-webkit-keyframes menuenter {
  from {
    left: 20px;
    opacity: 0;
  }
  to {
    left: 0px;
    opacity: 1;
  }
}

@keyframes menuenter {
  from {
    left: 20px;
    opacity: 0;
  }
  to {
    left: 0px;
    opacity: 1;
  }
}

/* line 57, scss/partials/_keyframe.scss */
nav li:before, nav li:after, .expand *, .expand svg circle, main .thumb span, #blogs .slider.noslide, #blogs li, .controller span {
  transition-duration: 300ms;
  transition-property: all;
  -webkit-animation-timing-function: easein;
          animation-timing-function: easein;
}

@font-face {
  font-family: 'opensans-condensed';
  src: url("../assets/fonts/OpenSans-CondLight-webfont.eot");
  src: url("../assets/fonts/OpenSans-CondLight-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/OpenSans-CondLight-webfont.otf") format("opentype"), url("../assets/fonts/OpenSans-CondLight-webfont.woff") format("woff"), url("../assets/fonts/OpenSans-CondLight-webfont.ttf") format("truetype"), url("../assets/fonts/OpenSans-CondLight-webfont.svg#PlacardMT") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'opensans-condensed';
  src: url("../assets/fonts/OpenSans-CondLightItalic-webfont.eot");
  src: url("../assets/fonts/OpenSans-CondLightItalic-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.otf") format("opentype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.woff") format("woff"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.ttf") format("truetype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.svg#PlacardMT") format("svg");
  font-weight: bold;
  font-style: italic;
}

/* line 9, scss/style.scss */
[data-hidden] {
  display: none !important;
}

/* line 13, scss/style.scss */
::-moz-selection {
  background: #333;
  color: #efefef;
}
::selection {
  background: #333;
  color: #efefef;
}

/* line 18, scss/style.scss */
body::-webkit-scrollbar {
  display: none;
}

/* line 21, scss/style.scss */
body,
html {
  min-height: 100%;
}

/* line 25, scss/style.scss */
body[data-static] {
  overflow: hidden;
}

/* line 28, scss/style.scss */
body,
textarea,
input {
  font: 15px/1.8em "opensans-condensed", helvetica, arial, sans-serif;
  letter-spacing: 1.2px;
}

/* line 35, scss/style.scss */
svg,
img {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  user-drag: none;
}

/* line 40, scss/style.scss */
.hero, nav span, h1, h2 {
  font: 19px/1.7em "Questrial", helvetica, arial, sans-serif;
  text-transform: uppercase;
  letter-spacing: 3px;
}

/* line 45, scss/style.scss */
.smler {
  font-size: 85%;
}

/* line 48, scss/style.scss */
.fullobj, main .thumb img {
  min-width: 100%;
  width: auto;
  min-height: 100%;
  height: auto;
}

/* line 59, scss/style.scss */
aside {
  position: fixed;
  z-index: 11;
  pointer-events: none;
  overflow: hidden;
}

/* line 64, scss/style.scss */
aside img,
aside svg {
  position: absolute;
}

/* line 68, scss/style.scss */
aside img {
  -webkit-transform: rotate(-7deg);
  transform: rotate(-7deg);
  min-height: 429px;
  z-index: 2;
  height: 53%;
  left: 5.3%;
  top: 21%;
}

/* line 76, scss/style.scss */
aside svg {
  height: 100%;
  width: 100%;
  min-height: 600px;
  min-width: 1000px;
  left: 0;
  top: 0;
  max-width: 1100px;
}

/* line 88, scss/style.scss */
#logo .wrapper > * {
  position: relative;
  top: 20px;
}

/* line 94, scss/style.scss */
#logo.active .wrapper > svg,
#logo.active span {
  -webkit-animation: slideenter 1000ms ease-out forwards;
          animation: slideenter 1000ms ease-out forwards;
}

/* line 98, scss/style.scss */
#logo.active span {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

/* line 103, scss/style.scss */
nav {
  position: fixed;
  top: 50%;
  left: 0;
  width: 20%;
  z-index: 12;
  min-width: 150px;
}

/* line 111, scss/style.scss */
nav:hover li a {
  -webkit-animation: slideenter 300ms ease-in forwards;
          animation: slideenter 300ms ease-in forwards;
  top: 20px;
  opacity: 0;
}

/* line 116, scss/style.scss */
nav:hover li:nth-child(2) a {
  -webkit-animation-delay: .05s;
          animation-delay: .05s;
}

/* line 119, scss/style.scss */
nav:hover li:nth-child(3) a {
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

/* line 122, scss/style.scss */
nav:hover li:nth-child(4) a {
  -webkit-animation-delay: .15s;
          animation-delay: .15s;
}

/* line 125, scss/style.scss */
nav:hover li.active:after {
  left: -70px;
}

/* line 130, scss/style.scss */
nav.hamburger li.active:after {
  left: -47px;
}

/* line 133, scss/style.scss */
nav.hamburger li.active:before {
  opacity: 1;
  left: 14px;
}

/* line 138, scss/style.scss */
nav span {
  letter-spacing: 1px;
  margin-right: 10px;
}

/* line 143, scss/style.scss */
nav li {
  height: 32px;
  position: relative;
  padding-left: 30px;
}

/* line 147, scss/style.scss */
nav li a {
  position: absolute;
  -webkit-animation: slideout 300ms ease-in forwards;
          animation: slideout 300ms ease-in forwards;
  top: 20px;
  opacity: 1;
}

/* line 154, scss/style.scss */
nav li:after,
nav li:before {
  position: absolute;
}

/* line 158, scss/style.scss */
nav li:before {
  left: 9px;
  z-index: 12;
  opacity: 0;
  width: 20px;
  height: 20px;
  content: url("../assets/images/svg/hamburger.svg");
}

/* line 167, scss/style.scss */
nav li:after {
  -webkit-transform: rotate(1deg);
  transform: rotate(1deg);
  -webkit-animation-delay: 0s;
          animation-delay: 0s;
  content: url("../assets/images/activenav.jpg");
  z-index: 11;
  left: -70px;
  top: -29px;
  display: block;
}

/* line 177, scss/style.scss */
nav li.active a {
  -webkit-animation: slideenter 300ms ease-in forwards;
          animation: slideenter 300ms ease-in forwards;
}

/* line 180, scss/style.scss */
nav li.active:after {
  -webkit-transform: rotate(54deg);
  transform: rotate(54deg);
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
}

/* line 185, scss/style.scss */
.preload {
  height: 0;
  width: 0;
  overflow: hidden;
}

/* line 190, scss/style.scss */
.wrapper {
  max-width: 370px;
  width: 100%;
}

/* line 194, scss/style.scss */
#notice p,
.wrapper {
  position: absolute;
  top: 50%;
  left: 23vw;
}

/* line 200, scss/style.scss */
.expand {
  position: absolute !important;
  overflow: auto;
  top: 40%;
  left: 105%;
  width: 60% !important;
}

/* line 207, scss/style.scss */
.expand * {
  float: left;
}

/* line 211, scss/style.scss */
.expand svg {
  height: 40px;
}

/* line 220, scss/style.scss */
.expand a:active:hover svg circle, .expand a:focus:hover svg circle {
  r: 12;
}

/* line 225, scss/style.scss */
.expand a:hover svg circle {
  r: 13.5;
}

/* line 228, scss/style.scss */
.expand a:hover span {
  opacity: 1;
  width: auto;
  margin-left: 10px;
}

/* line 235, scss/style.scss */
.expand span {
  margin: 10px 0 0 0px;
  opacity: 0;
}

/* line 243, scss/style.scss */
h1,
h2, .hero, nav span, h1, h2,
label {
  color: #444;
}

/* line 249, scss/style.scss */
h2 {
  font-size: 16.5px;
  letter-spacing: 3px;
  line-height: 1.3em;
}

/* line 255, scss/style.scss */
#popup .controller {
  background: url("../assets/images/svg/slider-control-bottom.svg") no-repeat scroll 100% 100% transparent;
  bottom: 0;
  left: 40%;
  height: 29px;
  min-width: 90px;
  right: initial;
  top: initial;
  padding: 9px 0px 0 0;
}

/* line 265, scss/style.scss */
#popup .controller span.scroll {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  text-transform: lowercase;
  margin-left: 5px;
}

/* line 271, scss/style.scss */
#popup {
  display: none;
  position: fixed;
  z-index: 10;
}

/* line 276, scss/style.scss */
#popup[data-active], #popup[data-active="true"] {
  display: block;
}

/* line 281, scss/style.scss */
#popup[data-fecthing] #spinner {
  display: block;
  opacity: 1;
}

/* line 286, scss/style.scss */
#popup [data-type="gallery"] li img[data-loading] {
  display: none;
}

/* line 290, scss/style.scss */
#popup video {
  display: none;
}

/* line 296, scss/style.scss */
#popup .slide[data-show], #popup .slide[data-transitioning],
#popup li[data-show],
#popup li[data-transitioning] {
  display: block;
}

/* line 300, scss/style.scss */
#popup .slide[data-show],
#popup li[data-show] {
  z-index: 3;
}

/* line 302, scss/style.scss */
#popup .slide[data-show] img,
#popup li[data-show] img {
  -webkit-animation: slideenter 400ms ease-in;
          animation: slideenter 400ms ease-in;
}

/* line 306, scss/style.scss */
#popup .slide[data-transitioning],
#popup li[data-transitioning] {
  z-index: 2;
}

/* line 309, scss/style.scss */
#popup .slide.portrait,
#popup li.portrait {
  overflow-x: hidden;
  overflow-y: scroll;
}

/* line 313, scss/style.scss */
#popup .slide.portrait img,
#popup li.portrait img {
  width: 100%;
  height: auto;
  -o-object-fit: initial;
     object-fit: initial;
}

/* line 319, scss/style.scss */
#popup .slide img,
#popup li img {
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
  height: 100%;
}

/* line 324, scss/style.scss */
#popup .slide img.portrait,
#popup li img.portrait {
  width: 100%;
  height: auto;
  -o-object-fit: initial;
     object-fit: initial;
}

/* line 332, scss/style.scss */
#popup #spinner {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  background: rgba(255, 255, 255, 0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

/* line 344, scss/style.scss */
#popup #spinner svg {
  width: 50px;
  height: 50px;
}

/* line 354, scss/style.scss */
#popup .controller {
  padding: 4px 20px 0 20px;
}

/* line 357, scss/style.scss */
#popup .controller [data-control="mute"],
#popup .controller [data-control="fullscreen"] {
  display: none;
}

/* line 362, scss/style.scss */
#popup .controller[data-video] scroll {
  display: none;
}

/* line 367, scss/style.scss */
#popup .controller[data-single] i,
#popup .controller[data-single] c,
#popup .controller[data-single] t,
#popup .controller[data-single] divider,
#popup .controller[data-single] [data-control="prev"],
#popup .controller[data-single] [data-control="next"] {
  display: none;
}

/* line 376, scss/style.scss */
#popup .controller > * {
  display: block;
  float: left;
  margin-right: 3px;
  line-height: 1;
  padding: 7px 0 10px;
}

/* line 382, scss/style.scss */
#popup .controller > *[data-control]:hover {
  line-height: .7;
}

/* line 386, scss/style.scss */
#popup .controller span {
  margin: 0px 12px;
}

/* line 389, scss/style.scss */
#popup .controller *:last-child {
  margin-right: 20px;
}

/* line 392, scss/style.scss */
#popup .controller i,
#popup .controller c,
#popup .controller t,
#popup .controller divider {
  line-height: .8;
}

/* line 398, scss/style.scss */
#popup .controller scroll,
#popup .controller mute,
#popup .controller fs,
#popup .controller t {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  text-transform: lowercase;
  margin-left: 5px;
  line-height: .6;
}

/* line 408, scss/style.scss */
#popup li.article {
  background: rgba(255, 255, 255, 0.95);
}

/* line 410, scss/style.scss */
#popup li.article .wrapper {
  -webkit-animation: popupenter 400ms ease-in;
          animation: popupenter 400ms ease-in;
  margin-bottom: 20vh;
}

/* line 414, scss/style.scss */
#popup li.article h1,
#popup li.article h2,
#popup li.article h3,
#popup li.article h4,
#popup li.article h5 {
  line-height: 1.15em;
  margin-bottom: 13px;
}

/* line 422, scss/style.scss */
#popup li.article p {
  margin-bottom: 30px;
}

/* line 425, scss/style.scss */
#popup li.article p img,
#popup li.article img {
  width: 130%;
}

/* line 429, scss/style.scss */
#popup li.article a {
  text-decoration: underline;
}

/* line 436, scss/style.scss */
main #logo svg {
  width: 220px;
  height: auto;
  margin-bottom: 20px;
}

/* line 441, scss/style.scss */
main #logo .wrapper {
  top: 35%;
  left: 37%;
  width: 220px;
  text-align: center;
}

/* line 448, scss/style.scss */
main .thumb {
  width: 180px;
  height: 160px;
  overflow: hidden;
  position: relative;
  margin: 0 auto 25px auto;
}

/* line 454, scss/style.scss */
main .thumb:hover span {
  opacity: 1;
  margin: 51% 14px;
}

/* line 458, scss/style.scss */
main .thumb svg {
  z-index: 4;
  width: 145px;
  height: 160px;
}

/* line 463, scss/style.scss */
main .thumb span {
  z-index: 5;
  font-size: 15px;
  display: block;
  position: relative;
  margin: 58% 14px;
  opacity: 0;
  color: white;
  text-align: right;
}

/* line 474, scss/style.scss */
main .thumb svg,
main .thumb img {
  position: absolute;
  left: 0;
  top: 0;
}

/* line 486, scss/style.scss */
#about .thumb {
  width: 180px;
  height: 180px;
  position: absolute;
  top: 0px;
  float: left;
  z-index: 1;
  margin-left: -30px;
}

/* line 494, scss/style.scss */
#about .thumb img,
#about .thumb svg {
  top: 0;
  left: 0;
}

/* line 500, scss/style.scss */
#about .thumb span {
  opacity: 1;
}

/* line 504, scss/style.scss */
#about .thumb:nth-child(2) {
  z-index: 2;
  left: 165px;
}

/* line 508, scss/style.scss */
#about .wrapper > p span {
  margin-right: 15px;
}

/* line 512, scss/style.scss */
#about .slides > div:nth-child(2) .wrapper {
  margin-top: -90px;
}

/* line 514, scss/style.scss */
#about .slides > div:nth-child(2) .wrapper h1 {
  margin-top: 200px;
}

/* line 521, scss/style.scss */
#blogs .slider.noslide {
  max-height: 100vh;
}

/* line 525, scss/style.scss */
#blogs .slider.noslide[data-expanded="true"] {
  max-height: 999999px;
}

/* line 527, scss/style.scss */
#blogs .slider.noslide[data-expanded="true"] .slide li:nth-child(6n) {
  margin-bottom: 80px;
}

/* line 532, scss/style.scss */
#blogs .expand {
  top: 100px;
}

/* line 535, scss/style.scss */
#blogs .thumb {
  margin-bottom: 0;
}

/* line 538, scss/style.scss */
#blogs .slides > div,
#blogs .slider .slides,
#blogs .slider .slides > div {
  height: auto;
}

/* line 543, scss/style.scss */
#blogs > * {
  display: block;
  width: 100%;
}

/* line 547, scss/style.scss */
#blogs .wrapper {
  position: relative;
  top: 45vh;
  padding-bottom: 45vh;
  left: 0;
}

/* line 552, scss/style.scss */
#blogs .wrapper ul {
  overflow: hidden;
  padding-bottom: 60px;
}

/* line 558, scss/style.scss */
#blogs > .slides > div {
  padding-left: 25%;
  width: 80%;
}

/* line 563, scss/style.scss */
#blogs li {
  width: 100px;
  height: 160px;
  text-align: center;
  margin: 0 20px -50px 0;
  position: relative;
  top: 45%;
  display: block;
  overflow: visible;
  position: initial;
  float: left;
}

/* line 575, scss/style.scss */
#blogs li:nth-child(6n) {
  margin-bottom: 100vh;
}

/* line 578, scss/style.scss */
#blogs li a {
  font-size: 15px;
  display: block;
}

/* line 582, scss/style.scss */
#blogs li h2 {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  height: 23px;
}

/* line 587, scss/style.scss */
#blogs li h2 span {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  letter-spacing: 1.6px;
  margin-left: 10px;
  text-transform: lowercase;
}

/* line 594, scss/style.scss */
#blogs li .excerpt {
  display: none;
}

/* line 599, scss/style.scss */
#ðŸŒ¶,
#projects {
  margin-left: 1px;
  height: auto;
}

/* line 607, scss/style.scss */
#ðŸŒ¶ .slides section,
#ðŸŒ¶ .slides > div,
#ðŸŒ¶ .slides video, #ðŸŒ¶ .slides #about .thumb img, #about .thumb #ðŸŒ¶ .slides img,
#ðŸŒ¶ .slides #about .thumb svg, #about .thumb #ðŸŒ¶ .slides svg, #ðŸŒ¶ .slides .slider img, #ðŸŒ¶ .slides .controller li a, .controller li #ðŸŒ¶ .slides a,
#projects .slides section,
#projects .slides > div,
#projects .slides video,
#projects .slides #about .thumb img,
#about .thumb #projects .slides img,
#projects .slides #about .thumb svg,
#about .thumb #projects .slides svg,
#projects .slides .slider img,
#projects .slides .controller li a,
.controller li #projects .slides a {
  position: relative;
}

/* line 613, scss/style.scss */
#contact .thanks {
  margin-top: 15px;
  display: none;
}

/* line 616, scss/style.scss */
#contact .thanks h2 {
  font-size: 16.5px;
}

/* line 620, scss/style.scss */
#contact [data-invalid] {
  box-shadow: inset 0 -2px 0px -1px #999;
}

/* line 624, scss/style.scss */
#contact [data-sent] .copy {
  display: none;
}

/* line 627, scss/style.scss */
#contact [data-sent] .thanks {
  display: initial;
}

/* line 631, scss/style.scss */
#contact .expand {
  top: 20%;
}

/* line 634, scss/style.scss */
#contact label {
  font-family: "Questrial", helvetica, arial, sans-serif;
  text-transform: uppercase;
  float: left;
  width: 110px;
}

/* line 640, scss/style.scss */
#contact span {
  margin-right: 25px;
}

/* line 643, scss/style.scss */
#contact input,
#contact textarea {
  padding: 0;
  outline: none;
  width: 255px;
  background: none;
  border: none;
}

/* line 651, scss/style.scss */
#contact textarea {
  height: 130px;
  resize: none;
}

/* line 652, scss/style.scss */
#contact .wrapper div {
  margin-bottom: 5px;
}

/* line 656, scss/style.scss */
section {
  overflow: hidden;
  position: relative;
}

/* line 659, scss/style.scss */
section .navigate {
  bottom: 20px !important;
  top: initial;
}

/* line 664, scss/style.scss */
#spinner,
aside,
#popup,
section,
#notice {
  width: 90.5vw;
  height: 100vh;
  left: 9.5vw;
  top: 0;
}

/* line 675, scss/style.scss */
.slider .slide,
.slider li {
  position: absolute;
  overflow: hidden;
  width: 100vw;
  height: 100vh;
}

/* line 682, scss/style.scss */
.slider.noslide {
  min-height: 100vh;
  height: auto;
}

/* line 685, scss/style.scss */
.slider.noslide .slides,
.slider.noslide li {
  position: initial;
}

/* line 688, scss/style.scss */
.slider.noslide .slides > div,
.slider.noslide li > div {
  position: relative;
  display: block;
}

/* line 706, scss/style.scss */
.slider .slides > [data-show] {
  -webkit-animation: slideenter 400ms ease-in;
          animation: slideenter 400ms ease-in;
  display: block;
  z-index: 1;
  overflow: hidden;
}

/* line 712, scss/style.scss */
.slider .slides [data-show][data="scroll"],
.slider .slides div.standby[data="scroll"] {
  overflow-y: scroll;
  overflow-x: hidden;
}

/* line 717, scss/style.scss */
.slider .slides > div.standby {
  z-index: 0;
  display: block;
  overflow: hidden;
}

/* line 725, scss/style.scss */
.slider.active.extended > .controller {
  display: none;
}

/* line 727, scss/style.scss */
.slider.active .controller li a {
  -webkit-animation: menuenter 300ms ease-in forwards;
          animation: menuenter 300ms ease-in forwards;
  -webkit-animation-delay: .3s;
          animation-delay: .3s;
  left: 20px;
  opacity: 0;
}

/* line 733, scss/style.scss */
.slider.active .controller li:nth-child(2) a {
  -webkit-animation-delay: .4s;
          animation-delay: .4s;
}

/* line 736, scss/style.scss */
.slider.active .controller li:nth-child(3) a {
  -webkit-animation-delay: .5s;
          animation-delay: .5s;
}

/* line 739, scss/style.scss */
.slider.active .controller li:nth-child(4) a {
  -webkit-animation-delay: .6s;
          animation-delay: .6s;
}

/* line 744, scss/style.scss */
.expand svg {
  enable-background: new 0 0 40 40;
}

/* line 746, scss/style.scss */
.expand svg > * {
  fill: none;
  stroke: #484848;
  stroke-width: 1.5;
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* line 754, scss/style.scss */
.controller {
  position: absolute;
  z-index: 4;
  right: 0;
  top: 50%;
  padding-left: 8px;
  font-family: "Questrial", helvetica, arial, sans-serif;
  text-transform: uppercase;
}

/* line 762, scss/style.scss */
.controller [data-control] {
  cursor: pointer;
}

/* line 764, scss/style.scss */
.controller [data-control]:hover {
  margin-bottom: 4px;
}

/* line 768, scss/style.scss */
.controller span {
  font-size: 0.9em;
}

/* line 772, scss/style.scss */
.controller span.close {
  margin-left: 15px !important;
}

/* line 775, scss/style.scss */
.controller span.next:hover,
.controller span.prev:hover,
.controller span.close:hover {
  bottom: 3px !important;
  top: -3px !important;
  opacity: 1 !important;
  -webkit-animation-fill-mode: initial !important;
          animation-fill-mode: initial !important;
}

/* line 783, scss/style.scss */
.controller ul {
  padding: 20px 7px;
}

/* line 786, scss/style.scss */
.controller li {
  width: 15px;
  height: 22px;
  margin: 5px;
  position: relative;
  background-size: 100%;
}

/* line 792, scss/style.scss */
.controller li a {
  position: absolute;
  display: block;
  background: url("../assets/images/remote.png");
}

/* line 799, scss/style.scss */
.controller li.active {
  width: 23px;
  height: 28px;
  margin: 5px 7px 5px 0px;
}

/* line 801, scss/style.scss */
.controller li.active a {
  background: url("../assets/images/activeremote.png");
}

/* line 807, scss/style.scss */
.plyr .plyr__controls {
  display: none;
}

/* line 810, scss/style.scss */
.plyr button[data-plyr="play"] {
  display: none;
}

/* line 813, scss/style.scss */
.plyr .plyr__video-embed {
  height: 100vh;
  padding-bottom: 0;
}

/* line 816, scss/style.scss */
.plyr .plyr__video-embed iframe {
  margin-left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

/* line 822, scss/style.scss */
#notice {
  position: fixed;
  top: 0;
  display: none;
}

@media (max-width: 768px) {
  /* line 828, scss/style.scss */
  .wrapper,
  #notice p {
    width: 50%;
    left: 32%;
  }
  /* line 833, scss/style.scss */
  main #blogs .post {
    width: 68px;
  }
}

@media (max-width: 768px) and (orientation: landscape) {
  /* line 838, scss/style.scss */
  nav {
    display: none;
  }
  /* line 841, scss/style.scss */
  main #logo .wrapper {
    top: 20%;
  }
  /* line 844, scss/style.scss */
  .wrapper {
    max-width: 300px;
    top: 40%;
  }
  /* line 848, scss/style.scss */
  #spinner,
  aside,
  #popup,
  section,
  #notice {
    width: 105.5vw;
    height: 100vh;
    left: -5.5vw;
    top: 0;
  }
  /* line 858, scss/style.scss */
  #notice p {
    width: 40%;
    left: 45%;
  }
  /* line 862, scss/style.scss */
  .slides > div,
  .slider .slides > div,
  section {
    height: 125vh;
  }
}

@media (orientation: landscape) {
  /* line 869, scss/style.scss */
  #notice {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
