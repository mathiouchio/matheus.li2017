@import url("https://fonts.googleapis.com/css?family=Questrial");
/* line 5, scss/compass/reset/_utilities.scss */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

/* line 22, scss/compass/reset/_utilities.scss */
html {
  line-height: 1;
}

/* line 24, scss/compass/reset/_utilities.scss */
ol, ul {
  list-style: none;
}

/* line 26, scss/compass/reset/_utilities.scss */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* line 28, scss/compass/reset/_utilities.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

/* line 30, scss/compass/reset/_utilities.scss */
q, blockquote {
  quotes: none;
}

/* line 103, scss/compass/reset/_utilities.scss */
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

/* line 32, scss/compass/reset/_utilities.scss */
a img {
  border: none;
}

/* line 116, scss/compass/reset/_utilities.scss */
elements-of-type(html5-block) {
  display: block;
}

/* line 1, scss/partials/_reset.scss */
.clearfix {
  clear: both;
  display: block;
  float: none;
}

/* line 2, scss/partials/_reset.scss */
a {
  color: inherit;
  cursor: pointer;
  text-decoration: none;
}

/* line 1, scss/partials/_extend.scss */
body,
textarea,
input {
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale !important;
  font-smoothing: antialised !important;
  -webkit-text-rendering: geometricPrecision !important;
  -moz-text-rendering: geometricPrecision !important;
  text-rendering: geometricPrecision !important;
}

/* line 9, scss/partials/_extend.scss */
section,
.slides > div,
video, .controller li a, #about .thumb img,
#about .thumb svg, #projects .slides .slider img {
  height: 100vh;
  width: 100vw;
}

/* line 13, scss/partials/_extend.scss */
#popup .content,
#popup .content ul,
#popup > * {
  height: 100%;
  overflow: hidden;
  width: 100%;
}

@-webkit-keyframes popupenter {
  from {
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@keyframes popupenter {
  from {
    opacity: 0;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@-webkit-keyframes slideenter {
  from {
    opacity: 0;
    top: 20px;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    top: 0;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@keyframes slideenter {
  from {
    opacity: 0;
    top: 20px;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 3deg);
  }
  to {
    opacity: 1;
    top: 0;
    -webkit-transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
            transform: perspective(400px) translate3d(0, 0, 0) scale3d(1, 1, 1) rotate3d(3, 0, 0, 0deg);
  }
}

@-webkit-keyframes slideout {
  from {
    opacity: 1;
    top: 0;
  }
  to {
    opacity: 0;
    top: 20px;
  }
}

@keyframes slideout {
  from {
    opacity: 1;
    top: 0;
  }
  to {
    opacity: 0;
    top: 20px;
  }
}

@-webkit-keyframes menuenter {
  from {
    left: 20px;
    opacity: 0;
  }
  to {
    left: 0;
    opacity: 1;
  }
}

@keyframes menuenter {
  from {
    left: 20px;
    opacity: 0;
  }
  to {
    left: 0;
    opacity: 1;
  }
}

/* line 55, scss/partials/_keyframe.scss */
nav li::before, nav li::after, .controller span, .expand *, .expand svg circle, main .thumb span, #blogs li, #blogs .slides {
  -webkit-animation-timing-function: easein;
          animation-timing-function: easein;
  transition-duration: 300ms;
  transition-property: all;
}

@font-face {
  font-family: "opensans-condensed";
  font-style: normal;
  font-weight: normal;
  src: url("../assets/fonts/OpenSans-CondLight-webfont.eot");
  src: url("../assets/fonts/OpenSans-CondLight-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/OpenSans-CondLight-webfont.otf") format("opentype"), url("../assets/fonts/OpenSans-CondLight-webfont.woff") format("woff"), url("../assets/fonts/OpenSans-CondLight-webfont.ttf") format("truetype"), url("../assets/fonts/OpenSans-CondLight-webfont.svg#PlacardMT") format("svg");
}

@font-face {
  font-family: "opensans-condensed";
  font-style: italic;
  font-weight: bold;
  src: url("../assets/fonts/OpenSans-CondLightItalic-webfont.eot");
  src: url("../assets/fonts/OpenSans-CondLightItalic-webfont.eot?#iefix") format("embedded-opentype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.otf") format("opentype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.woff") format("woff"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.ttf") format("truetype"), url("../assets/fonts/OpenSans-CondLightItalic-webfont.svg#PlacardMT") format("svg");
}

/* line 8, scss/style.scss */
#popup .controller {
  background: url("../assets/images/svg/slider-control-bottom.svg") no-repeat scroll 100% 100% transparent;
  bottom: 0;
  height: 29px;
  left: 40%;
  min-width: 90px;
  padding: 9px 0 0;
  right: initial;
  top: initial;
}

/* line 17, scss/style.scss */
#popup .controller span.scroll {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  margin-left: 5px;
  text-transform: lowercase;
}

/* line 23, scss/style.scss */
[data-hidden] {
  display: none !important;
}

/* line 26, scss/style.scss */
::-moz-selection {
  background: #333;
  color: #efefef;
}
::selection {
  background: #333;
  color: #efefef;
}

/* line 30, scss/style.scss */
::-webkit-scrollbar {
  display: none;
}

/* line 33, scss/style.scss */
body,
html {
  min-height: 100%;
}

/* line 37, scss/style.scss */
body[data-static] {
  overflow: hidden;
}

/* line 40, scss/style.scss */
body,
textarea,
input {
  font: 15px/1.8em "opensans-condensed", helvetica, arial, sans-serif;
  letter-spacing: 1.2px;
}

/* line 50, scss/style.scss */
h1,
h2,
.hero,
h1,
h2,
nav span,
label {
  color: #444;
}

/* line 56, scss/style.scss */
h2 {
  font-size: 16.5px;
  letter-spacing: 3px;
  line-height: 1.3em;
}

/* line 62, scss/style.scss */
svg,
img {
  user-drag: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

/* line 67, scss/style.scss */

.hero,
h1,
h2,
nav span {
  font: 19px/1.7em "Questrial", helvetica, arial, sans-serif;
  letter-spacing: 3px;
  text-transform: uppercase;
}

/* line 72, scss/style.scss */
.smler {
  font-size: 85%;
}

/* line 75, scss/style.scss */
.fullobj, main .thumb img {
  height: auto;
  min-height: 100%;
  min-width: 100%;
  width: auto;
}

/* line 86, scss/style.scss */
aside {
  overflow: hidden;
  pointer-events: none;
  position: fixed;
  z-index: 11;
}

/* line 91, scss/style.scss */
aside img,
aside svg {
  position: absolute;
}

/* line 95, scss/style.scss */
aside img {
  height: 53%;
  left: 5.3%;
  min-height: 429px;
  top: 21%;
  z-index: 2;
  -webkit-transform: rotate(-7deg);
  transform: rotate(-7deg);
}

/* line 103, scss/style.scss */
aside svg {
  height: 100%;
  left: 0;
  max-width: 1100px;
  min-height: 600px;
  min-width: 1000px;
  top: 0;
  width: 100%;
}

/* line 113, scss/style.scss */
nav {
  left: 0;
  min-width: 150px;
  position: fixed;
  top: 50%;
  width: 20%;
  z-index: 12;
}

/* line 120, scss/style.scss */
nav li {
  height: 32px;
  padding-left: 30px;
  position: relative;
}

/* line 124, scss/style.scss */
nav li::after, nav li::before {
  position: absolute;
}

/* line 128, scss/style.scss */
nav li::before {
  content: url("../assets/images/svg/hamburger.svg");
  height: 20px;
  left: 9px;
  opacity: 0;
  width: 20px;
  z-index: 12;
}

/* line 137, scss/style.scss */
nav li::after {
  -webkit-animation-delay: 0s;
          animation-delay: 0s;
  content: url("../assets/images/activenav.jpg");
  display: block;
  left: -70px;
  top: -29px;
  z-index: 11;
  -webkit-transform: rotate(1deg);
  transform: rotate(1deg);
}

/* line 147, scss/style.scss */
nav li a {
  -webkit-animation: slideout 300ms ease-in forwards;
          animation: slideout 300ms ease-in forwards;
  opacity: 1;
  position: absolute;
  top: 20px;
}

/* line 153, scss/style.scss */
nav li.active a {
  -webkit-animation: slideenter 300ms ease-in forwards;
          animation: slideenter 300ms ease-in forwards;
}

/* line 156, scss/style.scss */
nav li.active::after {
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-transform: rotate(54deg);
  transform: rotate(54deg);
}

/* line 162, scss/style.scss */
nav:hover li a {
  -webkit-animation: slideenter 300ms ease-in forwards;
          animation: slideenter 300ms ease-in forwards;
  opacity: 0;
  top: 20px;
}

/* line 167, scss/style.scss */
nav:hover li:nth-child(2) a {
  -webkit-animation-delay: .05s;
          animation-delay: .05s;
}

/* line 170, scss/style.scss */
nav:hover li:nth-child(3) a {
  -webkit-animation-delay: .1s;
          animation-delay: .1s;
}

/* line 173, scss/style.scss */
nav:hover li:nth-child(4) a {
  -webkit-animation-delay: .15s;
          animation-delay: .15s;
}

/* line 176, scss/style.scss */
nav:hover li.active::after {
  left: -70px;
}

/* line 181, scss/style.scss */
nav.hamburger li.active::after {
  left: -47px;
}

/* line 184, scss/style.scss */
nav.hamburger li.active::before {
  left: 14px;
  opacity: 1;
}

/* line 189, scss/style.scss */
nav span {
  letter-spacing: 1px;
  margin-right: 10px;
}

/* line 195, scss/style.scss */
.wrapper {
  max-width: 370px;
  width: 100%;
}

/* line 199, scss/style.scss */
#notice p,
.wrapper {
  left: 23vw;
  position: absolute;
  top: 50%;
}

/* line 205, scss/style.scss */
.preload {
  height: 0;
  overflow: hidden;
  width: 0;
}

/* line 210, scss/style.scss */
.controller {
  font-family: "Questrial", helvetica, arial, sans-serif;
  padding-left: 8px;
  position: absolute;
  right: 0;
  text-transform: uppercase;
  top: 50%;
  z-index: 4;
}

/* line 218, scss/style.scss */
.controller [data-control] {
  cursor: pointer;
}

/* line 220, scss/style.scss */
.controller [data-control]:hover {
  margin-bottom: 4px;
}

/* line 224, scss/style.scss */
.controller span {
  font-size: .9em;
}

/* line 228, scss/style.scss */
.controller span.close {
  margin-left: 15px !important;
}

/* line 231, scss/style.scss */
.controller span.next:hover,
.controller span.prev:hover,
.controller span.close:hover {
  -webkit-animation-fill-mode: initial !important;
          animation-fill-mode: initial !important;
  bottom: 3px !important;
  opacity: 1 !important;
  top: -3px !important;
}

/* line 239, scss/style.scss */
.controller ul {
  padding: 20px 7px;
}

/* line 242, scss/style.scss */
.controller li {
  background-size: 100%;
  height: 22px;
  margin: 5px;
  position: relative;
  width: 15px;
}

/* line 248, scss/style.scss */
.controller li a {
  background: url("../assets/images/remote.png");
  display: block;
  position: absolute;
}

/* line 255, scss/style.scss */
.controller li.active {
  height: 28px;
  margin: 5px 7px 5px 0;
  width: 23px;
}

/* line 259, scss/style.scss */
.controller li.active a {
  background: url("../assets/images/activeremote.png");
}

/* line 264, scss/style.scss */
.expand {
  left: 105%;
  overflow: auto;
  position: absolute !important;
  top: 40%;
  width: 60% !important;
}

/* line 270, scss/style.scss */
.expand * {
  float: left;
}

/* line 274, scss/style.scss */
.expand svg {
  enable-background: new 0 0 40 40;
  height: 40px;
}

/* line 277, scss/style.scss */
.expand svg > * {
  fill: none;
  stroke: #484848;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 1.5;
}

/* line 288, scss/style.scss */
.expand span {
  margin: 10px 0 0;
  opacity: 0;
}

/* line 294, scss/style.scss */
.expand a:hover svg circle {
  r: 13.5;
}

/* line 297, scss/style.scss */
.expand a:hover span {
  margin-left: 10px;
  opacity: 1;
  width: auto;
}

/* line 305, scss/style.scss */
.expand a:active:hover svg circle, .expand a:focus:hover svg circle {
  r: 12;
}

/* line 312, scss/style.scss */
.slider .slide,
.slider li {
  height: 100vh;
  overflow: hidden;
  position: absolute;
  width: 100vw;
}

/* line 320, scss/style.scss */
.slider .slides > [data-show] {
  -webkit-animation: slideenter 400ms ease-in;
          animation: slideenter 400ms ease-in;
  display: block;
  overflow: hidden;
  z-index: 1;
}

/* line 326, scss/style.scss */
.slider .slides [data-show][data="scroll"],
.slider .slides div.standby[data="scroll"] {
  overflow-x: hidden;
  overflow-y: scroll;
}

/* line 331, scss/style.scss */
.slider .slides > div.standby {
  display: block;
  overflow: hidden;
  z-index: 0;
}

/* line 337, scss/style.scss */
.slider.noslide {
  height: auto;
  min-height: 100vh;
}

/* line 340, scss/style.scss */
.slider.noslide li,
.slider.noslide .slides {
  position: initial;
}

/* line 343, scss/style.scss */
.slider.noslide li > div,
.slider.noslide .slides > div {
  display: block;
  position: relative;
}

/* line 351, scss/style.scss */
.slider.active.extended > .controller {
  display: none;
}

/* line 353, scss/style.scss */
.slider.active .controller li a {
  -webkit-animation: menuenter 300ms ease-in forwards;
          animation: menuenter 300ms ease-in forwards;
  -webkit-animation-delay: .3s;
          animation-delay: .3s;
  left: 20px;
  opacity: 0;
}

/* line 359, scss/style.scss */
.slider.active .controller li:nth-child(2) a {
  -webkit-animation-delay: .4s;
          animation-delay: .4s;
}

/* line 362, scss/style.scss */
.slider.active .controller li:nth-child(3) a {
  -webkit-animation-delay: .5s;
          animation-delay: .5s;
}

/* line 365, scss/style.scss */
.slider.active .controller li:nth-child(4) a {
  -webkit-animation-delay: .6s;
          animation-delay: .6s;
}

/* line 371, scss/style.scss */
main .thumb {
  height: 160px;
  margin: 0 auto 25px;
  overflow: hidden;
  position: relative;
  width: 180px;
}

/* line 377, scss/style.scss */
main .thumb svg {
  height: 160px;
  width: 145px;
  z-index: 4;
}

/* line 382, scss/style.scss */
main .thumb span {
  color: white;
  display: block;
  font-size: 15px;
  margin: 58% 14px;
  opacity: 0;
  position: relative;
  text-align: right;
  z-index: 5;
}

/* line 393, scss/style.scss */
main .thumb svg,
main .thumb img {
  left: 0;
  position: absolute;
  top: 0;
}

/* line 402, scss/style.scss */
main .thumb:hover span {
  margin: 51% 14px;
  opacity: 1;
}

/* line 408, scss/style.scss */
#spinner,
aside,
#popup,
section,
#notice {
  height: 100vh;
  left: 9.5vw;
  top: 0;
  width: 90.5vw;
}

/* line 419, scss/style.scss */
#blogs li {
  display: block;
  float: left;
  height: 160px;
  margin: 0 20px -50px 0;
  overflow: visible;
  position: relative;
  position: initial;
  text-align: center;
  top: 45%;
  width: 100px;
}

/* line 430, scss/style.scss */
#blogs li:nth-child(6n) {
  margin-bottom: 100vh;
}

/* line 433, scss/style.scss */
#blogs li a {
  display: block;
  font-size: 15px;
}

/* line 437, scss/style.scss */
#blogs li h2 {
  height: 23px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* line 442, scss/style.scss */
#blogs li h2 span {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  letter-spacing: 1.6px;
  margin-left: 10px;
  text-transform: lowercase;
}

/* line 449, scss/style.scss */
#blogs li .excerpt {
  display: none;
}

/* line 454, scss/style.scss */
#blogs .slides {
  max-height: 100vh;
}

/* line 456, scss/style.scss */
#blogs .slides[data-expanded] {
  max-height: 999999px;
}

/* line 458, scss/style.scss */
#blogs .slides[data-expanded] .slide li:nth-child(6n) {
  margin-bottom: 80px;
}

/* line 465, scss/style.scss */
#blogs > .slides > div {
  padding-left: 25%;
  width: 80%;
}

/* line 470, scss/style.scss */
#blogs .expand {
  top: 100px;
}

/* line 473, scss/style.scss */
#blogs .thumb {
  margin-bottom: 0;
}

/* line 476, scss/style.scss */
#blogs .slides > div,
#blogs .slider .slides,
#blogs .slider .slides > div {
  height: auto;
}

/* line 481, scss/style.scss */
#blogs > * {
  display: block;
  width: 100%;
}

/* line 485, scss/style.scss */
#blogs .wrapper {
  left: 0;
  padding-bottom: 45vh;
  position: relative;
  top: 45vh;
}

/* line 490, scss/style.scss */
#blogs .wrapper ul {
  overflow: hidden;
  padding-bottom: 60px;
}

/* line 497, scss/style.scss */
#logo svg {
  height: auto;
  margin-bottom: 20px;
  width: 220px;
}

/* line 502, scss/style.scss */
#logo .wrapper {
  left: 37%;
  text-align: center;
  top: 35%;
  width: 220px;
}

/* line 507, scss/style.scss */
#logo .wrapper > * {
  position: relative;
  top: 20px;
}

/* line 513, scss/style.scss */
#logo.active .wrapper > svg,
#logo.active span {
  -webkit-animation: slideenter 1000ms ease-out forwards;
          animation: slideenter 1000ms ease-out forwards;
}

/* line 517, scss/style.scss */
#logo.active span {
  -webkit-animation-delay: 500ms;
          animation-delay: 500ms;
}

/* line 522, scss/style.scss */
#popup {
  display: none;
  position: fixed;
  z-index: 10;
}

/* line 526, scss/style.scss */
#popup img {
  display: block;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  width: 100%;
}

/* line 531, scss/style.scss */
#popup img.portrait {
  height: auto;
  -o-object-fit: initial;
     object-fit: initial;
  width: 100%;
}

/* line 542, scss/style.scss */
#popup li.article {
  background: rgba(255, 255, 255, 0.95);
}

/* line 544, scss/style.scss */
#popup li.article .wrapper {
  -webkit-animation: popupenter 400ms ease-in;
          animation: popupenter 400ms ease-in;
  margin-bottom: 20vh;
}

/* line 548, scss/style.scss */
#popup li.article h1,
#popup li.article h2,
#popup li.article h3,
#popup li.article h4,
#popup li.article h5 {
  line-height: 1.15em;
  margin-bottom: 13px;
}

/* line 556, scss/style.scss */
#popup li.article p {
  margin-bottom: 30px;
}

/* line 559, scss/style.scss */
#popup li.article img,
#popup li.article p img {
  width: 130%;
}

/* line 563, scss/style.scss */
#popup li.article a {
  text-decoration: underline;
}

/* line 569, scss/style.scss */
#popup li[data-show], #popup li[data-transitioning],
#popup .slide[data-show],
#popup .slide[data-transitioning] {
  display: block;
}

/* line 573, scss/style.scss */
#popup li[data-show],
#popup .slide[data-show] {
  z-index: 3;
}

/* line 575, scss/style.scss */
#popup li[data-show] img,
#popup .slide[data-show] img {
  -webkit-animation: slideenter 400ms ease-in;
          animation: slideenter 400ms ease-in;
}

/* line 579, scss/style.scss */
#popup li[data-show].portrait,
#popup .slide[data-show].portrait {
  overflow-x: hidden;
  overflow-y: scroll;
}

/* line 582, scss/style.scss */
#popup li[data-show].portrait img,
#popup .slide[data-show].portrait img {
  height: auto;
  -o-object-fit: initial;
     object-fit: initial;
  width: 100%;
}

/* line 588, scss/style.scss */
#popup li[data-transitioning],
#popup .slide[data-transitioning] {
  z-index: 2;
}

/* line 592, scss/style.scss */
#popup #spinner {
  align-items: center;
  background: rgba(255, 255, 255, 0.9);
  display: flex;
  flex-direction: column;
  justify-content: center;
  left: 0;
  position: absolute;
  top: 0;
  z-index: 1;
}

/* line 602, scss/style.scss */
#popup #spinner svg {
  height: 50px;
  width: 50px;
}

/* line 607, scss/style.scss */
#popup [data-type="gallery"] li img[data-loading] {
  display: none;
}

/* line 610, scss/style.scss */
#popup video {
  display: none;
}

/* line 613, scss/style.scss */
#popup .controller {
  padding: 4px 20px 0;
}

/* line 615, scss/style.scss */
#popup .controller > * {
  display: block;
  float: left;
  line-height: 1;
  margin-right: 3px;
  padding: 7px 0 10px;
}

/* line 621, scss/style.scss */
#popup .controller > *[data-control]:hover {
  line-height: .7;
}

/* line 625, scss/style.scss */
#popup .controller span {
  margin: 0 12px;
}

/* line 628, scss/style.scss */
#popup .controller *:last-child {
  margin-right: 20px;
}

/* line 631, scss/style.scss */
#popup .controller i,
#popup .controller c,
#popup .controller t,
#popup .controller divider {
  line-height: .8;
}

/* line 637, scss/style.scss */
#popup .controller scroll,
#popup .controller mute,
#popup .controller fs,
#popup .controller t {
  font-family: "opensans-condensed", helvetica, arial, sans-serif;
  line-height: .6;
  margin-left: 5px;
  text-transform: lowercase;
}

/* line 646, scss/style.scss */
#popup .controller [data-control="mute"],
#popup .controller [data-control="fullscreen"] {
  display: none;
}

/* line 650, scss/style.scss */
#popup .controller[data-video] {
  padding-right: 60px;
}

/* line 652, scss/style.scss */
#popup .controller[data-video] scroll {
  display: none;
}

/* line 655, scss/style.scss */
#popup .controller[data-video] fs,
#popup .controller[data-video] mute {
  display: block;
}

/* line 661, scss/style.scss */
#popup .controller[data-single] i,
#popup .controller[data-single] c,
#popup .controller[data-single] t,
#popup .controller[data-single] divider,
#popup .controller[data-single] [data-control="prev"],
#popup .controller[data-single] [data-control="next"] {
  display: none;
}

/* line 672, scss/style.scss */
#popup[data-active], #popup[data-active="true"] {
  display: block;
}

/* line 677, scss/style.scss */
#popup[data-fecthing] #spinner {
  display: block;
  opacity: 1;
}

/* line 684, scss/style.scss */
#about .thumb {
  float: left;
  height: 180px;
  margin-left: -30px;
  position: absolute;
  top: 0;
  width: 180px;
  z-index: 1;
}

/* line 692, scss/style.scss */
#about .thumb img,
#about .thumb svg {
  left: 0;
  top: 0;
}

/* line 698, scss/style.scss */
#about .thumb span {
  opacity: 1;
}

/* line 702, scss/style.scss */
#about .thumb:nth-child(2) {
  left: 165px;
  z-index: 2;
}

/* line 706, scss/style.scss */
#about .wrapper > p span {
  margin-right: 15px;
}

/* line 710, scss/style.scss */
#about .slides > div:nth-child(2) .wrapper {
  margin-top: -90px;
}

/* line 712, scss/style.scss */
#about .slides > div:nth-child(2) .wrapper h1 {
  margin-top: 200px;
}

/* line 718, scss/style.scss */
#projects {
  height: auto;
  margin-left: 1px;
}

/* line 725, scss/style.scss */
#projects .slides section,
#projects .slides > div,
#projects .slides video, #projects .slides .controller li a, .controller li #projects .slides a, #projects .slides #about .thumb img, #about .thumb #projects .slides img,
#projects .slides #about .thumb svg, #about .thumb #projects .slides svg, #projects .slides .slider img {
  position: relative;
}

/* line 731, scss/style.scss */
#contact .error,
#contact .thanks {
  display: none;
  margin-top: 15px;
}

/* line 735, scss/style.scss */
#contact .error[data-show],
#contact .thanks[data-show] {
  display: block;
}

/* line 739, scss/style.scss */
#contact [data-invalid] {
  box-shadow: inset 0 -2px 0 -1px #999;
}

/* line 743, scss/style.scss */
#contact [data-sent] .copy {
  display: none;
}

/* line 746, scss/style.scss */
#contact [data-sent] .thanks {
  display: initial;
}

/* line 750, scss/style.scss */
#contact .expand {
  top: 20%;
}

/* line 753, scss/style.scss */
#contact label {
  float: left;
  font-family: "Questrial", helvetica, arial, sans-serif;
  text-transform: uppercase;
  width: 110px;
}

/* line 759, scss/style.scss */
#contact span {
  margin-right: 25px;
}

/* line 762, scss/style.scss */
#contact input,
#contact textarea {
  background: none;
  border: none;
  outline: none;
  padding: 0;
  width: 255px;
}

/* line 770, scss/style.scss */
#contact textarea {
  height: 130px;
  resize: none;
}

/* line 774, scss/style.scss */
#contact .wrapper div {
  margin-bottom: 5px;
}

/* line 778, scss/style.scss */
section {
  overflow: hidden;
  position: relative;
}

/* line 781, scss/style.scss */
section .navigate {
  bottom: 20px !important;
  top: initial;
}

/* line 787, scss/style.scss */
.plyr .plyr__controls {
  display: none;
}

/* line 790, scss/style.scss */
.plyr button[data-plyr="play"] {
  display: none;
}

/* line 793, scss/style.scss */
.plyr .plyr__video-embed {
  height: 100vh;
  padding-bottom: 0;
}

/* line 796, scss/style.scss */
.plyr .plyr__video-embed iframe {
  margin-left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}

/* line 802, scss/style.scss */
#notice {
  display: none;
  position: fixed;
  top: 0;
}

@media (max-width: 768px) {
  /* line 808, scss/style.scss */
  .wrapper,
  #notice p {
    left: 32%;
    width: 50%;
  }
  /* line 813, scss/style.scss */
  main #blogs .post {
    width: 68px;
  }
}

@media (max-width: 768px) and (orientation: landscape) {
  /* line 818, scss/style.scss */
  nav {
    display: none;
  }
  /* line 821, scss/style.scss */
  .wrapper {
    max-width: 300px;
    top: 40%;
  }
  /* line 825, scss/style.scss */
  main #logo .wrapper {
    top: 20%;
  }
  /* line 828, scss/style.scss */
  #spinner,
  aside,
  #popup,
  section,
  #notice {
    height: 100vh;
    left: -5.5vw;
    top: 0;
    width: 105.5vw;
  }
  /* line 838, scss/style.scss */
  #notice p {
    left: 45%;
    width: 40%;
  }
  /* line 842, scss/style.scss */
  .slides > div,
  .slider .slides > div,
  section {
    height: 125vh;
  }
}

@media (orientation: landscape) {
  /* line 849, scss/style.scss */
  #notice {
    display: none;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
